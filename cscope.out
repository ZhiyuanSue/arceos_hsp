cscope 15 $HOME/arceos-cv1811h               0000600172
	@apps/c/helloworld/main.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("Hello, %cápp!\n", 'C');

7 
	}
}

	@apps/c/httpclient/httpclient.c

1 
	~<√tdb.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<¨∑/öë.h
>

5 
	~<√töë/ö.h
>

6 
	~<sys/sockë.h
>

8 c⁄° 
	gªque°
[] = "\
 / HTTP/1.1\r\n\
: ident.me\r\n\
: */*\r\n\
\r\n";

14 
	$maö
()

16 
	`puts
("Hello, ArceOS C HTTP client!");

17 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
);

18 i‡(
sock
 == -1) {

19 
	`≥º‹
("socket()Érror");

22 
addröfo
 *
ªs
;

24 i‡(
	`gëaddröfo
("idít.me", 
NULL
, NULL, &
ªs
) != 0) {

25 
	`≥º‹
("getaddrinfo()Érror");

28 
°r
[
INET_ADDRSTRLEN
];

29 i‡(
	`öë_¡›
(
AF_INET
, &(((
sockaddr_ö
 *)(
ªs
->
ai_addr
))->
sö_addr
), 
°r
,

30 
INET_ADDRSTRLEN
Ë=
NULL
) {

31 
	`≥º‹
("inet_ntop()Érror");

34 
	`¥ötf
("IP: %s\n", 
°r
);

35 ((
sockaddr_ö
 *)(
ªs
->
ai_addr
))->
sö_p‹t
 = 
	`ht⁄s
(80);

36 i‡(
	`c⁄√˘
(
sock
, 
ªs
->
ai_addr
, (*(res->ai_addr))) != 0) {

37 
	`≥º‹
("connect()Érror");

40 
ªbuf
[2000] = {};

41 i‡(
	`£nd
(
sock
, 
ªque°
, 
	`°æí
(request), 0) == -1) {

42 
	`≥º‹
("send()Érror");

45 
ssize_t
 
l
 = 
	`ªcv
(
sock
, 
ªbuf
, 2000, 0);

46 i‡(
l
 == -1) {

47 
	`≥º‹
("recv()Érror");

50 
ªbuf
[
l
] = '\0';

51 
	`¥ötf
("%s\n", 
ªbuf
);

53 
	}
}

	@apps/c/httpserver/httpserver.c

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

5 
	~<¨∑/öë.h
>

6 
	~<√töë/ö.h
>

7 
	~<sys/sockë.h
>

9 c⁄° 
	ghódî
[] = "\
/1.1 200 OK\r\n\
-Type:Åext/html\r\n\
-Length: %u\r\n\
: close\r\n\
\r\n\
";

17 c⁄° 
	gc⁄ã¡
[] = "<html>\n\
<head>\n\
<title>Hello, ArceOS</title>\n\
</head>\n\
<body>\n\
<center>\n\
<h1>Hello, <a href=\"https://github.com/rcore-os/arceos\">ArceOS</a></h1>\n\
</center>\n\
<hr>\n\
<center>\n\
<i>Powered by <a href=\"https://github.com/rcore-os/arceos/tree/main/apps/net/httpserver\">ArceOSÉxample HTTP server</a> v0.1.0</i>\n\
</center>\n\
</body>\n\
</html>\n\
";

33 
	$maö
()

35 
	`puts
("Hello, ArceOS C HTTP server!");

36 
sockaddr_ö
 
loˇl
, 
ªmŸe
;

37 
addr_Àn
 = (
ªmŸe
);

38 
loˇl
.
sö_Ámûy
 = 
AF_INET
;

39 i‡(
	`öë_±⁄
(
AF_INET
, "0.0.0.0", &(
loˇl
.
sö_addr
)) != 1) {

40 
	`≥º‹
("inet_pton()Érror");

43 
loˇl
.
sö_p‹t
 = 
	`ht⁄s
(5555);

44 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
);

45 i‡(
sock
 == -1) {

46 
	`≥º‹
("socket()Érror");

49 i‡(
	`böd
(
sock
, (
sockaddr
 *)&
loˇl
, (local)) != 0) {

50 
	`≥º‹
("bind()Érror");

53 i‡(
	`li°í
(
sock
, 0) != 0) {

54 
	`≥º‹
("listen()Érror");

57 
	`puts
("listen on: http://0.0.0.0:5555/");

58 
buf
[1024] = {};

59 
˛õ¡
;

60 
ª•⁄£
[1024] = {};

61 
	`¢¥ötf
(
ª•⁄£
, 1024, 
hódî
, 
	`°æí
(
c⁄ã¡
));

62 
	`°rˇt
(
ª•⁄£
, 
c⁄ã¡
);

64 
˛õ¡
 = 
	`ac˚±
(
sock
, (
sockaddr
 *)&
ªmŸe
, (
sockÀn_t
 *)&
addr_Àn
);

65 i‡(
˛õ¡
 == -1) {

66 
	`≥º‹
("accept()Érror");

69 
	`¥ötf
("√w clõ¡ %d\n", 
˛õ¡
);

70 i‡(
	`ªcv
(
˛õ¡
, 
buf
, 1024, 0) == -1) {

71 
	`≥º‹
("recv()Érror");

74 
ssize_t
 
l
 = 
	`£nd
(
˛õ¡
, 
ª•⁄£
, 
	`°æí
(response), 0);

75 i‡(
l
 == -1) {

76 
	`≥º‹
("send()Érror");

79 i‡(
	`˛o£
(
˛õ¡
) == -1) {

80 
	`≥º‹
("close()Érror");

83 
	`¥ötf
("˛õ¡ %d clo£: %ld byã†£¡\n", 
˛õ¡
, 
l
);

85 i‡(
	`˛o£
(
sock
) == -1) {

86 
	`≥º‹
("close()Érror");

90 
	}
}

	@apps/c/memtest/memtest.c

1 
	~<°döt.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	$maö
()

7 
	`puts
("Running memoryÅests...");

8 
uöçå_t
 *
brk
 = (uöçå_à*)
	`mÆloc
(0);

9 
	`¥ötf
("t› o‡hóp=%p\n", 
brk
);

11 
n
 = 9;

12 
i
 = 0;

13 
uöçå_t
 **
p
 = (uöçå_à**)
	`mÆloc
(
n
 * (
uöt64_t
));

14 
	`¥ötf
("%d(+8)ByãáŒoˇãd:Ö=%p\n", 
n
 * (
uöt64_t
), 
p
,Ö[1]);

15 
	`¥ötf
("Æloˇã %d(+8)Byã f‹ %dÅimes:\n", (
uöt64_t
), 
n
);

16 
i
 = 0; i < 
n
; i++) {

17 
p
[
i
] = (
uöçå_t
 *)
	`mÆloc
((
uöt64_t
));

18 *
p
[
i
] = 233;

19 
	`¥ötf
("Æloˇãdáddr=%p\n", 
p
[
i
]);

21 
i
 = 0; i < 
n
; i++) {

22 
	`‰ì
(
p
[
i
]);

24 
	`‰ì
(
p
);

25 
	`puts
("MemoryÅestsÑun OK!");

27 
	}
}

	@apps/c/pthread/basic/main.c

1 
	~<as£π.h
>

2 
	~<±hªad.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<uni°d.h
>

7 *
	$ThªadFunc1
(*
¨g
)

9 i‡(
¨g
 =
NULL
) {

10 
	`puts
("Pass NULLárgument");

11  
NULL
;

13 
buf
[64];

14 
	`•rötf
(
buf
, "Recõve: %s", (*)
¨g
);

15 
	`puts
(
buf
);

18 
	}
}

20 *
	$ThªadFunc2
(*
¨g
)

22 
	`puts
("A message before callÖthread_exit");

23 
	`±hªad_exô
("Exit message");

24 
	`puts
("This message shouldÇot beÖrinted");

25 
	}
}

27 
±hªad_muãx_t
 
	glock
 = 
PTHREAD_MUTEX_INITIALIZER
;

29 *
	$ThªadFunc3
(*
¨g
)

31 
	`±hªad_muãx_lock
(&
lock
);

33 
vÆue
 = *(*)
¨g
;

36 
i
 = 0; i < 100000; i++Ë
	`gëpid
();

38 *(*)
¨g
 = 
vÆue
 + 1;

40 
	`±hªad_muãx_u∆ock
(&
lock
);

42 
	}
}

44 
	$ã°_¸óã_joö
()

46 
ªs
;

47 *
s
 = "MainÅhreadÖass message";

48 *
thªad_ªsu…
;

49 
±hªad_t
 
t1
, 
t2
;

50 
ªs
 = 
	`±hªad_¸óã
(&
t1
, 
NULL
, 
ThªadFunc1
, NULL);

51 i‡(
ªs
 != 0) {

52 
	`puts
("failÅo createÅhread1");

56 
ªs
 = 
	`±hªad_joö
(
t1
, 
NULL
);

57 i‡(
ªs
 != 0) {

58 
	`puts
("FirstÖthread join fail");

61 
ªs
 = 
	`±hªad_¸óã
(&
t2
, 
NULL
, 
ThªadFunc1
, (*)
s
);

62 i‡(
ªs
 != 0) {

63 
	`puts
("failÅo createÅhread2");

67 
ªs
 = 
	`±hªad_joö
(
t2
, &
thªad_ªsu…
);

68 i‡(
ªs
 != 0) {

69 
	`puts
("SecondÖthread join fail");

72 
	`¥ötf
("ã°_¸óã_joö: %s\n", (*)
thªad_ªsu…
);

73 
	}
}

75 
	$ã°_¸óã_exô
()

77 
ªs
;

78 *
thªad_ªsu…
;

79 
±hªad_t
 
t1
;

81 
ªs
 = 
	`±hªad_¸óã
(&
t1
, 
NULL
, 
ThªadFunc2
, NULL);

82 i‡(
ªs
 != 0) {

83 
	`puts
("pthread create fail");

87 
ªs
 = 
	`±hªad_joö
(
t1
, &
thªad_ªsu…
);

88 i‡(
ªs
 != 0) {

89 
	`puts
("pthread join fail");

92 
	`¥ötf
("ã°_¸óã_exô: %s\n", (*)
thªad_ªsu…
);

93 
	}
}

95 
	$ã°_muãx
()

97 c⁄° 
NUM_THREADS
 = 100;

98 
d©a
 = 0;

99 
±hªad_t
 
t
[
NUM_THREADS
];

101 
i
 = 0; i < 
NUM_THREADS
; i++) {

102 
ªs
 = 
	`±hªad_¸óã
(&
t
[
i
], 
NULL
, 
ThªadFunc3
, &
d©a
);

103 i‡(
ªs
 != 0) {

104 
	`puts
("pthread create fail");

109 
i
 = 0; i < 
NUM_THREADS
; i++) {

110 
ªs
 = 
	`±hªad_joö
(
t
[
i
], 
NULL
);

111 i‡(
ªs
 != 0) {

112 
	`puts
("pthread join fail");

116 
	`¥ötf
("ã°_muãx: d©®%d\n", 
d©a
);

117 
	`as£π
(
d©a
 =
NUM_THREADS
);

118 
	}
}

120 
	$maö
()

122 
±hªad_t
 
maö_thªad
 = 
	`±hªad_£lf
();

123 
	`as£π
(
maö_thªad
 != 0);

125 
	`ã°_¸óã_joö
();

126 
	`ã°_¸óã_exô
();

127 
	`ã°_muãx
();

128 
	`puts
("(C)Pthread basicÅestsÑun OK!");

131 
	}
}

	@apps/c/pthread/parallel/main.c

1 
	~<±hªad.h
>

2 
	~<°döt.h
>

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<uni°d.h
>

8 
	#NUM_DATA
 2000000

	)

9 
	#NUM_TASKS
 16

	)

11 
uöt64_t
 
	g¨øy
[
NUM_DATA
] = {0};

13 
uöt64_t
 
	$my_sqπ
(
uöt64_t
 
n
)

15 
uöt64_t
 
x
 = 
n
;

17 i‡(
x
 * x <
n
 && (x + 1) * (x + 1) >Ç)

18  
x
;

20 
x
 = (x + 
n
 / x) / 2;

22 
	}
}

24 *
	$ThªadFunc
(*
¨g
)

26 
id
 = *(*)
¨g
;

27 
À·
 = (
NUM_DATA
 / 
NUM_TASKS
Ë* 
id
;

28 
right
 =

29 (
À·
 + (
NUM_DATA
 / 
NUM_TASKS
)) < NUM_DATA ? (left + (NUM_DATA / NUM_TASKS)) : NUM_DATA;

31 
buf
[512];

32 
	`•rötf
(
buf
, "∑π %d: [%d, %d)", 
id
, 
À·
, 
right
);

33 
	`puts
(
buf
);

35 
uöt64_t
 *
∑πül_sum
 = (uöt64_à*)
	`ˇŒoc
(1, (uint64_t));

36 
i
 = 
À·
; i < 
right
; i++Ë*
∑πül_sum
 +
	`my_sqπ
(
¨øy
[i]);

38 
	`•rötf
(
buf
, "∑π %d föished", 
id
);

39 
	`puts
(
buf
);

40  (*)(
∑πül_sum
);

41 
	}
}

43 
	$maö
()

45 
i
 = 0; i < 
NUM_DATA
; i++Ë
¨øy
[i] = 
	`ønd
();

47 
uöt64_t
 
ex≥˘
 = 0;

48 
i
 = 0; i < 
NUM_DATA
; i++Ë
ex≥˘
 +
	`my_sqπ
(
¨øy
[i]);

50 
thªad_∑π
[
NUM_TASKS
];

51 
i
 = 0; i < 
NUM_TASKS
; i++Ë
thªad_∑π
[i] = i;

53 
±hªad_t
 
èsks
[
NUM_TASKS
];

54 
i
 = 0; i < 
NUM_TASKS
; i++) {

55 
±hªad_t
 
t
;

56 
	`±hªad_¸óã
(&
t
, 
NULL
, 
ThªadFunc
, (*)(&
thªad_∑π
[
i
]));

57 
èsks
[
i
] = 
t
;

60 
uöt64_t
 *
∑πül_sum
;

61 
uöt64_t
 
a˘uÆ
 = 0;

62 
i
 = 0; i < 
NUM_TASKS
; i++) {

63 
	`±hªad_joö
(
èsks
[
i
], (*)(&
∑πül_sum
));

64 
a˘uÆ
 +*
∑πül_sum
;

67 
buf
[64];

68 
	`•rötf
(
buf
, "a˘uÆ sum = %Œd", 
a˘uÆ
);

69 
	`puts
(
buf
);

71 i‡(
a˘uÆ
 =
ex≥˘
)

72 
	`puts
("(C)PthreadÖarallelÑun OK!");

74 
	`puts
("(C)PthreadÖarallelÑun FAIL!");

77 
	}
}

	@apps/c/pthread/pipe/main.c

1 
	~<±hªad.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

6 c⁄° 
	gROUND
 = 5;

8 *
	$ChûdFunc
(*
¨g
)

10 *
fd
 = (*)
¨g
;

11 
i
 = 0;

12 
buf
[32];

13 
i
++ < 
ROUND
) {

14 
	`•rötf
(
buf
, "ChûdÅhªad síd mesßge(%d)", 
i
);

15 
	`puts
(
buf
);

16 
	`•rötf
(
buf
, "Iám chûd(%d)!", 
i
);

17 
	`wrôe
(
fd
[1], 
buf
, 
	`°æí
(buf) + 1);

18 
	`¶ìp
(1);

20 
	`˛o£
(
fd
[1]);

21 
	}
}

23 
	$maö
()

25 
fd
[2];

26 
ªt
 = 
	`pùe
(
fd
);

27 i‡(
ªt
 != 0) {

28 
	`puts
("FailÅo createÖipe");

32 
±hªad_t
 
t1
;

33 
	`±hªad_¸óã
(&
t1
, 
NULL
, 
ChûdFunc
, (*)
fd
);

35 
msg
[100];

36 
j
 = 0;

37 
j
++ < 
ROUND
) {

38 
	`ªad
(
fd
[0], 
msg
, 15);

39 
buf
[64];

40 
	`•rötf
(
buf
, "MaöÅhªadÑecõvê(%d): %s", 
j
, 
msg
);

41 
	`puts
(
buf
);

44 
	`puts
("(C)PipeÅestsÑun OK");

46 
	}
}

	@apps/c/pthread/sleep/main.c

1 
	~<±hªad.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<sys/time.h
>

5 
	~<time.h
>

6 
	~<uni°d.h
>

8 c⁄° 
	gNUM_TASKS
 = 5;

10 
	$∑r£_time
(*
buf
, 
£c
, 
u£c
)

12 
n
 = 0;

13 
n
 +
	`•rötf
(
buf
, "%d.", 
£c
);

14 
n
 +
	`•rötf
(
buf
 +Ç, "%d", 
u£c
 / 100000 % 10);

15 
n
 +
	`•rötf
(
buf
 +Ç, "%d", 
u£c
 / 10000 % 10);

16 
n
 +
	`•rötf
(
buf
 +Ç, "%d", 
u£c
 / 1000 % 10);

17 
n
 +
	`•rötf
(
buf
 +Ç, "%d", 
u£c
 / 100 % 10);

18 
n
 +
	`•rötf
(
buf
 +Ç, "%d", 
u£c
 / 10 % 10);

19 
n
 +
	`•rötf
(
buf
 +Ç, "%d", 
u£c
 % 10);

20  
n
;

21 
	}
}

23 *
	$tickfunc
(*
¨g
)

25 
buf
[32];

26 
i
 = 0; i < 30; i++) {

27 
	`•rötf
(
buf
, "Åick %d", 
i
);

28 
	`puts
(
buf
);

29 
	`u¶ìp
(500000);

31  
NULL
;

32 
	}
}

34 *
	$tickfunc2
(*
¨g
)

36 
pid_t
 
èsk_id
 = 
	`gëpid
();

37 
buf0
[128];

38 
buf1
[128];

40 
j
 = 0; j < 3; j++) {

41 
¶ìp_£c
 = *(*)
¨g
 + 1;

42 
	`•rötf
(
buf0
, "èsk %d sÀï %d sec⁄d†(%dË...", 
èsk_id
, 
¶ìp_£c
, 
j
);

43 
	`puts
(
buf0
);

44 
time•ec
 
bef‹e
, 
œãr
;

45 
	`˛ock_gëtime
(0, &
bef‹e
);

46 
	`¶ìp
(
¶ìp_£c
);

47 
	`˛ock_gëtime
(0, &
œãr
);

48 
£c
 = 
œãr
.
tv_£c
 - 
bef‹e
.tv_sec;

49 
n£c
 = 
œãr
.
tv_n£c
 - 
bef‹e
.tv_nsec;

50 i‡(
n£c
 < 0) {

51 
£c
 -= 1;

52 
n£c
 += 1000000000;

54 
n
 = 
	`•rötf
(
buf1
, "èsk %dá˘uÆly sÀï ", 
èsk_id
);

55 
n
 +
	`∑r£_time
(
buf1
 +Ç, ()
£c
, ()
n£c
 / 1000);

56 
	`•rötf
(
buf1
 + 
n
, " sec⁄d†(%dË...", 
j
);

57 
	`puts
(
buf1
);

59  
NULL
;

60 
	}
}

62 
	$maö
()

64 
	`puts
("Hello, mainÅask!");

65 
time•ec
 
bef‹e
, 
œãr
;

66 
	`˛ock_gëtime
(0, &
bef‹e
);

67 
	`¶ìp
(1);

68 
	`˛ock_gëtime
(0, &
œãr
);

69 
£c
 = 
œãr
.
tv_£c
 - 
bef‹e
.tv_sec;

70 
n£c
 = 
œãr
.
tv_n£c
 - 
bef‹e
.tv_nsec;

71 i‡(
n£c
 < 0) {

72 
£c
 -= 1;

73 
n£c
 += 1000000000;

75 
buf
[128] = {0};

76 
n
 = 
	`•rötf
(
buf
, "mainÅask sleep for ");

77 
n
 +
	`∑r£_time
(
buf
 +Ç, ()
£c
, ()
n£c
 / 1000);

78 
	`•rötf
(
buf
 + 
n
, "s");

79 
	`puts
(
buf
);

81 
±hªad_t
 
t1
;

82 
	`±hªad_¸óã
(&
t1
, 
NULL
, 
tickfunc
, NULL);

84 
±hªad_t
 
èsks
[
NUM_TASKS
 + 1];

85 
¶ìp_times
[
NUM_TASKS
];

87 
i
 = 0; i < 
NUM_TASKS
; i++) {

88 
¶ìp_times
[
i
] = i;

91 
èsks
[
NUM_TASKS
] = 
t1
;

93 
i
 = 0; i < 
NUM_TASKS
; i++) {

94 
±hªad_t
 
t
;

95 
	`±hªad_¸óã
(&
t
, 
NULL
, 
tickfunc2
, (*)&
¶ìp_times
[
i
]);

96 
èsks
[
i
] = 
t
;

99 
i
 = 0; i < 
NUM_TASKS
 + 1; i++) {

100 
	`±hªad_joö
(
èsks
[
i
], 
NULL
);

103 
	`puts
("(C)SleepÅestsÑun OK!");

104 
	}
}

	@apps/c/sqlite3/main.c

1 
	~<sqlôe3.h
>

2 
	~<°ddef.h
>

3 
	~<°dio.h
>

4 
	~<°rög.h
>

6 
	$ˇŒback
(*
NŸU£d
, 
¨gc
, **
¨gv
, **
azCﬁName
)

8 
NŸU£d
 = 
NULL
;

10 
i
 = 0; i < 
¨gc
; ++i) {

11 
	`¥ötf
("%†%s\n", 
azCﬁName
[
i
], (
¨gv
[i] ?árgv[i] : "NULL"));

14 
	`¥ötf
("\n");

17 
	}
}

19 
	$exec
(
sqlôe3
 *
db
, *
sql
)

21 
	`¥ötf
("sqlôêexec:\¿ %s\n", 
sql
);

22 *
îrmsg
 = 
NULL
;

23 
rc
 = 
	`sqlôe3_exec
(
db
, 
sql
, 
NULL
, NULL, &
îrmsg
);

24 i‡(
rc
 !
SQLITE_OK
) {

25 
	`¥ötf
("sqlôêexe¯îr‹: %s\n", 
îrmsg
);

27 
	}
}

29 
	$quîy
(
sqlôe3
 *
db
, *
sql
)

31 
	`¥ötf
("sqlôêquîy:\¿ %s\n", 
sql
);

32 *
îrmsg
 = 
NULL
;

33 
rc
 = 
	`sqlôe3_exec
(
db
, 
sql
, 
ˇŒback
, 
NULL
, &
îrmsg
);

35 i‡(
rc
 !
SQLITE_OK
) {

36 
	`¥ötf
("%s\n", 
îrmsg
);

38 
	}
}

40 
	$quîy_ã°
(
sqlôe3
 *
db
, c⁄° *
¨gs
)

42 
	`puts
("======== init userÅable ========");

43 
	`exec
(
db
, "createÅable user("

49 
	`puts
("======== insert user 1, 2, 3 into userÅable ========");

51 
cmd
[256] = {0};

52 
	`•rötf
(
cmd
,

55 
¨gs
,árgs,árgs);

56 
	`exec
(
db
, 
cmd
);

58 
	`puts
("======== selectáll ========");

59 
	`quîy
(
db
, "select * from user");

61 
	`puts
("======== select id = 2 ========");

62 
	`quîy
(
db
, "select * from user where id = 2");

63 
	}
}

65 
	$mem‹y
()

67 
sqlôe3
 *
db
;

68 
ªt
 = 
	`sqlôe3_›í
(":mem‹y:", &
db
);

69 
	`¥ötf
("sqlôê›í mem‹y sètu†%d \n", 
ªt
);

71 
	`quîy_ã°
(
db
, "memory");

72 
	}
}

74 
	$fûe
()

76 
sqlôe3
 *
db
;

77 
ªt
 = 
	`sqlôe3_›í
("fûe.sqlôe", &
db
);

78 
	`¥ötf
("sqlôê›í /fûe.sqlôê°©u†%d \n", 
ªt
);

80 i‡(
ªt
 != 0) {

81 
	`¥ötf
("sqlite openÉrror");

85 
	`quîy_ã°
(
db
, "file");

86 
	`sqlôe3_˛o£
(
db
);

87 
	}
}

89 
	$maö
()

91 
	`¥ötf
("sqlôêvîsi⁄: %s\n", 
	`sqlôe3_libvîsi⁄
());

93 
	`mem‹y
();

94 
	`fûe
();

96 
	}
}

	@apps/c/udpserver/udpserver.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<¨∑/öë.h
>

4 
	~<√töë/ö.h
>

5 
	~<sys/sockë.h
>

7 c⁄° 
	gªs_suffix
[11] = "_response\n";

9 
	$maö
()

11 
	`puts
("Hello, ArceOS C UDP server!");

12 
sockaddr_ö
 
loˇl
, 
ªmŸe
;

13 
addr_Àn
 = (
ªmŸe
);

14 
loˇl
.
sö_Ámûy
 = 
AF_INET
;

15 i‡(
	`öë_±⁄
(
AF_INET
, "0.0.0.0", &(
loˇl
.
sö_addr
)) != 1) {

16 
	`≥º‹
("inet_pton()Érror");

19 
loˇl
.
sö_p‹t
 = 
	`ht⁄s
(5555);

20 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 
IPPROTO_UDP
);

21 i‡(
sock
 == -1) {

22 
	`≥º‹
("socket()Érror");

25 i‡(
	`böd
(
sock
, (
sockaddr
 *)&
loˇl
, (local)) != 0) {

26 
	`≥º‹
("bind()Érror");

29 
	`puts
("listen on: 0.0.0.0:5555");

30 
buf
[1024] = {};

32 
ssize_t
 
l
 =

33 
	`ªcv‰om
(
sock
, 
buf
, 1024, 0, (
sockaddr
 *)&
ªmŸe
, (
sockÀn_t
 *)&
addr_Àn
);

34 i‡(
l
 == -1) {

35 
	`≥º‹
("recvfrom()Érror");

38 
uöt8_t
 *
addr
 = (uöt8_à*)&(
ªmŸe
.
sö_addr
);

39 
	`¥ötf
("ªcv: %d Byã†‰om %d.%d.%d.%d:%d\n", 
l
, 
addr
[0],áddr[1],áddr[2],áddr[3],

40 
	`¡ohs
(
ªmŸe
.
sö_p‹t
));

41 
buf
[
l
] = '\0';

42 
	`¥ötf
("%s\n", 
buf
);

43 i‡(
l
 > 1024 - 10) {

44 
	`puts
("received messageÅooÜong");

47 
	`°∫˝y
(
buf
 + 
l
 - 1, 
ªs_suffix
, 10);

48 i‡(
	`£ndto
(
sock
, 
buf
, 
l
 + 10, 0, (
sockaddr
 *)&
ªmŸe
, 
addr_Àn
) == -1) {

49 
	`≥º‹
("sendto()Érror");

54 
	}
}

	@crates/axerrno/src/errno.h

3 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


4 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

6 
	#EPERM
 1

	)

7 
	#ENOENT
 2

	)

8 
	#ESRCH
 3

	)

9 
	#EINTR
 4

	)

10 
	#EIO
 5

	)

11 
	#ENXIO
 6

	)

12 
	#E2BIG
 7

	)

13 
	#ENOEXEC
 8

	)

14 
	#EBADF
 9

	)

15 
	#ECHILD
 10

	)

16 
	#EAGAIN
 11

	)

17 
	#ENOMEM
 12

	)

18 
	#EACCES
 13

	)

19 
	#EFAULT
 14

	)

20 
	#ENOTBLK
 15

	)

21 
	#EBUSY
 16

	)

22 
	#EEXIST
 17

	)

23 
	#EXDEV
 18

	)

24 
	#ENODEV
 19

	)

25 
	#ENOTDIR
 20

	)

26 
	#EISDIR
 21

	)

27 
	#EINVAL
 22

	)

28 
	#ENFILE
 23

	)

29 
	#EMFILE
 24

	)

30 
	#ENOTTY
 25

	)

31 
	#ETXTBSY
 26

	)

32 
	#EFBIG
 27

	)

33 
	#ENOSPC
 28

	)

34 
	#ESPIPE
 29

	)

35 
	#EROFS
 30

	)

36 
	#EMLINK
 31

	)

37 
	#EPIPE
 32

	)

38 
	#EDOM
 33

	)

39 
	#ERANGE
 34

	)

40 
	#EDEADLK
 35

	)

41 
	#ENAMETOOLONG
 36

	)

42 
	#ENOLCK
 37

	)

51 
	#ENOSYS
 38

	)

52 
	#ENOTEMPTY
 39

	)

53 
	#ELOOP
 40

	)

55 
	#ENOMSG
 42

	)

56 
	#EIDRM
 43

	)

57 
	#ECHRNG
 44

	)

58 
	#EL2NSYNC
 45

	)

59 
	#EL3HLT
 46

	)

60 
	#EL3RST
 47

	)

61 
	#ELNRNG
 48

	)

62 
	#EUNATCH
 49

	)

63 
	#ENOCSI
 50

	)

64 
	#EL2HLT
 51

	)

65 
	#EBADE
 52

	)

66 
	#EBADR
 53

	)

67 
	#EXFULL
 54

	)

68 
	#ENOANO
 55

	)

69 
	#EBADRQC
 56

	)

70 
	#EBADSLT
 57

	)

72 
	#EBFONT
 59

	)

73 
	#ENOSTR
 60

	)

74 
	#ENODATA
 61

	)

75 
	#ETIME
 62

	)

76 
	#ENOSR
 63

	)

77 
	#ENONET
 64

	)

78 
	#ENOPKG
 65

	)

79 
	#EREMOTE
 66

	)

80 
	#ENOLINK
 67

	)

81 
	#EADV
 68

	)

82 
	#ESRMNT
 69

	)

83 
	#ECOMM
 70

	)

84 
	#EPROTO
 71

	)

85 
	#EMULTIHOP
 72

	)

86 
	#EDOTDOT
 73

	)

87 
	#EBADMSG
 74

	)

88 
	#EOVERFLOW
 75

	)

89 
	#ENOTUNIQ
 76

	)

90 
	#EBADFD
 77

	)

91 
	#EREMCHG
 78

	)

92 
	#ELIBACC
 79

	)

93 
	#ELIBBAD
 80

	)

94 
	#ELIBSCN
 81

	)

95 
	#ELIBMAX
 82

	)

96 
	#ELIBEXEC
 83

	)

97 
	#EILSEQ
 84

	)

98 
	#ERESTART
 85

	)

99 
	#ESTRPIPE
 86

	)

100 
	#EUSERS
 87

	)

101 
	#ENOTSOCK
 88

	)

102 
	#EDESTADDRREQ
 89

	)

103 
	#EMSGSIZE
 90

	)

104 
	#EPROTOTYPE
 91

	)

105 
	#ENOPROTOOPT
 92

	)

106 
	#EPROTONOSUPPORT
 93

	)

107 
	#ESOCKTNOSUPPORT
 94

	)

108 
	#EOPNOTSUPP
 95

	)

109 
	#EPFNOSUPPORT
 96

	)

110 
	#EAFNOSUPPORT
 97

	)

111 
	#EADDRINUSE
 98

	)

112 
	#EADDRNOTAVAIL
 99

	)

113 
	#ENETDOWN
 100

	)

114 
	#ENETUNREACH
 101

	)

115 
	#ENETRESET
 102

	)

116 
	#ECONNABORTED
 103

	)

117 
	#ECONNRESET
 104

	)

118 
	#ENOBUFS
 105

	)

119 
	#EISCONN
 106

	)

120 
	#ENOTCONN
 107

	)

121 
	#ESHUTDOWN
 108

	)

122 
	#ETOOMANYREFS
 109

	)

123 
	#ETIMEDOUT
 110

	)

124 
	#ECONNREFUSED
 111

	)

125 
	#EHOSTDOWN
 112

	)

126 
	#EHOSTUNREACH
 113

	)

127 
	#EALREADY
 114

	)

128 
	#EINPROGRESS
 115

	)

129 
	#ESTALE
 116

	)

130 
	#EUCLEAN
 117

	)

131 
	#ENOTNAM
 118

	)

132 
	#ENAVAIL
 119

	)

133 
	#EISNAM
 120

	)

134 
	#EREMOTEIO
 121

	)

135 
	#EDQUOT
 122

	)

137 
	#ENOMEDIUM
 123

	)

138 
	#EMEDIUMTYPE
 124

	)

139 
	#ECANCELED
 125

	)

140 
	#ENOKEY
 126

	)

141 
	#EKEYEXPIRED
 127

	)

142 
	#EKEYREVOKED
 128

	)

143 
	#EKEYREJECTED
 129

	)

144 
	#EOWNERDEAD
 130

	)

145 
	#ENOTRECOVERABLE
 131

	)

146 
	#ERFKILL
 132

	)

147 
	#EHWPOISON
 133

	)

	@ulib/c_libax/include/arpa/inet.h

1 #i‚de‡
_ARPA_INET_H


2 
	#_ARPA_INET_H


	)

4 
	~<√töë/ö.h
>

6 
uöt32_t
 
ht⁄l
(uint32_t);

7 
uöt16_t
 
ht⁄s
(uint16_t);

8 
uöt32_t
 
¡ohl
(uint32_t);

9 
uöt16_t
 
¡ohs
(uint16_t);

11 
öë_±⁄
(, c⁄° *
__ª°ri˘
, *__restrict);

12 c⁄° *
öë_¡›
(, c⁄° *
__ª°ri˘
, *__ª°ri˘, 
sockÀn_t
);

	@ulib/c_libax/include/assert.h

1 #i‚de‡
__ASSERT_H__


2 
	#__ASSERT_H__


	)

4 
	#as£π
(
x
Ë(()((xË|| (
	`__as£π_Áû
(#x, 
__FILE__
, 
__LINE__
, 
__func__
), 0)))

	)

6 
_N‹ëu∫
 
__as£π_Áû
(const *, const *, , const *);

	@ulib/c_libax/include/ctype.h

1 #i‚de‡
_CTYPE_H


2 
	#_CTYPE_H


	)

4 
tﬁowî
(
__c
);

5 
touµî
(
__c
);

7 
	#ißÕha
(
a
Ë(((()◊Ë| 32Ë- 'a'Ë< 26)

	)

8 
	#isdigô
(
a
Ë((()◊Ë- '0'Ë< 10)

	)

9 
	#i¶owî
(
a
Ë((()◊Ë- 'a'Ë< 26)

	)

10 
	#isuµî
(
a
Ë((()◊Ë- 'A'Ë< 26)

	)

11 
	#i•röt
(
a
Ë((()◊)-0x20Ë< 0x5f)

	)

12 
	#isgøph
(
a
Ë((()◊)-0x21Ë< 0x5e)

	)

13 
	#iß um
(
a
Ë((
	`ißÕha
◊Ë|| 
	`isdigô
◊)))

	)

14 
	#is˙ål
(
a
Ë(((Ô < 0x20 ||á =0x7f))

	)

15 
	#i•un˘
(
a
Ë((
	`isgøph
◊Ë&& !
	`iß um
◊)))

	)

16 
	#isxdigô
(
a
Ë((
	`isdigô
◊Ë|| ((Ô | 32Ë- 'a' < 6))

	)

17 
	#ißscii
(
a
Ë((!◊ & ~0x7f)))

	)

18 
	#is•a˚
(
a
Ë(◊ =' ' || (Ô - '\t' < 5))

	)

	@ulib/c_libax/include/dirent.h

1 #i‚de‡
_DIRENT_H


2 
	#_DIRENT_H


	)

4 
	~<sys/ty≥s.h
>

6 
	s__dú°ªam
 {

7 
	mãŒ
;

8 
	mfd
;

9 
	mbuf_pos
;

10 
	mbuf_íd
;

11 
	mlock
[1];

12 
	mbuf
[2048];

15 
__dú°ªam
 
	tDIR
;

17 
	sdúít
 {

18 
öo_t
 
	md_öo
;

19 
off_t
 
	md_off
;

20 
	md_ª˛í
;

21 
	md_ty≥
;

22 
	md_«me
[256];

25 
˛o£dú
(
DIR
 *);

26 
DIR
 *
fd›ídú
();

27 
dúfd
(
DIR
 *);

29 
	#DT_UNKNOWN
 0

	)

30 
	#DT_FIFO
 1

	)

31 
	#DT_CHR
 2

	)

32 
	#DT_DIR
 4

	)

33 
	#DT_BLK
 6

	)

34 
	#DT_REG
 8

	)

35 
	#DT_LNK
 10

	)

36 
	#DT_SOCK
 12

	)

37 
	#DT_WHT
 14

	)

38 
	#IFTODT
(
x
Ë((xË>> 12 & 017)

	)

39 
	#DTTOIF
(
x
Ë((xË<< 12)

	)

	@ulib/c_libax/include/endian.h

1 #i‚de‡
_ENDIAN_H


2 
	#_ENDIAN_H


	)

4 
	~<°döt.h
>

5 
	#__BYTE_ORDER
 1234

	)

6 
	#__LITTLE_ENDIAN
 1234

	)

7 
	#__BIG_ENDIAN
 4321

	)

8 
	#__PDP_ENDIAN
 3412

	)

10 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

11 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

12 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

13 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

15 
__ölöe
 
uöt16_t
 
	$__bsw≠16
(
uöt16_t
 
__x
)

17  
__x
 << 8 | __x >> 8;

18 
	}
}

20 
__ölöe
 
uöt32_t
 
	$__bsw≠32
(
uöt32_t
 
__x
)

22  
__x
 >> 24 | (__x >> 8 & 0xff00) | (__x << 8 & 0xff0000) | __x << 24;

23 
	}
}

25 
__ölöe
 
uöt64_t
 
	$__bsw≠64
(
uöt64_t
 
__x
)

27  (
	`__bsw≠32
(
__x
) + 0ULL) << 32 | __bswap32(__x >> 32);

28 
	}
}

30 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


31 
	#htobe16
(
x
Ë
	`__bsw≠16
(x)

	)

32 
	#be16toh
(
x
Ë
	`__bsw≠16
(x)

	)

33 
	#htobe32
(
x
Ë
	`__bsw≠32
(x)

	)

34 
	#be32toh
(
x
Ë
	`__bsw≠32
(x)

	)

35 
	#htobe64
(
x
Ë
	`__bsw≠64
(x)

	)

36 
	#be64toh
(
x
Ë
	`__bsw≠64
(x)

	)

37 
	#htﬁe16
(
x
Ë(
uöt16_t
)(x)

	)

38 
	#À16toh
(
x
Ë(
uöt16_t
)(x)

	)

39 
	#htﬁe32
(
x
Ë(
uöt32_t
)(x)

	)

40 
	#À32toh
(
x
Ë(
uöt32_t
)(x)

	)

41 
	#htﬁe64
(
x
Ë(
uöt64_t
)(x)

	)

42 
	#À64toh
(
x
Ë(
uöt64_t
)(x)

	)

44 
	#htobe16
(
x
Ë(
uöt16_t
)(x)

	)

45 
	#be16toh
(
x
Ë(
uöt16_t
)(x)

	)

46 
	#htobe32
(
x
Ë(
uöt32_t
)(x)

	)

47 
	#be32toh
(
x
Ë(
uöt32_t
)(x)

	)

48 
	#htobe64
(
x
Ë(
uöt64_t
)(x)

	)

49 
	#be64toh
(
x
Ë(
uöt64_t
)(x)

	)

50 
	#htﬁe16
(
x
Ë
	`__bsw≠16
(x)

	)

51 
	#À16toh
(
x
Ë
	`__bsw≠16
(x)

	)

52 
	#htﬁe32
(
x
Ë
	`__bsw≠32
(x)

	)

53 
	#À32toh
(
x
Ë
	`__bsw≠32
(x)

	)

54 
	#htﬁe64
(
x
Ë
	`__bsw≠64
(x)

	)

55 
	#À64toh
(
x
Ë
	`__bsw≠64
(x)

	)

	@ulib/c_libax/include/errno.h

1 #i‚de‡
__ERRNO_H__


2 
	#__ERRNO_H__


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

38 
	#EDEADLK
 35

	)

39 
	#ENAMETOOLONG
 36

	)

40 
	#ENOLCK
 37

	)

41 
	#ENOSYS
 38

	)

42 
	#ENOTEMPTY
 39

	)

43 
	#ELOOP
 40

	)

44 
	#EWOULDBLOCK
 
EAGAIN


	)

45 
	#ENOMSG
 42

	)

46 
	#EIDRM
 43

	)

47 
	#ECHRNG
 44

	)

48 
	#EL2NSYNC
 45

	)

49 
	#EL3HLT
 46

	)

50 
	#EL3RST
 47

	)

51 
	#ELNRNG
 48

	)

52 
	#EUNATCH
 49

	)

53 
	#ENOCSI
 50

	)

54 
	#EL2HLT
 51

	)

55 
	#EBADE
 52

	)

56 
	#EBADR
 53

	)

57 
	#EXFULL
 54

	)

58 
	#ENOANO
 55

	)

59 
	#EBADRQC
 56

	)

60 
	#EBADSLT
 57

	)

61 
	#EDEADLOCK
 
EDEADLK


	)

62 
	#EBFONT
 59

	)

63 
	#ENOSTR
 60

	)

64 
	#ENODATA
 61

	)

65 
	#ETIME
 62

	)

66 
	#ENOSR
 63

	)

67 
	#ENONET
 64

	)

68 
	#ENOPKG
 65

	)

69 
	#EREMOTE
 66

	)

70 
	#ENOLINK
 67

	)

71 
	#EADV
 68

	)

72 
	#ESRMNT
 69

	)

73 
	#ECOMM
 70

	)

74 
	#EPROTO
 71

	)

75 
	#EMULTIHOP
 72

	)

76 
	#EDOTDOT
 73

	)

77 
	#EBADMSG
 74

	)

78 
	#EOVERFLOW
 75

	)

79 
	#ENOTUNIQ
 76

	)

80 
	#EBADFD
 77

	)

81 
	#EREMCHG
 78

	)

82 
	#ELIBACC
 79

	)

83 
	#ELIBBAD
 80

	)

84 
	#ELIBSCN
 81

	)

85 
	#ELIBMAX
 82

	)

86 
	#ELIBEXEC
 83

	)

87 
	#EILSEQ
 84

	)

88 
	#ERESTART
 85

	)

89 
	#ESTRPIPE
 86

	)

90 
	#EUSERS
 87

	)

91 
	#ENOTSOCK
 88

	)

92 
	#EDESTADDRREQ
 89

	)

93 
	#EMSGSIZE
 90

	)

94 
	#EPROTOTYPE
 91

	)

95 
	#ENOPROTOOPT
 92

	)

96 
	#EPROTONOSUPPORT
 93

	)

97 
	#ESOCKTNOSUPPORT
 94

	)

98 
	#EOPNOTSUPP
 95

	)

99 
	#EPFNOSUPPORT
 96

	)

100 
	#EAFNOSUPPORT
 97

	)

101 
	#EADDRINUSE
 98

	)

102 
	#EADDRNOTAVAIL
 99

	)

103 
	#ENETDOWN
 100

	)

104 
	#ENETUNREACH
 101

	)

105 
	#ENETRESET
 102

	)

106 
	#ECONNABORTED
 103

	)

107 
	#ECONNRESET
 104

	)

108 
	#ENOBUFS
 105

	)

109 
	#EISCONN
 106

	)

110 
	#ENOTCONN
 107

	)

111 
	#ESHUTDOWN
 108

	)

112 
	#ETOOMANYREFS
 109

	)

113 
	#ETIMEDOUT
 110

	)

114 
	#ECONNREFUSED
 111

	)

115 
	#EHOSTDOWN
 112

	)

116 
	#EHOSTUNREACH
 113

	)

117 
	#EALREADY
 114

	)

118 
	#EINPROGRESS
 115

	)

119 
	#ESTALE
 116

	)

120 
	#EUCLEAN
 117

	)

121 
	#ENOTNAM
 118

	)

122 
	#ENAVAIL
 119

	)

123 
	#EISNAM
 120

	)

124 
	#EREMOTEIO
 121

	)

125 
	#EDQUOT
 122

	)

127 
	#ENOMEDIUM
 123

	)

128 
	#EMEDIUMTYPE
 124

	)

129 
	#ECANCELED
 125

	)

130 
	#ENOKEY
 126

	)

131 
	#EKEYEXPIRED
 127

	)

132 
	#EKEYREVOKED
 128

	)

133 
	#EKEYREJECTED
 129

	)

134 
	#EOWNERDEAD
 130

	)

135 
	#ENOTRECOVERABLE
 131

	)

136 
	#ERFKILL
 132

	)

137 
	#EHWPOISON
 133

	)

139 *
__î∫o_loˇti⁄
();

140 
	#î∫o
 (*
	`__î∫o_loˇti⁄
())

	)

	@ulib/c_libax/include/fcntl.h

1 #i‚de‡
__FCNTL_H__


2 
	#__FCNTL_H__


	)

4 
	~<sys/ty≥s.h
>

6 
	#O_CREAT
 0100

	)

7 
	#O_EXCL
 0200

	)

8 
	#O_NOCTTY
 0400

	)

9 
	#O_TRUNC
 01000

	)

10 
	#O_APPEND
 02000

	)

11 
	#O_NONBLOCK
 04000

	)

12 
	#O_DSYNC
 010000

	)

13 
	#O_SYNC
 04010000

	)

14 
	#O_RSYNC
 04010000

	)

15 
	#O_DIRECTORY
 0200000

	)

16 
	#O_NOFOLLOW
 0400000

	)

17 
	#O_CLOEXEC
 02000000

	)

19 
	#O_ASYNC
 020000

	)

20 
	#O_DIRECT
 040000

	)

21 
	#O_LARGEFILE
 0100000

	)

22 
	#O_NOATIME
 01000000

	)

23 
	#O_PATH
 010000000

	)

24 
	#O_TMPFILE
 020200000

	)

25 
	#O_NDELAY
 
O_NONBLOCK


	)

27 
	#O_SEARCH
 
O_PATH


	)

28 
	#O_EXEC
 
O_PATH


	)

29 
	#O_TTY_INIT
 0

	)

31 
	#O_ACCMODE
 (03 | 
O_SEARCH
)

	)

32 
	#O_RDONLY
 00

	)

33 
	#O_WRONLY
 01

	)

34 
	#O_RDWR
 02

	)

36 
	#F_DUPFD
 0

	)

37 
	#F_GETFD
 1

	)

38 
	#F_SETFD
 2

	)

39 
	#F_GETFL
 3

	)

40 
	#F_SETFL
 4

	)

42 
	#F_SETOWN
 8

	)

43 
	#F_GETOWN
 9

	)

44 
	#F_SETSIG
 10

	)

45 
	#F_GETSIG
 11

	)

47 #i‡
__LONG_MAX
 == 0x7fffffffL

48 
	#F_GETLK
 12

	)

49 
	#F_SETLK
 13

	)

50 
	#F_SETLKW
 14

	)

52 
	#F_GETLK
 5

	)

53 
	#F_SETLK
 6

	)

54 
	#F_SETLKW
 7

	)

57 
	#FD_CLOEXEC
 1

	)

58 
	#F_DUPFD_CLOEXEC
 1030

	)

60 
	#F_RDLCK
 0

	)

61 
	#F_WRLCK
 1

	)

62 
	#F_UNLCK
 2

	)

64 
	#F_OK
 0

	)

65 
	#R_OK
 4

	)

66 
	#W_OK
 2

	)

67 
	#X_OK
 1

	)

68 
	#F_ULOCK
 0

	)

69 
	#F_LOCK
 1

	)

70 
	#F_TLOCK
 2

	)

71 
	#F_TEST
 3

	)

73 #i‚de‡
S_IRUSR


74 
	#S_ISUID
 04000

	)

75 
	#S_ISGID
 02000

	)

76 
	#S_ISVTX
 01000

	)

77 
	#S_IRUSR
 0400

	)

78 
	#S_IWUSR
 0200

	)

79 
	#S_IXUSR
 0100

	)

80 
	#S_IRWXU
 0700

	)

81 
	#S_IRGRP
 0040

	)

82 
	#S_IWGRP
 0020

	)

83 
	#S_IXGRP
 0010

	)

84 
	#S_IRWXG
 0070

	)

85 
	#S_IROTH
 0004

	)

86 
	#S_IWOTH
 0002

	)

87 
	#S_IXOTH
 0001

	)

88 
	#S_IRWXO
 0007

	)

90 
	sÊock
 {

91 
	ml_ty≥
;

92 
	ml_whí˚
;

93 
off_t
 
	ml_°¨t
;

94 
off_t
 
	ml_Àn
;

95 
pid_t
 
	ml_pid
;

98 
f˙é
(
fd
, 
cmd
, ... );

100 #ifde‡
AX_CONFIG_FS


101 
›í
(c⁄° *
fûíame
, 
Êags
, ...);

	@ulib/c_libax/include/float.h

1 #i‚de‡
_FLOAT_H


2 
	#_FLOAT_H


	)

5 
	#FLT_ROUNDS
 (
	`__Êt_rounds
())

	)

7 
	#FLT_RADIX
 2

	)

9 
	#FLT_TRUE_MIN
 1.40129846432481707092e-45F

	)

10 
	#FLT_MIN
 1.17549435082228750797e-38F

	)

11 
	#FLT_MAX
 3.40282346638528859812e+38F

	)

12 
	#FLT_EPSILON
 1.1920928955078125e-07F

	)

14 
	#FLT_MANT_DIG
 24

	)

15 
	#FLT_MIN_EXP
 (-125)

	)

16 
	#FLT_MAX_EXP
 128

	)

17 
	#FLT_HAS_SUBNORM
 1

	)

19 
	#FLT_DIG
 6

	)

20 
	#FLT_DECIMAL_DIG
 9

	)

21 
	#FLT_MIN_10_EXP
 (-37)

	)

22 
	#FLT_MAX_10_EXP
 38

	)

24 
	#DBL_TRUE_MIN
 4.94065645841246544177e-324

	)

25 
	#DBL_MIN
 2.22507385850720138309e-308

	)

26 
	#DBL_MAX
 1.79769313486231570815e+308

	)

27 
	#DBL_EPSILON
 2.22044604925031308085e-16

	)

29 
	#DBL_MANT_DIG
 53

	)

30 
	#DBL_MIN_EXP
 (-1021)

	)

31 
	#DBL_MAX_EXP
 1024

	)

32 
	#DBL_HAS_SUBNORM
 1

	)

34 
	#DBL_DIG
 15

	)

35 
	#DBL_DECIMAL_DIG
 17

	)

36 
	#DBL_MIN_10_EXP
 (-307)

	)

37 
	#DBL_MAX_10_EXP
 308

	)

39 
	#LDBL_HAS_SUBNORM
 1

	)

40 
	#LDBL_DECIMAL_DIG
 
DECIMAL_DIG


	)

	@ulib/c_libax/include/libgen.h

1 #i‚de‡
_LIBGEN_H


2 
	#_LIBGEN_H


	)

4 #ifde‡
__˝lu•lus


8 *
dú«me
(*);

9 *
ba£«me
(*);

11 #ifde‡
__˝lu•lus


	@ulib/c_libax/include/limits.h

1 #i‚de‡
__LIMITS__


2 
	#__LIMITS__


	)

4 
	#__LONG_MAX
 0x7fffffffffffffffL

	)

5 
	#CHAR_BIT
 8

	)

6 
	#SCHAR_MIN
 (-128)

	)

7 
	#SCHAR_MAX
 127

	)

8 
	#UCHAR_MAX
 255

	)

9 
	#SHRT_MIN
 (-1 - 0x7fff)

	)

10 
	#SHRT_MAX
 0x7fff

	)

11 
	#USHRT_MAX
 0xffff

	)

12 
	#INT_MIN
 (-1 - 0x7fffffff)

	)

13 
	#INT_MAX
 0x7fffffff

	)

14 
	#UINT_MAX
 0xffffffffU

	)

15 
	#LONG_MIN
 (-
LONG_MAX
 - 1)

	)

16 
	#LONG_MAX
 
__LONG_MAX


	)

17 
	#ULONG_MAX
 (2UL * 
LONG_MAX
 + 1)

	)

18 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1)

	)

19 
	#LLONG_MAX
 0x7fffffffffffffffLL

	)

20 
	#ULLONG_MAX
 (2ULL * 
LLONG_MAX
 + 1)

	)

22 
	#PTHREAD_STACK_MIN
 2048

	)

24 
	#LOGIN_NAME_MAX
 256

	)

25 #i‚de‡
NAME_MAX


26 
	#NAME_MAX
 255

	)

28 
	#TZNAME_MAX
 6

	)

30 
	#PATH_MAX
 4096

	)

31 
	#SSIZE_MAX
 
LONG_MAX


	)

32 
	#CHAR_MAX
 127

	)

	@ulib/c_libax/include/locale.h

1 #i‚de‡
_LOCALE_H


2 
	#_LOCALE_H


	)

4 
	#LC_CTYPE
 0

	)

5 
	#LC_NUMERIC
 1

	)

6 
	#LC_TIME
 2

	)

7 
	#LC_COLLATE
 3

	)

8 
	#LC_MONETARY
 4

	)

9 
	#LC_MESSAGES
 5

	)

10 
	#LC_ALL
 6

	)

11 
	#LOCALE_NAME_MAX
 23

	)

13 
	~<°ddef.h
>

15 
	slc⁄v
 {

16 *
	mdecimÆ_poöt
;

17 *
	mthoußnds_£p
;

18 *
	mgroupög
;

20 *
	möt_cuº_symbﬁ
;

21 *
	mcuºícy_symbﬁ
;

22 *
	mm⁄_decimÆ_poöt
;

23 *
	mm⁄_thoußnds_£p
;

24 *
	mm⁄_groupög
;

25 *
	mposôive_sign
;

26 *
	m√g©ive_sign
;

27 
	möt_‰ac_digôs
;

28 
	m‰ac_digôs
;

29 
	mp_cs_¥e˚des
;

30 
	mp_£p_by_•a˚
;

31 
	mn_cs_¥e˚des
;

32 
	mn_£p_by_•a˚
;

33 
	mp_sign_po¢
;

34 
	mn_sign_po¢
;

35 
	möt_p_cs_¥e˚des
;

36 
	möt_p_£p_by_•a˚
;

37 
	möt_n_cs_¥e˚des
;

38 
	möt_n_£p_by_•a˚
;

39 
	möt_p_sign_po¢
;

40 
	möt_n_sign_po¢
;

43 
	s__loˇÀ_m≠
 {

44 c⁄° *
	mm≠
;

45 
size_t
 
	mm≠_size
;

46 
	m«me
[
LOCALE_NAME_MAX
 + 1];

47 c⁄° 
__loˇÀ_m≠
 *
	m√xt
;

50 
	s__loˇÀ_°ru˘
 {

51 c⁄° 
__loˇÀ_m≠
 *
	mˇt
[6];

54 
__loˇÀ_°ru˘
 *
	tloˇÀ_t
;

	@ulib/c_libax/include/math.h

1 #i‚de‡
_MATH_H


2 
	#_MATH_H


	)

4 
	#FP_NAN
 0

	)

5 
	#FP_INFINITE
 1

	)

6 
	#FP_ZERO
 2

	)

7 
	#FP_SUBNORMAL
 3

	)

8 
	#FP_NORMAL
 4

	)

9 #i‡
deföed
(
AX_CONFIG_FP_SIMD
)

10 
__Â˛assify
();

11 
__Â˛assifyf
();

12 
__ölöe
 
	$__FLOAT_BITS
(
__f
)

15 
__f
;

16 
__i
;

17 } 
__u
;

18 
__u
.
__f
 = __f;

19  
__u
.
__i
;

20 
	}
}

21 
__ölöe
 
	$__DOUBLE_BITS
(
__f
)

24 
__f
;

25 
__i
;

26 } 
__u
;

27 
__u
.
__f
 = __f;

28  
__u
.
__i
;

29 
	}
}

31 
	#Â˛assify
(
x
Ë((xË=(Ë? 
	`__Â˛assifyf
(xË: 
	`__Â˛assify
(x))

	)

33 
	#i¢‹mÆ
(
x
) \

34 ((
x
Ë=(Ë? ((
	`__FLOAT_BITS
(x) + 0x00800000) & 0x7fffffff) >= 0x01000000 \

35 : ((
	`__DOUBLE_BITS
(
x
Ë+ (1ULL << 52)Ë& -1ULL >> 1Ë>1ULL << 53)

	)

37 
Ábs
();

38 
Êo‹
();

	@ulib/c_libax/include/netdb.h

1 #i‚de‡
_NETDB_H


2 
	#_NETDB_H


	)

4 
	~<√töë/ö.h
>

6 
	saddröfo
 {

7 
	mai_Êags
;

8 
	mai_Ámûy
;

9 
	mai_sockty≥
;

10 
	mai_¥Ÿocﬁ
;

11 
sockÀn_t
 
	mai_addæí
;

12 
sockaddr
 *
	mai_addr
;

13 *
	mai_ˇn⁄«me
;

14 
addröfo
 *
	mai_√xt
;

17 
	#AI_PASSIVE
 0x01

	)

18 
	#AI_CANONNAME
 0x02

	)

19 
	#AI_NUMERICHOST
 0x04

	)

20 
	#AI_V4MAPPED
 0x08

	)

21 
	#AI_ALL
 0x10

	)

22 
	#AI_ADDRCONFIG
 0x20

	)

23 
	#AI_NUMERICSERV
 0x400

	)

25 
	#NI_NUMERICHOST
 0x01

	)

26 
	#NI_NUMERICSERV
 0x02

	)

27 
	#NI_NOFQDN
 0x04

	)

28 
	#NI_NAMEREQD
 0x08

	)

29 
	#NI_DGRAM
 0x10

	)

30 
	#NI_NUMERICSCOPE
 0x100

	)

32 
	#EAI_BADFLAGS
 -1

	)

33 
	#EAI_NONAME
 -2

	)

34 
	#EAI_AGAIN
 -3

	)

35 
	#EAI_FAIL
 -4

	)

36 
	#EAI_FAMILY
 -6

	)

37 
	#EAI_SOCKTYPE
 -7

	)

38 
	#EAI_SERVICE
 -8

	)

39 
	#EAI_MEMORY
 -10

	)

40 
	#EAI_SYSTEM
 -11

	)

41 
	#EAI_OVERFLOW
 -12

	)

43 
	#HOST_NOT_FOUND
 1

	)

44 
	#TRY_AGAIN
 2

	)

45 
	#NO_RECOVERY
 3

	)

46 
	#NO_DATA
 4

	)

47 
	#NO_ADDRESS
 
NO_DATA


	)

49 
h_î∫o
;

50 c⁄° *
h°ªº‹
(
ecode
);

52 
	#MAXADDRS
 48

	)

53 #i‡
deföed
(
AX_CONFIG_ALLOC
Ë&& deföed(
AX_CONFIG_NET
)

54 
gëaddröfo
(c⁄° *
__ª°ri˘
, c⁄° *__ª°ri˘, c⁄° 
addröfo
 *__restrict,

55 
addröfo
 **
__ª°ri˘
);

56 
‰ìaddröfo
(
addröfo
 *);

	@ulib/c_libax/include/netinet/in.h

1 #i‚de‡
_NETINET_IN_H


2 
	#_NETINET_IN_H


	)

4 
	~<sys/sockë.h
>

6 
	#INET_ADDRSTRLEN
 16

	)

7 
	#INET6_ADDRSTRLEN
 46

	)

9 
uöt32_t
 
ht⁄l
(uint32_t);

10 
uöt16_t
 
ht⁄s
(uint16_t);

11 
uöt32_t
 
¡ohl
(uint32_t);

12 
uöt16_t
 
¡ohs
(uint16_t);

14 
	#IPPROTO_IP
 0

	)

15 
	#IPPROTO_HOPOPTS
 0

	)

16 
	#IPPROTO_ICMP
 1

	)

17 
	#IPPROTO_IGMP
 2

	)

18 
	#IPPROTO_IPIP
 4

	)

19 
	#IPPROTO_TCP
 6

	)

20 
	#IPPROTO_EGP
 8

	)

21 
	#IPPROTO_PUP
 12

	)

22 
	#IPPROTO_UDP
 17

	)

23 
	#IPPROTO_IDP
 22

	)

24 
	#IPPROTO_TP
 29

	)

25 
	#IPPROTO_DCCP
 33

	)

26 
	#IPPROTO_IPV6
 41

	)

27 
	#IPPROTO_ROUTING
 43

	)

28 
	#IPPROTO_FRAGMENT
 44

	)

29 
	#IPPROTO_RSVP
 46

	)

30 
	#IPPROTO_GRE
 47

	)

31 
	#IPPROTO_ESP
 50

	)

32 
	#IPPROTO_AH
 51

	)

33 
	#IPPROTO_ICMPV6
 58

	)

34 
	#IPPROTO_NONE
 59

	)

35 
	#IPPROTO_DSTOPTS
 60

	)

36 
	#IPPROTO_MTP
 92

	)

37 
	#IPPROTO_BEETPH
 94

	)

38 
	#IPPROTO_ENCAP
 98

	)

39 
	#IPPROTO_PIM
 103

	)

40 
	#IPPROTO_COMP
 108

	)

41 
	#IPPROTO_SCTP
 132

	)

42 
	#IPPROTO_MH
 135

	)

43 
	#IPPROTO_UDPLITE
 136

	)

44 
	#IPPROTO_MPLS
 137

	)

45 
	#IPPROTO_ETHERNET
 143

	)

46 
	#IPPROTO_RAW
 255

	)

47 
	#IPPROTO_MPTCP
 262

	)

48 
	#IPPROTO_MAX
 263

	)

50 
uöt16_t
 
	tö_p‹t_t
;

51 
uöt32_t
 
	tö_addr_t
;

53 
	sö_addr
 {

54 
ö_addr_t
 
	ms_addr
;

57 
	ssockaddr_ö
 {

58 
ß_Ámûy_t
 
	msö_Ámûy
;

59 
ö_p‹t_t
 
	msö_p‹t
;

60 
ö_addr
 
	msö_addr
;

61 
uöt8_t
 
	msö_zîo
[8];

64 
	sö6_addr
 {

66 
uöt8_t
 
	m__s6_addr
[16];

67 
uöt16_t
 
	m__s6_addr16
[8];

68 
uöt32_t
 
	m__s6_addr32
[4];

69 } 
	m__ö6_uni⁄
;

71 
	#s6_addr
 
__ö6_uni⁄
.
__s6_addr


	)

72 
	#s6_addr16
 
__ö6_uni⁄
.
__s6_addr16


	)

73 
	#s6_addr32
 
__ö6_uni⁄
.
__s6_addr32


	)

75 
	ssockaddr_ö6
 {

76 
ß_Ámûy_t
 
	msö6_Ámûy
;

77 
ö_p‹t_t
 
	msö6_p‹t
;

78 
uöt32_t
 
	msö6_Êowöfo
;

79 
ö6_addr
 
	msö6_addr
;

80 
uöt32_t
 
	msö6_sc›e_id
;

	@ulib/c_libax/include/netinet/tcp.h

1 #i‚de‡
_NETINET_TCP_H


2 
	#_NETINET_TCP_H


	)

4 
	#TCP_NODELAY
 1

	)

5 
	#TCP_MAXSEG
 2

	)

6 
	#TCP_CORK
 3

	)

7 
	#TCP_KEEPIDLE
 4

	)

8 
	#TCP_KEEPINTVL
 5

	)

9 
	#TCP_KEEPCNT
 6

	)

10 
	#TCP_SYNCNT
 7

	)

11 
	#TCP_LINGER2
 8

	)

12 
	#TCP_DEFER_ACCEPT
 9

	)

13 
	#TCP_WINDOW_CLAMP
 10

	)

14 
	#TCP_INFO
 11

	)

15 
	#TCP_QUICKACK
 12

	)

16 
	#TCP_CONGESTION
 13

	)

17 
	#TCP_MD5SIG
 14

	)

18 
	#TCP_THIN_LINEAR_TIMEOUTS
 16

	)

19 
	#TCP_THIN_DUPACK
 17

	)

20 
	#TCP_USER_TIMEOUT
 18

	)

21 
	#TCP_REPAIR
 19

	)

22 
	#TCP_REPAIR_QUEUE
 20

	)

23 
	#TCP_QUEUE_SEQ
 21

	)

24 
	#TCP_REPAIR_OPTIONS
 22

	)

25 
	#TCP_FASTOPEN
 23

	)

26 
	#TCP_TIMESTAMP
 24

	)

27 
	#TCP_NOTSENT_LOWAT
 25

	)

28 
	#TCP_CC_INFO
 26

	)

29 
	#TCP_SAVE_SYN
 27

	)

30 
	#TCP_SAVED_SYN
 28

	)

31 
	#TCP_REPAIR_WINDOW
 29

	)

32 
	#TCP_FASTOPEN_CONNECT
 30

	)

33 
	#TCP_ULP
 31

	)

34 
	#TCP_MD5SIG_EXT
 32

	)

35 
	#TCP_FASTOPEN_KEY
 33

	)

36 
	#TCP_FASTOPEN_NO_COOKIE
 34

	)

37 
	#TCP_ZEROCOPY_RECEIVE
 35

	)

38 
	#TCP_INQ
 36

	)

39 
	#TCP_TX_DELAY
 37

	)

	@ulib/c_libax/include/pthread.h

1 #i‚de‡
_PTHREAD_H


2 
	#_PTHREAD_H


	)

4 
	~<sig«l.h
>

5 
	~<°ddef.h
>

6 
	~<°döt.h
>

8 
	#PTHREAD_CANCEL_ENABLE
 0

	)

9 
	#PTHREAD_CANCEL_DISABLE
 1

	)

10 
	#PTHREAD_CANCEL_MASKED
 2

	)

12 
	#PTHREAD_CANCEL_DEFERRED
 0

	)

13 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 1

	)

16 
	m__©å
;

17 } 
	t±hªad_c⁄d©å_t
;

19 
	~<ax_±hªad_muãx.h
>

22 
	m__©å
;

23 } 
	t±hªad_muãx©å_t
;

27 
	m__i
[() == 8 ? 14 : 9];

28 vﬁ©ûê
	m__vi
[() == 8 ? 14 : 9];

29 
	m__s
[() == 8 ? 7 : 9];

30 } 
	m__u
;

31 } 
	t±hªad_©å_t
;

32 
	#_a_°acksize
 
__u
.
__s
[0]

	)

33 
	#_a_gu¨dsize
 
__u
.
__s
[1]

	)

34 
	#_a_°ackaddr
 
__u
.
__s
[2]

	)

38 
	m__i
[12];

39 vﬁ©ûê
	m__vi
[12];

40 *
	m__p
[12 * () / (*)];

41 } 
	m__u
;

42 } 
	t±hªad_c⁄d_t
;

43 
	#_c_˛ock
 
__u
.
__i
[4]

	)

44 
	#_c_sh¨ed
 
__u
.
__p
[0]

	)

46 *
	t±hªad_t
;

48 
	#PTHREAD_CANCELED
 ((*)-1)

	)

49 
	#SIGCANCEL
 33

	)

51 #i‡
deföed
(
AX_CONFIG_MULTITASK
)

53 
_N‹ëu∫
 
±hªad_exô
(*);

54 
±hªad_t
 
±hªad_£lf
();

55 
±hªad_¸óã
(
±hªad_t
 *
__ª°ri˘
, c⁄° 
±hªad_©å_t
 *__restrict, *(*)(*),

56 *
__ª°ri˘
);

57 
±hªad_joö
(
±hªad_t
 
t
, **
ªs
);

59 
±hªad_£tˇn˚l°©e
(, *);

60 
±hªad_£tˇn˚…y≥
(, *);

62 
±hªad_muãx_öô
(
±hªad_muãx_t
 *
__ª°ri˘
, c⁄° 
±hªad_muãx©å_t
 *__restrict);

63 
±hªad_muãx_lock
(
±hªad_muãx_t
 *);

64 
±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *);

	@ulib/c_libax/include/setjmp.h

1 #i‚de‡
_SETJMP_H


2 
	#_SETJMP_H


	)

4 #i‡
deföed
(
__Ørch64__
)

5 
	t__jmp_buf
[22];

6 #ñi‡
deföed
(
__riscv__
Ë|| deföed(
__riscv
)

7 
	t__jmp_buf
[26];

8 #ñi‡
deföed
(
__x86_64__
)

9 
	t__jmp_buf
[8];

12 
	s__jmp_buf_èg
 {

13 
__jmp_buf
 
	m__jb
;

14 
	m__Ê
;

15 
	m__ss
[128 / ()];

16 } 
	tjmp_buf
[1];

18 
£tjmp
(
jmp_buf
);

	@ulib/c_libax/include/signal.h

1 #i‚de‡
_SIGNAL_H


2 
	#_SIGNAL_H


	)

4 
	~<°ddef.h
>

5 
	~<°döt.h
>

7 
	tsig_©omic_t
;

9 
	usigvÆ
 {

10 
	msivÆ_öt
;

11 *
	msivÆ_±r
;

14 
sigvÆ
 
	t__sigvÆ_t
;

16 
	#__SI_MAX_SIZE
 128

	)

17 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 / ()Ë- 4)

	)

19 
	#SA_NOCLDSTOP
 1

	)

20 
	#SA_NOCLDWAIT
 2

	)

21 
	#SA_SIGINFO
 4

	)

22 
	#SA_ONSTACK
 0x08000000

	)

23 
	#SA_RESTART
 0x10000000

	)

24 
	#SA_NODEFER
 0x40000000

	)

25 
	#SA_RESETHAND
 0x80000000

	)

26 
	#SA_RESTORER
 0x04000000

	)

28 
	#SIG_BLOCK
 0

	)

29 
	#SIG_UNBLOCK
 1

	)

30 
	#SIG_SETMASK
 2

	)

32 
	#SI_ASYNCNL
 (-60)

	)

33 
	#SI_TKILL
 (-6)

	)

34 
	#SI_SIGIO
 (-5)

	)

35 
	#SI_ASYNCIO
 (-4)

	)

36 
	#SI_MESGQ
 (-3)

	)

37 
	#SI_TIMER
 (-2)

	)

38 
	#SI_QUEUE
 (-1)

	)

39 
	#SI_USER
 0

	)

40 
	#SI_KERNEL
 128

	)

43 
	msi_signo
, 
	msi_î∫o
, 
	msi_code
;

45 
	m__∑d
[128 - 2 * () - ()];

49 
	msi_pid
;

50 
	msi_uid
;

51 } 
	m__piduid
;

53 
	msi_timîid
;

54 
	msi_ovîrun
;

55 } 
	m__timî
;

56 } 
	m__fú°
;

58 
sigvÆ
 
	msi_vÆue
;

60 
	msi_°©us
;

61 
	msi_utime
, 
	msi_°ime
;

62 } 
	m__sigchld
;

63 } 
	m__£c⁄d
;

64 } 
	m__si_comm⁄
;

66 *
	msi_addr
;

67 
	msi_addr_lsb
;

70 *
	msi_lowî
;

71 *
	msi_uµî
;

72 } 
	m__addr_bnd
;

73 
	msi_pkey
;

74 } 
	m__fú°
;

75 } 
	m__sigÁu…
;

77 
	msi_b™d
;

78 
	msi_fd
;

79 } 
	m__sigpﬁl
;

81 *
	msi_ˇŒ_addr
;

82 
	msi_sysˇŒ
;

83 
	msi_¨ch
;

84 } 
	m__sigsys
;

85 } 
	m__si_fõlds
;

86 } 
	tsigöfo_t
;

88 
	#si_pid
 
__si_fõlds
.
__si_comm⁄
.
__fú°
.
__piduid
.
si_pid


	)

89 
	#si_uid
 
__si_fõlds
.
__si_comm⁄
.
__fú°
.
__piduid
.
si_uid


	)

90 
	#si_°©us
 
__si_fõlds
.
__si_comm⁄
.
__£c⁄d
.
__sigchld
.
si_°©us


	)

91 
	#si_utime
 
__si_fõlds
.
__si_comm⁄
.
__£c⁄d
.
__sigchld
.
si_utime


	)

92 
	#si_°ime
 
__si_fõlds
.
__si_comm⁄
.
__£c⁄d
.
__sigchld
.
si_°ime


	)

93 
	#si_vÆue
 
__si_fõlds
.
__si_comm⁄
.
__£c⁄d
.
si_vÆue


	)

94 
	#si_addr
 
__si_fõlds
.
__sigÁu…
.
si_addr


	)

95 
	#si_addr_lsb
 
__si_fõlds
.
__sigÁu…
.
si_addr_lsb


	)

96 
	#si_lowî
 
__si_fõlds
.
__sigÁu…
.
__fú°
.
__addr_bnd
.
si_lowî


	)

97 
	#si_uµî
 
__si_fõlds
.
__sigÁu…
.
__fú°
.
__addr_bnd
.
si_uµî


	)

98 
	#si_pkey
 
__si_fõlds
.
__sigÁu…
.
__fú°
.
si_pkey


	)

99 
	#si_b™d
 
__si_fõlds
.
__sigpﬁl
.
si_b™d


	)

100 
	#si_fd
 
__si_fõlds
.
__sigpﬁl
.
si_fd


	)

101 
	#si_timîid
 
__si_fõlds
.
__si_comm⁄
.
__fú°
.
__timî
.
si_timîid


	)

102 
	#si_ovîrun
 
__si_fõlds
.
__si_comm⁄
.
__fú°
.
__timî
.
si_ovîrun


	)

103 
	#si_±r
 
si_vÆue
.
sivÆ_±r


	)

104 
	#si_öt
 
si_vÆue
.
sivÆ_öt


	)

105 
	#si_ˇŒ_addr
 
__si_fõlds
.
__sigsys
.
si_ˇŒ_addr


	)

106 
	#si_sysˇŒ
 
__si_fõlds
.
__sigsys
.
si_sysˇŒ


	)

107 
	#si_¨ch
 
__si_fõlds
.
__sigsys
.
si_¨ch


	)

109 
	#SIGHUP
 1

	)

110 
	#SIGINT
 2

	)

111 
	#SIGQUIT
 3

	)

112 
	#SIGILL
 4

	)

113 
	#SIGTRAP
 5

	)

114 
	#SIGABRT
 6

	)

115 
	#SIGIOT
 
SIGABRT


	)

116 
	#SIGBUS
 7

	)

117 
	#SIGFPE
 8

	)

118 
	#SIGKILL
 9

	)

119 
	#SIGUSR1
 10

	)

120 
	#SIGSEGV
 11

	)

121 
	#SIGUSR2
 12

	)

122 
	#SIGPIPE
 13

	)

123 
	#SIGALRM
 14

	)

124 
	#SIGTERM
 15

	)

125 
	#SIGSTKFLT
 16

	)

126 
	#SIGCHLD
 17

	)

127 
	#SIGCONT
 18

	)

128 
	#SIGSTOP
 19

	)

129 
	#SIGTSTP
 20

	)

130 
	#SIGTTIN
 21

	)

131 
	#SIGTTOU
 22

	)

132 
	#SIGURG
 23

	)

133 
	#SIGXCPU
 24

	)

134 
	#SIGXFSZ
 25

	)

135 
	#SIGVTALRM
 26

	)

136 
	#SIGPROF
 27

	)

137 
	#SIGWINCH
 28

	)

138 
	#SIGIO
 29

	)

139 
	#SIGPOLL
 29

	)

140 
	#SIGPWR
 30

	)

141 
	#SIGSYS
 31

	)

142 
	#SIGUNUSED
 
SIGSYS


	)

144 
	#_NSIG
 65

	)

146 (*
	tsigh™dÀr_t
)();

147 
	#SIG_ERR
 (((*)()Ë- 1)

	)

148 
	#SIG_DFL
 (((*)())0)

	)

149 
	#SIG_IGN
 (((*)())1)

	)

151 
	s__sig£t_t
 {

152 
__bôs
[128 / ()];

153 } 
	tsig£t_t
;

155 
	ssiga˘i⁄
 {

157 (*
ß_h™dÀr
)();

158 (*
ß_siga˘i⁄
)(, 
sigöfo_t
 *, *);

159 } 
__ß_h™dÀr
;

160 
sig£t_t
 
ß_mask
;

161 
ß_Êags
;

162 (*
ß_ª°‹î
)();

165 
	#ß_h™dÀr
 
__ß_h™dÀr
.
ß_h™dÀr


	)

166 
	#ß_siga˘i⁄
 
__ß_h™dÀr
.
ß_siga˘i⁄


	)

168 (*
	`sig«l
(, (*)()))();

169 
	`siga˘i⁄
(, c⁄° 
siga˘i⁄
 *
__ª°ri˘
, sigaction *__restrict);

	@ulib/c_libax/include/stdarg.h

1 #i‚de‡
__STDARG_H__


2 
	#__STDARG_H__


	)

4 
	#va_°¨t
(
v
, 
l
Ë
	`__buûtö_va_°¨t
(v,Ü)

	)

5 
	#va_íd
(
v
Ë
	`__buûtö_va_íd
(v)

	)

6 
	#va_¨g
(
v
, 
l
Ë
	`__buûtö_va_¨g
(v,Ü)

	)

7 
	#va_c›y
(
d
, 
s
Ë
	`__buûtö_va_c›y
(d, s)

	)

9 
__buûtö_va_li°
 
	tva_li°
;

	@ulib/c_libax/include/stdbool.h

1 #i‚de‡
__STDBOOL_H__


2 
	#__STDBOOL_H__


	)

5 #i‚de‡
__˝lu•lus


6 
	#åue
 1

	)

7 
	#Ál£
 0

	)

8 
	#boﬁ
 
_Boﬁ


	)

	@ulib/c_libax/include/stddef.h

1 #i‚de‡
__STDDEF_H__


2 
	#__STDDEF_H__


	)

4 
	~<°döt.h
>

5 
	~<sys/ty≥s.h
>

8 
uöçå_t
 
	tsize_t
;

9 
öçå_t
 
	tssize_t
;

10 
ssize_t
 
	t±rdiff_t
;

12 
	t˛ockid_t
;

14 #ifde‡
__˝lu•lus


15 
	#NULL
 0L

	)

17 
	#NULL
 ((*)0)

	)

	@ulib/c_libax/include/stdint.h

1 #i‚de‡
__STDINT_H__


2 
	#__STDINT_H__


	)

5 
	töt8_t
;

6 
	tuöt8_t
;

7 
	töt16_t
;

8 
	tuöt16_t
;

9 
	töt32_t
;

10 
	tuöt32_t
;

11 
	töt64_t
;

12 
	tuöt64_t
;

14 
öt64_t
 
	töt_Á°64_t
;

16 
öt64_t
 
	tötmax_t
;

22 #i‡
__riscv_xÀn
 =64 || 
deföed
(
__x86_64__
Ë|| deföed(
__Ørch64__
)

23 
öt64_t
 
	töçå_t
;

24 
uöt64_t
 
	tuöçå_t
;

25 #ñi‡
__riscv_xÀn
 =32 || 
deföed
(
__i386__
)

26 
öt32_t
 
	töçå_t
;

27 
uöt32_t
 
	tuöçå_t
;

	@ulib/c_libax/include/stdio.h

1 #i‚de‡
__STDIO_H__


2 
	#__STDIO_H__


	)

4 
	~<°d¨g.h
>

5 
	~<°ddef.h
>

7 
	#FILE_BUF_SIZE
 1024

	)

9 
	sIO_FILE
 {

10 
	mfd
;

11 
uöt16_t
 
	mbuf„r_Àn
;

12 
	mbuf
[
FILE_BUF_SIZE
];

15 
IO_FILE
 
	tFILE
;

17 
FILE
 *c⁄° 
°dö
;

18 
FILE
 *c⁄° 
°dout
;

19 
FILE
 *c⁄° 
°dîr
;

21 
	#°dö
 (
°dö
)

	)

22 
	#°dout
 (
°dout
)

	)

23 
	#°dîr
 (
°dîr
)

	)

25 
	#EOF
 (-1)

	)

27 
	#unim∂emíãd
(
fmt
, ...) \

28 
	`¥ötf
("\x1b[33m%s%s:\x1b[0m " 
fmt
 "\n", "WARN:Çÿax_ˇŒ im∂emíèti⁄ f‹ ", 
__func__
, \

29 ##
__VA_ARGS__
)

	)

31 
	#SEEK_SET
 0

	)

32 
	#SEEK_CUR
 1

	)

33 
	#SEEK_END
 2

	)

35 
	#F_EOF
 16

	)

36 
	#F_ERR
 32

	)

37 
	#F_SVB
 64

	)

38 
	#F_NORD
 4

	)

39 
	#UNGET
 8

	)

41 
	#FILENAME_MAX
 4096

	)

43 #i‡
deföed
(
AX_CONFIG_ALLOC
Ë&& deföed(
AX_CONFIG_FS
)

44 
FILE
 *
f›í
(c⁄° *
fûíame
, c⁄° *
mode
);

45 *
fgës
(*
__ª°ri˘
, , 
FILE
 *__restrict);

48 
fÊush
(
FILE
 *);

50 
gëch¨
();

52 
Âutc
(, 
FILE
 *);

53 
putc
(, 
FILE
 *);

54 
putch¨
();

56 
Âuts
(c⁄° *
__ª°ri˘
, 
FILE
 *__restrict);

57 
puts
(c⁄° *
s
);

59 
¥ötf
(c⁄° *
__ª°ri˘
, ...);

60 
Ârötf
(
FILE
 *
__ª°ri˘
, const *__restrict, ...);

61 
•rötf
(*
__ª°ri˘
, const *__restrict, ...);

62 
¢¥ötf
(*
__ª°ri˘
, 
size_t
, const *__restrict, ...);

64 
vÂrötf
(
FILE
 *
__ª°ri˘
, c⁄° *__ª°ri˘, 
va_li°
);

65 
v•rötf
(*
__ª°ri˘
, c⁄° *__ª°ri˘, 
va_li°
);

66 
v¢¥ötf
(*
__ª°ri˘
, 
size_t
, c⁄° *__ª°ri˘, 
va_li°
);

68 
≥º‹
(const *);

	@ulib/c_libax/include/stdlib.h

1 #i‚de‡
__STDLIB_H__


2 
	#__STDLIB_H__


	)

4 
	~<°ddef.h
>

6 
ønd
();

7 
§™d
();

9 #ifde‡
AX_CONFIG_ALLOC


10 *
mÆloc
(
size_t
 
size
);

11 
‰ì
(*
addr
);

12 *
ˇŒoc
(
size_t
 
nmemb
, size_à
size
);

13 *
ªÆloc
(*
memblock
, 
size_t
 
size
);

16 
_N‹ëu∫
 
ab‹t
();

17 *
gëív
(c⁄° *
«me
);

19 #ifde‡
AX_CONFIG_FP_SIMD


20 
°πof
(c⁄° *
__ª°ri˘
, **__restrict);

21 
°πod
(c⁄° *
__ª°ri˘
, **__restrict);

24 
°πﬁ
(c⁄° *
__ª°ri˘
, **__restrict, );

25 
°πoul
(c⁄° *
≈å
, **
íd±r
, 
ba£
);

26 
°πﬁl
(c⁄° *
≈å
, **
íd±r
, 
ba£
);

27 
°πouŒ
(c⁄° *
≈å
, **
íd±r
, 
ba£
);

29 
©ﬁl
(c⁄° *
≈å
);

31 
exô
();

33 
Œabs
(
x
);

34 
abs
(
x
);

	@ulib/c_libax/include/string.h

1 #i‚de‡
__STRING_H__


2 
	#__STRING_H__


	)

4 
	~<°ddef.h
>

6 
©oi
(c⁄° *
s
);

8 *
mem£t
(*
de°
, 
c
, 
size_t
 
n
);

9 *
memchr
(c⁄° *
§c
, 
c
, 
size_t
 
n
);

11 
size_t
 
°æí
(c⁄° *
s
);

12 
size_t
 
°∫Àn
(c⁄° *
s
, size_à
n
);

14 *
°r˝y
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
);

15 *
°∫˝y
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
, 
size_t
 
n
);

17 *
°rˇt
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
);

18 *
°∫ˇt
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
, 
size_t
 
n
);

20 
°rcmp
(c⁄° *
l
, c⁄° *
r
);

21 
°∫cmp
(c⁄° *
l
, c⁄° *
r
, 
size_t
 
n
);

23 
°rcﬁl
(const *, const *);

25 
size_t
 
°rc•n
(c⁄° *
s1
, c⁄° *
s2
);

26 
size_t
 
°r•n
(c⁄° *
s
, c⁄° *
c
);

27 *
°Ωbrk
(const *, const *);

29 *
°rch∫ul
(const *, );

31 *
°ºchr
(c⁄° *
°r
, 
c
);

32 *
°rchr
(c⁄° *
°r
, 
c
);

34 
°rˇ£cmp
(c⁄° *
__s1
, c⁄° *
__s2
);

35 
°∫ˇ£cmp
(c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
);

37 *
°r°r
(c⁄° *
h
, c⁄° *
n
);

39 *
°ªº‹
(
e
);

41 *
mem˝y
(*
ª°ri˘
 
de°
, c⁄° *ª°ri˘ 
§c
, 
size_t
 
n
);

43 *
memmove
(*
de°
, c⁄° *
§c
, 
size_t
 
n
);

45 
memcmp
(c⁄° *
vl
, c⁄° *
vr
, 
size_t
 
n
);

47 #ifde‡
AX_CONFIG_ALLOC


48 *
°rdup
(c⁄° *
__s
);

	@ulib/c_libax/include/sys/epoll.h

1 #i‚de‡
_SYS_EPOLL_H


2 
	#_SYS_EPOLL_H


	)

4 #ifde‡
__˝lu•lus


8 
	~<f˙é.h
>

9 
	~<°döt.h
>

11 
	#EPOLL_CLOEXEC
 
O_CLOEXEC


	)

12 
	#EPOLL_NONBLOCK
 
O_NONBLOCK


	)

14 
	eEPOLL_EVENTS
 { 
__EPOLL_DUMMY
 };

15 
	#EPOLLIN
 0x001

	)

16 
	#EPOLLPRI
 0x002

	)

17 
	#EPOLLOUT
 0x004

	)

18 
	#EPOLLRDNORM
 0x040

	)

19 
	#EPOLLNVAL
 0x020

	)

20 
	#EPOLLRDBAND
 0x080

	)

21 
	#EPOLLWRNORM
 0x100

	)

22 
	#EPOLLWRBAND
 0x200

	)

23 
	#EPOLLMSG
 0x400

	)

24 
	#EPOLLERR
 0x008

	)

25 
	#EPOLLHUP
 0x010

	)

26 
	#EPOLLRDHUP
 0x2000

	)

27 
	#EPOLLEXCLUSIVE
 (1U << 28)

	)

28 
	#EPOLLWAKEUP
 (1U << 29)

	)

29 
	#EPOLLONESHOT
 (1U << 30)

	)

30 
	#EPOLLET
 (1U << 31)

	)

32 
	#EPOLL_CTL_ADD
 1

	)

33 
	#EPOLL_CTL_DEL
 2

	)

34 
	#EPOLL_CTL_MOD
 3

	)

36 
	uïﬁl_d©a
 {

37 *
±r
;

38 
fd
;

39 
uöt32_t
 
u32
;

40 
uöt64_t
 
u64
;

41 } 
	tïﬁl_d©a_t
;

43 
	sïﬁl_evít
 {

44 
uöt32_t
 
evíts
;

45 
ïﬁl_d©a_t
 
d©a
;

47 #ifde‡
__x86_64__


48 
__©åibuã__
((
__∑cked__
))

52 
ïﬁl_¸óã
(
__size
);

53 
ïﬁl_˘l
(, , , 
ïﬁl_evít
 *);

54 
ïﬁl_waô
(, 
ïﬁl_evít
 *, , );

56 #ifde‡
__˝lu•lus


	@ulib/c_libax/include/sys/ioctl.h

1 #ifde‡
__SYS_IOCTL_H__


2 
	#__SYS_IOCTL_H__


	)

	@ulib/c_libax/include/sys/mman.h

1 #i‚de‡
__SYS_MMAN_H__


2 
	#__SYS_MMAN_H__


	)

4 
	~<sys/ty≥s.h
>

6 
	#PROT_READ
 0x1

	)

7 
	#PROT_WRITE
 0x2

	)

8 
	#PROT_EXEC
 0x4

	)

9 
	#PROT_NONE
 0x0

	)

10 
	#PROT_GROWSDOWN
 \

11 0x01000000

	)

13 
	#PROT_GROWSUP
 \

14 0x02000000

	)

18 
	#MAP_SHARED
 0x01

	)

19 
	#MAP_PRIVATE
 0x02

	)

20 
	#MAP_SHARED_VALIDATE
 \

21 0x03

	)

23 
	#MAP_TYPE
 0x0‡

	)

26 
	#MAP_FIXED
 0x10

	)

27 
	#MAP_FILE
 0

	)

28 #ifde‡
__MAP_ANONYMOUS


29 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

31 
	#MAP_ANONYMOUS
 0x20

	)

33 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

35 
	#MAP_HUGE_SHIFT
 26

	)

36 
	#MAP_HUGE_MASK
 0x3f

	)

38 
	#MAP_FAILED
 ((*)-1)

	)

41 
	#MREMAP_MAYMOVE
 1

	)

42 
	#MREMAP_FIXED
 2

	)

43 
	#MREMAP_DONTUNMAP
 4

	)

45 *
mm≠
(*
addr
, 
size_t
 
Àn
, 
¥Ÿ
, 
Êags
, 
fûdes
, 
off_t
 
off
);

46 
munm≠
(*
addr
, 
size_t
 
Àngth
);

47 *
mªm≠
(*
ﬁd_addªss
, 
size_t
 
ﬁd_size
, size_à
√w_size
, 
Êags
,

	@ulib/c_libax/include/sys/resource.h

1 #i‚de‡
_SYS_RESOURCE_H


2 
	#_SYS_RESOURCE_H


	)

4 
	~<sys/time.h
>

6 
	tæim_t
;

8 
	sæimô
 {

9 
æim_t
 
	mæim_cur
;

10 
æim_t
 
	mæim_max
;

13 
	#RLIMIT_CPU
 0

	)

14 
	#RLIMIT_FSIZE
 1

	)

15 
	#RLIMIT_DATA
 2

	)

16 
	#RLIMIT_STACK
 3

	)

17 
	#RLIMIT_CORE
 4

	)

18 #i‚de‡
RLIMIT_RSS


19 
	#RLIMIT_RSS
 5

	)

20 
	#RLIMIT_NPROC
 6

	)

21 
	#RLIMIT_NOFILE
 7

	)

22 
	#RLIMIT_MEMLOCK
 8

	)

23 
	#RLIMIT_AS
 9

	)

25 
	#RLIMIT_LOCKS
 10

	)

26 
	#RLIMIT_SIGPENDING
 11

	)

27 
	#RLIMIT_MSGQUEUE
 12

	)

28 
	#RLIMIT_NICE
 13

	)

29 
	#RLIMIT_RTPRIO
 14

	)

30 
	#RLIMIT_RTTIME
 15

	)

31 
	#RLIMIT_NLIMITS
 16

	)

33 
	#RUSAGE_SELF
 0

	)

34 
	#RUSAGE_CHILDREN
 -1

	)

36 
£ålimô
(
__ªsour˚
, 
æimô
 *
__æimôs
);

37 
gëæimô
(
__ªsour˚
, 
æimô
 *
__æimôs
);

	@ulib/c_libax/include/sys/select.h

1 #i‚de‡
_SYS_SELECT_H


2 
	#_SYS_SELECT_H


	)

4 
	~<sig«l.h
>

5 
	~<°ddef.h
>

6 
	~<sys/time.h
>

8 
	#FD_SETSIZE
 1024

	)

10 
	tfd_mask
;

13 
	mfds_bôs
[
FD_SETSIZE
 / 8 / ()];

14 } 
	tfd_£t
;

16 
	#FD_ZERO
(
s
) \

18 
__i
; \

19 *
__b
 = (
s
)->
fds_bôs
; \

20 
__i
 = (
fd_£t
Ë/ (); __i; __i--Ë*
__b
++ = 0; \

21 } 0)

	)

22 
	#FD_SET
(
d
, 
s
) \

23 ((
s
)->
fds_bôs
[(
d
Ë/ (8 * ())] |(1UL << ((dË% (8 * ()))))

	)

24 
	#FD_CLR
(
d
, 
s
) \

25 ((
s
)->
fds_bôs
[(
d
Ë/ (8 * ())] &~(1UL << ((dË% (8 * ()))))

	)

26 
	#FD_ISSET
(
d
, 
s
) \

27 !!((
s
)->
fds_bôs
[(
d
Ë/ (8 * ())] & (1UL << ((dË% (8 * ()))))

	)

29 
£À˘
(
n
, 
fd_£t
 *
__ª°ri˘
 
rfds
, fd_£à*__ª°ri˘ 
wfds
, fd_£à*__ª°ri˘ 
efds
,

30 
timevÆ
 *
__ª°ri˘
 
tv
);

31 
p£À˘
(, 
fd_£t
 *
__ª°ri˘
, fd_set *__restrict, fd_set *__restrict,

32 c⁄° 
time•ec
 *
__ª°ri˘
, c⁄° 
sig£t_t
 *__restrict);

34 
	#NFDBITS
 (8 * ()())

	)

	@ulib/c_libax/include/sys/socket.h

1 #i‚de‡
__SOCKET_H__


2 
	#__SOCKET_H__


	)

4 
	~<°ddef.h
>

6 #i‚de‡
SOCK_STREAM


7 
	#SOCK_STREAM
 1

	)

8 
	#SOCK_DGRAM
 2

	)

11 
	#SOCK_RAW
 3

	)

12 
	#SOCK_RDM
 4

	)

13 
	#SOCK_SEQPACKET
 5

	)

14 
	#SOCK_DCCP
 6

	)

15 
	#SOCK_PACKET
 10

	)

17 #i‚de‡
SOCK_CLOEXEC


18 
	#SOCK_CLOEXEC
 02000000

	)

19 
	#SOCK_NONBLOCK
 04000

	)

22 
	#PF_UNSPEC
 0

	)

23 
	#PF_LOCAL
 1

	)

24 
	#PF_UNIX
 
PF_LOCAL


	)

25 
	#PF_FILE
 
PF_LOCAL


	)

26 
	#PF_INET
 2

	)

27 
	#PF_AX25
 3

	)

28 
	#PF_IPX
 4

	)

29 
	#PF_APPLETALK
 5

	)

30 
	#PF_NETROM
 6

	)

31 
	#PF_BRIDGE
 7

	)

32 
	#PF_ATMPVC
 8

	)

33 
	#PF_X25
 9

	)

34 
	#PF_INET6
 10

	)

35 
	#PF_ROSE
 11

	)

36 
	#PF_DEC√t
 12

	)

37 
	#PF_NETBEUI
 13

	)

38 
	#PF_SECURITY
 14

	)

39 
	#PF_KEY
 15

	)

40 
	#PF_NETLINK
 16

	)

41 
	#PF_ROUTE
 
PF_NETLINK


	)

42 
	#PF_PACKET
 17

	)

43 
	#PF_ASH
 18

	)

44 
	#PF_ECONET
 19

	)

45 
	#PF_ATMSVC
 20

	)

46 
	#PF_RDS
 21

	)

47 
	#PF_SNA
 22

	)

48 
	#PF_IRDA
 23

	)

49 
	#PF_PPPOX
 24

	)

50 
	#PF_WANPIPE
 25

	)

51 
	#PF_LLC
 26

	)

52 
	#PF_IB
 27

	)

53 
	#PF_MPLS
 28

	)

54 
	#PF_CAN
 29

	)

55 
	#PF_TIPC
 30

	)

56 
	#PF_BLUETOOTH
 31

	)

57 
	#PF_IUCV
 32

	)

58 
	#PF_RXRPC
 33

	)

59 
	#PF_ISDN
 34

	)

60 
	#PF_PHONET
 35

	)

61 
	#PF_IEEE802154
 36

	)

62 
	#PF_CAIF
 37

	)

63 
	#PF_ALG
 38

	)

64 
	#PF_NFC
 39

	)

65 
	#PF_VSOCK
 40

	)

66 
	#PF_KCM
 41

	)

67 
	#PF_QIPCRTR
 42

	)

68 
	#PF_SMC
 43

	)

69 
	#PF_XDP
 44

	)

70 
	#PF_MAX
 45

	)

72 
	#AF_UNSPEC
 
PF_UNSPEC


	)

73 
	#AF_LOCAL
 
PF_LOCAL


	)

74 
	#AF_UNIX
 
AF_LOCAL


	)

75 
	#AF_FILE
 
AF_LOCAL


	)

76 
	#AF_INET
 
PF_INET


	)

77 
	#AF_AX25
 
PF_AX25


	)

78 
	#AF_IPX
 
PF_IPX


	)

79 
	#AF_APPLETALK
 
PF_APPLETALK


	)

80 
	#AF_NETROM
 
PF_NETROM


	)

81 
	#AF_BRIDGE
 
PF_BRIDGE


	)

82 
	#AF_ATMPVC
 
PF_ATMPVC


	)

83 
	#AF_X25
 
PF_X25


	)

84 
	#AF_INET6
 
PF_INET6


	)

85 
	#AF_ROSE
 
PF_ROSE


	)

86 
	#AF_DEC√t
 
PF_DEC√t


	)

87 
	#AF_NETBEUI
 
PF_NETBEUI


	)

88 
	#AF_SECURITY
 
PF_SECURITY


	)

89 
	#AF_KEY
 
PF_KEY


	)

90 
	#AF_NETLINK
 
PF_NETLINK


	)

91 
	#AF_ROUTE
 
PF_ROUTE


	)

92 
	#AF_PACKET
 
PF_PACKET


	)

93 
	#AF_ASH
 
PF_ASH


	)

94 
	#AF_ECONET
 
PF_ECONET


	)

95 
	#AF_ATMSVC
 
PF_ATMSVC


	)

96 
	#AF_RDS
 
PF_RDS


	)

97 
	#AF_SNA
 
PF_SNA


	)

98 
	#AF_IRDA
 
PF_IRDA


	)

99 
	#AF_PPPOX
 
PF_PPPOX


	)

100 
	#AF_WANPIPE
 
PF_WANPIPE


	)

101 
	#AF_LLC
 
PF_LLC


	)

102 
	#AF_IB
 
PF_IB


	)

103 
	#AF_MPLS
 
PF_MPLS


	)

104 
	#AF_CAN
 
PF_CAN


	)

105 
	#AF_TIPC
 
PF_TIPC


	)

106 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

107 
	#AF_IUCV
 
PF_IUCV


	)

108 
	#AF_RXRPC
 
PF_RXRPC


	)

109 
	#AF_ISDN
 
PF_ISDN


	)

110 
	#AF_PHONET
 
PF_PHONET


	)

111 
	#AF_IEEE802154
 
PF_IEEE802154


	)

112 
	#AF_CAIF
 
PF_CAIF


	)

113 
	#AF_ALG
 
PF_ALG


	)

114 
	#AF_NFC
 
PF_NFC


	)

115 
	#AF_VSOCK
 
PF_VSOCK


	)

116 
	#AF_KCM
 
PF_KCM


	)

117 
	#AF_QIPCRTR
 
PF_QIPCRTR


	)

118 
	#AF_SMC
 
PF_SMC


	)

119 
	#AF_XDP
 
PF_XDP


	)

120 
	#AF_MAX
 
PF_MAX


	)

122 
	#SO_DEBUG
 1

	)

123 
	#SO_REUSEADDR
 2

	)

124 
	#SO_TYPE
 3

	)

125 
	#SO_ERROR
 4

	)

126 
	#SO_DONTROUTE
 5

	)

127 
	#SO_BROADCAST
 6

	)

128 
	#SO_SNDBUF
 7

	)

129 
	#SO_RCVBUF
 8

	)

130 
	#SO_KEEPALIVE
 9

	)

131 
	#SO_OOBINLINE
 10

	)

132 
	#SO_NO_CHECK
 11

	)

133 
	#SO_PRIORITY
 12

	)

134 
	#SO_LINGER
 13

	)

135 
	#SO_BSDCOMPAT
 14

	)

136 
	#SO_REUSEPORT
 15

	)

137 
	#SO_PASSCRED
 16

	)

138 
	#SO_PEERCRED
 17

	)

139 
	#SO_RCVLOWAT
 18

	)

140 
	#SO_SNDLOWAT
 19

	)

141 
	#SO_ACCEPTCONN
 30

	)

142 
	#SO_PEERSEC
 31

	)

143 
	#SO_SNDBUFFORCE
 32

	)

144 
	#SO_RCVBUFFORCE
 33

	)

145 
	#SO_PROTOCOL
 38

	)

146 
	#SO_DOMAIN
 39

	)

148 
	#SOL_SOCKET
 1

	)

150 
	#SOL_IP
 0

	)

151 
	#SOL_IPV6
 41

	)

152 
	#SOL_ICMPV6
 58

	)

154 
	#SOL_RAW
 255

	)

155 
	#SOL_DECNET
 261

	)

156 
	#SOL_X25
 262

	)

157 
	#SOL_PACKET
 263

	)

158 
	#SOL_ATM
 264

	)

159 
	#SOL_AAL
 265

	)

160 
	#SOL_IRDA
 266

	)

161 
	#SOL_NETBEUI
 267

	)

162 
	#SOL_LLC
 268

	)

163 
	#SOL_DCCP
 269

	)

164 
	#SOL_NETLINK
 270

	)

165 
	#SOL_TIPC
 271

	)

166 
	#SOL_RXRPC
 272

	)

167 
	#SOL_PPPOL2TP
 273

	)

168 
	#SOL_BLUETOOTH
 274

	)

169 
	#SOL_PNPIPE
 275

	)

170 
	#SOL_RDS
 276

	)

171 
	#SOL_IUCV
 277

	)

172 
	#SOL_CAIF
 278

	)

173 
	#SOL_ALG
 279

	)

174 
	#SOL_NFC
 280

	)

175 
	#SOL_KCM
 281

	)

176 
	#SOL_TLS
 282

	)

177 
	#SOL_XDP
 283

	)

179 
	tß_Ámûy_t
;

180 
	ssockaddr
 {

181 
ß_Ámûy_t
 
	mß_Ámûy
;

182 
	mß_d©a
[14];

185 
	ssockaddr_°‹age
 {

186 
ß_Ámûy_t
 
	mss_Ámûy
;

187 
	m__ss_∑ddög
[128 - (Ë- (
ß_Ámûy_t
)];

188 
	m__ss_Æign
;

191 
	tsockÀn_t
;

193 #i‡
deföed
(
AX_CONFIG_NET
)

194 
sockë
(, , );

195 
shutdown
(, );

197 
böd
(, c⁄° 
sockaddr
 *, 
sockÀn_t
);

198 
c⁄√˘
(, c⁄° 
sockaddr
 *, 
sockÀn_t
);

199 
li°í
(, );

200 
ac˚±
(, 
sockaddr
 *
__ª°ri˘
, 
sockÀn_t
 *__restrict);

202 
ssize_t
 
£nd
(, c⁄° *, 
size_t
, );

203 
ssize_t
 
ªcv
(, *, 
size_t
, );

204 
ssize_t
 
£ndto
(, c⁄° *, 
size_t
, , c⁄° 
sockaddr
 *, 
sockÀn_t
);

205 
ssize_t
 
ªcv‰om
(, *
__ª°ri˘
, 
size_t
, , 
sockaddr
 *__restrict,

206 
sockÀn_t
 *
__ª°ri˘
);

208 
gësock›t
(, , , *
__ª°ri˘
, 
sockÀn_t
 *__restrict);

209 
£tsock›t
(, , , c⁄° *, 
sockÀn_t
);

211 
gësock«me
(
sockfd
, 
sockaddr
 *
ª°ri˘
 
addr
, 
sockÀn_t
 *ª°ri˘ 
addæí
);

212 
gë≥î«me
(
sockfd
, 
sockaddr
 *
ª°ri˘
 
addr
, 
sockÀn_t
 *ª°ri˘ 
addæí
);

	@ulib/c_libax/include/sys/stat.h

1 #i‚de‡
__SYS_STAT_H__


2 
	#__SYS_STAT_H__


	)

4 
	~<sys/time.h
>

5 
	~<sys/ty≥s.h
>

7 
	s°©
 {

8 
dev_t
 
	m°_dev
;

9 
öo_t
 
	m°_öo
;

10 
mode_t
 
	m°_mode
;

11 
∆ök_t
 
	m°_∆ök
;

12 
uid_t
 
	m°_uid
;

13 
gid_t
 
	m°_gid
;

14 
dev_t
 
	m°_rdev
;

15 
off_t
 
	m°_size
;

16 
blksize_t
 
	m°_blksize
;

17 
blk˙t_t
 
	m°_blocks
;

18 
time•ec
 
	m°_©ime
;

19 
time•ec
 
	m°_mtime
;

20 
time•ec
 
	m°_˘ime
;

23 
	#°_©ime
 
°_©im
.
tv_£c


	)

24 
	#°_mtime
 
°_mtim
.
tv_£c


	)

25 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

27 
	#S_IFMT
 0170000

	)

29 
	#S_IFDIR
 0040000

	)

30 
	#S_IFCHR
 0020000

	)

31 
	#S_IFBLK
 0060000

	)

32 
	#S_IFREG
 0100000

	)

33 
	#S_IFIFO
 0010000

	)

34 
	#S_IFLNK
 0120000

	)

35 
	#S_IFSOCK
 0140000

	)

37 
	#S_TYPEISMQ
(
buf
Ë0

	)

38 
	#S_TYPEISSEM
(
buf
Ë0

	)

39 
	#S_TYPEISSHM
(
buf
Ë0

	)

40 
	#S_TYPEISTMO
(
buf
Ë0

	)

42 
	#S_ISDIR
(
mode
Ë(((mode)&
S_IFMT
Ë=
S_IFDIR
)

	)

43 
	#S_ISCHR
(
mode
Ë(((mode)&
S_IFMT
Ë=
S_IFCHR
)

	)

44 
	#S_ISBLK
(
mode
Ë(((mode)&
S_IFMT
Ë=
S_IFBLK
)

	)

45 
	#S_ISREG
(
mode
Ë(((mode)&
S_IFMT
Ë=
S_IFREG
)

	)

46 
	#S_ISFIFO
(
mode
Ë(((mode)&
S_IFMT
Ë=
S_IFIFO
)

	)

47 
	#S_ISLNK
(
mode
Ë(((mode)&
S_IFMT
Ë=
S_IFLNK
)

	)

48 
	#S_ISSOCK
(
mode
Ë(((mode)&
S_IFMT
Ë=
S_IFSOCK
)

	)

50 #i‚de‡
S_IRUSR


51 
	#S_ISUID
 04000

	)

52 
	#S_ISGID
 02000

	)

53 
	#S_ISVTX
 01000

	)

54 
	#S_IRUSR
 0400

	)

55 
	#S_IWUSR
 0200

	)

56 
	#S_IXUSR
 0100

	)

57 
	#S_IRWXU
 0700

	)

58 
	#S_IRGRP
 0040

	)

59 
	#S_IWGRP
 0020

	)

60 
	#S_IXGRP
 0010

	)

61 
	#S_IRWXG
 0070

	)

62 
	#S_IROTH
 0004

	)

63 
	#S_IWOTH
 0002

	)

64 
	#S_IXOTH
 0001

	)

65 
	#S_IRWXO
 0007

	)

68 
°©
(c⁄° *
∑th
, °© *
buf
);

69 
f°©
(
fd
, 
°©
 *
buf
);

70 
l°©
(c⁄° *
∑th
, 
°©
 *
buf
);

72 
fchmod
(
fd
, 
mode_t
 
mode
);

74 
mkdú
(c⁄° *
∑th«me
, 
mode_t
 
mode
);

	@ulib/c_libax/include/sys/time.h

1 #i‚de‡
__SYS_TIME_H__


2 
	#__SYS_TIME_H__


	)

4 
	~<°döt.h
>

6 
	ttime_t
;

8 
	stimevÆ
 {

9 
time_t
 
	mtv_£c
;

10 
	mtv_u£c
;

13 
	stime•ec
 {

14 
time_t
 
	mtv_£c
;

15 
	mtv_n£c
;

18 
time•ec
 
	ttime•ec
;

20 
	stimez⁄e
 {

21 
	mtz_möuãswe°
;

22 
	mtz_d°time
;

25 
gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
);

26 
utimes
(c⁄° *
fûíame
, c⁄° 
timevÆ
 
times
[2]);

	@ulib/c_libax/include/sys/types.h

1 #i‚de‡
__SYS_TYPES_H__


2 
	#__SYS_TYPES_H__


	)

4 
	~<°döt.h
>

6 
	tu_ch¨
;

8 
	tmode_t
;

9 
uöt32_t
 
	t∆ök_t
;

10 
öt64_t
 
	toff_t
;

11 
uöt64_t
 
	töo_t
;

12 
uöt64_t
 
	tdev_t
;

13 
	tblksize_t
;

14 
öt64_t
 
	tblk˙t_t
;

16 
	tpid_t
;

17 
	tuid_t
;

18 
	tgid_t
;

	@ulib/c_libax/include/time.h

1 #i‚de‡
__TIME_H__


2 
	#__TIME_H__


	)

4 
	~<°ddef.h
>

5 
	~<sys/time.h
>

7 
	ttime_t
;

9 
	#CLOCK_REALTIME
 0

	)

10 
	#CLOCK_MONOTONIC
 1

	)

11 
	#CLOCKS_PER_SEC
 1000000L

	)

13 
	stm
 {

14 
	mtm_£c
;

15 
	mtm_mö
;

16 
	mtm_hour
;

17 
	mtm_mday
;

18 
	mtm_m⁄
;

19 
	mtm_yór
;

20 
	mtm_wday
;

21 
	mtm_yday
;

22 
	mtm_isd°
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

27 
size_t
 
°r·ime
(*
__ª°ri˘__
 
_Buf
, size_à
_SizeInByãs
, c⁄° *__ª°ri˘__ 
_F‹m©
,

28 c⁄° 
tm
 *
__ª°ri˘__
 
_Tm
);

30 
tm
 *
gmtime
(c⁄° 
time_t
 *
timî
);

32 
tm
 *
loˇ…ime
(c⁄° 
time_t
 *
timï
);

33 
time_t
 
time
—ime_à*
t
);

34 
˛ock_gëtime
(
˛ockid_t
 
_˛k
, 
time•ec
 *
ts
);

35 
«no¶ìp
(c⁄° 
time•ec
 *
ªque°ed_time
, time•e¯*
ªmaöög
);

37 #ifde‡
AX_CONFIG_FP_SIMD


38 
dif·ime
(
time_t
,Åime_t);

	@ulib/c_libax/include/unistd.h

1 #i‚de‡
__UNISTD_H__


2 
	#__UNISTD_H__


	)

4 
	~<°ddef.h
>

5 
	~<sys/°©.h
>

7 #ifde‡
AX_CONFIG_ALLOC


8 
˛o£
(
fd
);

9 
ssize_t
 
ªad
(
fd
, *
buf
, 
size_t
 
cou¡
);

10 
ssize_t
 
wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
);

13 #ifde‡
AX_CONFIG_FS


14 
ssize_t
 
ªadlök
(c⁄° *
∑th
, *
buf
, 
size_t
 
bufsiz
);

15 
u∆ök
(c⁄° *
∑th«me
);

16 
rmdú
(c⁄° *
∑th«me
);

17 
·runˇã
(
fd
, 
off_t
 
Àngth
);

19 
ac˚ss
(c⁄° *
∑th«me
, 
mode
);

20 *
gëcwd
(*
buf
, 
size_t
 
size
);

21 
off_t
 
l£ek
(
fd
, off_à
off£t
, 
whí˚
);

22 
fsync
(
fd
);

23 
fchown
(
fd
, 
uid_t
 
ow√r
, 
gid_t
 
group
);

26 
¶ìp
(
£c⁄ds
);

27 
u¶ìp
(
u£c⁄ds
);

29 
uid_t
 
gëeuid
();

30 
pid_t
 
gëpid
();

32 #ifde‡
AX_CONFIG_PIPE


33 
pùe
(
fd
[2]);

34 
pùe2
(
fd
[2], 
Êag
);

37 #ifde‡
AX_CONFIG_ALLOC


38 
dup
();

39 
dup2
(, );

40 
dup3
(, , );

43 
sysc⁄f
(
«me
);

45 
	#_SC_ARG_MAX
 0

	)

46 
	#_SC_CHILD_MAX
 1

	)

47 
	#_SC_CLK_TCK
 2

	)

48 
	#_SC_NGROUPS_MAX
 3

	)

49 
	#_SC_OPEN_MAX
 4

	)

50 
	#_SC_STREAM_MAX
 5

	)

51 
	#_SC_TZNAME_MAX
 6

	)

52 
	#_SC_JOB_CONTROL
 7

	)

53 
	#_SC_SAVED_IDS
 8

	)

54 
	#_SC_REALTIME_SIGNALS
 9

	)

55 
	#_SC_PRIORITY_SCHEDULING
 10

	)

56 
	#_SC_TIMERS
 11

	)

57 
	#_SC_ASYNCHRONOUS_IO
 12

	)

58 
	#_SC_PRIORITIZED_IO
 13

	)

59 
	#_SC_SYNCHRONIZED_IO
 14

	)

60 
	#_SC_FSYNC
 15

	)

61 
	#_SC_MAPPED_FILES
 16

	)

62 
	#_SC_MEMLOCK
 17

	)

63 
	#_SC_MEMLOCK_RANGE
 18

	)

64 
	#_SC_MEMORY_PROTECTION
 19

	)

65 
	#_SC_MESSAGE_PASSING
 20

	)

66 
	#_SC_SEMAPHORES
 21

	)

67 
	#_SC_SHARED_MEMORY_OBJECTS
 22

	)

68 
	#_SC_AIO_LISTIO_MAX
 23

	)

69 
	#_SC_AIO_MAX
 24

	)

70 
	#_SC_AIO_PRIO_DELTA_MAX
 25

	)

71 
	#_SC_DELAYTIMER_MAX
 26

	)

72 
	#_SC_MQ_OPEN_MAX
 27

	)

73 
	#_SC_MQ_PRIO_MAX
 28

	)

74 
	#_SC_VERSION
 29

	)

75 
	#_SC_PAGE_SIZE
 30

	)

76 
	#_SC_PAGESIZE
 30

	)

77 
	#_SC_RTSIG_MAX
 31

	)

78 
	#_SC_SEM_NSEMS_MAX
 32

	)

79 
	#_SC_SEM_VALUE_MAX
 33

	)

80 
	#_SC_SIGQUEUE_MAX
 34

	)

81 
	#_SC_TIMER_MAX
 35

	)

82 
	#_SC_BC_BASE_MAX
 36

	)

83 
	#_SC_BC_DIM_MAX
 37

	)

84 
	#_SC_BC_SCALE_MAX
 38

	)

85 
	#_SC_BC_STRING_MAX
 39

	)

86 
	#_SC_COLL_WEIGHTS_MAX
 40

	)

87 
	#_SC_EXPR_NEST_MAX
 42

	)

88 
	#_SC_LINE_MAX
 43

	)

89 
	#_SC_RE_DUP_MAX
 44

	)

90 
	#_SC_2_VERSION
 46

	)

91 
	#_SC_2_C_BIND
 47

	)

92 
	#_SC_2_C_DEV
 48

	)

93 
	#_SC_2_FORT_DEV
 49

	)

94 
	#_SC_2_FORT_RUN
 50

	)

95 
	#_SC_2_SW_DEV
 51

	)

96 
	#_SC_2_LOCALEDEF
 52

	)

97 
	#_SC_UIO_MAXIOV
 60

	)

98 
	#_SC_IOV_MAX
 60

	)

99 
	#_SC_THREADS
 67

	)

100 
	#_SC_THREAD_SAFE_FUNCTIONS
 68

	)

101 
	#_SC_GETGR_R_SIZE_MAX
 69

	)

102 
	#_SC_GETPW_R_SIZE_MAX
 70

	)

103 
	#_SC_LOGIN_NAME_MAX
 71

	)

104 
	#_SC_TTY_NAME_MAX
 72

	)

105 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 73

	)

106 
	#_SC_THREAD_KEYS_MAX
 74

	)

107 
	#_SC_THREAD_STACK_MIN
 75

	)

108 
	#_SC_THREAD_THREADS_MAX
 76

	)

109 
	#_SC_THREAD_ATTR_STACKADDR
 77

	)

110 
	#_SC_THREAD_ATTR_STACKSIZE
 78

	)

111 
	#_SC_THREAD_PRIORITY_SCHEDULING
 79

	)

112 
	#_SC_THREAD_PRIO_INHERIT
 80

	)

113 
	#_SC_THREAD_PRIO_PROTECT
 81

	)

114 
	#_SC_THREAD_PROCESS_SHARED
 82

	)

115 
	#_SC_NPROCESSORS_CONF
 83

	)

116 
	#_SC_NPROCESSORS_ONLN
 84

	)

117 
	#_SC_PHYS_PAGES
 85

	)

118 
	#_SC_AVPHYS_PAGES
 86

	)

119 
	#_SC_ATEXIT_MAX
 87

	)

120 
	#_SC_PASS_MAX
 88

	)

121 
	#_SC_XOPEN_VERSION
 89

	)

122 
	#_SC_XOPEN_XCU_VERSION
 90

	)

123 
	#_SC_XOPEN_UNIX
 91

	)

124 
	#_SC_XOPEN_CRYPT
 92

	)

125 
	#_SC_XOPEN_ENH_I18N
 93

	)

126 
	#_SC_XOPEN_SHM
 94

	)

127 
	#_SC_2_CHAR_TERM
 95

	)

128 
	#_SC_2_UPE
 97

	)

129 
	#_SC_XOPEN_XPG2
 98

	)

130 
	#_SC_XOPEN_XPG3
 99

	)

131 
	#_SC_XOPEN_XPG4
 100

	)

132 
	#_SC_NZERO
 109

	)

133 
	#_SC_XBS5_ILP32_OFF32
 125

	)

134 
	#_SC_XBS5_ILP32_OFFBIG
 126

	)

135 
	#_SC_XBS5_LP64_OFF64
 127

	)

136 
	#_SC_XBS5_LPBIG_OFFBIG
 128

	)

137 
	#_SC_XOPEN_LEGACY
 129

	)

138 
	#_SC_XOPEN_REALTIME
 130

	)

139 
	#_SC_XOPEN_REALTIME_THREADS
 131

	)

140 
	#_SC_ADVISORY_INFO
 132

	)

141 
	#_SC_BARRIERS
 133

	)

142 
	#_SC_CLOCK_SELECTION
 137

	)

143 
	#_SC_CPUTIME
 138

	)

144 
	#_SC_THREAD_CPUTIME
 139

	)

145 
	#_SC_MONOTONIC_CLOCK
 149

	)

146 
	#_SC_READER_WRITER_LOCKS
 153

	)

147 
	#_SC_SPIN_LOCKS
 154

	)

148 
	#_SC_REGEXP
 155

	)

149 
	#_SC_SHELL
 157

	)

150 
	#_SC_SPAWN
 159

	)

151 
	#_SC_SPORADIC_SERVER
 160

	)

152 
	#_SC_THREAD_SPORADIC_SERVER
 161

	)

153 
	#_SC_TIMEOUTS
 164

	)

154 
	#_SC_TYPED_MEMORY_OBJECTS
 165

	)

155 
	#_SC_2_PBS
 168

	)

156 
	#_SC_2_PBS_ACCOUNTING
 169

	)

157 
	#_SC_2_PBS_LOCATE
 170

	)

158 
	#_SC_2_PBS_MESSAGE
 171

	)

159 
	#_SC_2_PBS_TRACK
 172

	)

160 
	#_SC_SYMLOOP_MAX
 173

	)

161 
	#_SC_STREAMS
 174

	)

162 
	#_SC_2_PBS_CHECKPOINT
 175

	)

163 
	#_SC_V6_ILP32_OFF32
 176

	)

164 
	#_SC_V6_ILP32_OFFBIG
 177

	)

165 
	#_SC_V6_LP64_OFF64
 178

	)

166 
	#_SC_V6_LPBIG_OFFBIG
 179

	)

167 
	#_SC_HOST_NAME_MAX
 180

	)

168 
	#_SC_TRACE
 181

	)

169 
	#_SC_TRACE_EVENT_FILTER
 182

	)

170 
	#_SC_TRACE_INHERIT
 183

	)

171 
	#_SC_TRACE_LOG
 184

	)

173 
	#_SC_IPV6
 235

	)

174 
	#_SC_RAW_SOCKETS
 236

	)

175 
	#_SC_V7_ILP32_OFF32
 237

	)

176 
	#_SC_V7_ILP32_OFFBIG
 238

	)

177 
	#_SC_V7_LP64_OFF64
 239

	)

178 
	#_SC_V7_LPBIG_OFFBIG
 240

	)

179 
	#_SC_SS_REPL_MAX
 241

	)

180 
	#_SC_TRACE_EVENT_NAME_MAX
 242

	)

181 
	#_SC_TRACE_NAME_MAX
 243

	)

182 
	#_SC_TRACE_SYS_MAX
 244

	)

183 
	#_SC_TRACE_USER_EVENT_MAX
 245

	)

184 
	#_SC_XOPEN_STREAMS
 246

	)

185 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 247

	)

186 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 248

	)

	@ulib/c_libax/src/assert.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
_N‹ëu∫
 
	$__as£π_Áû
(c⁄° *
ex¥
, c⁄° *
fûe
, 
löe
, c⁄° *
func
)

6 
	`Ârötf
(
°dîr
, "As£πi⁄ faûed: %†(%s: %s: %d)\n", 
ex¥
, 
fûe
, 
func
, 
löe
);

7 
	`ab‹t
();

8 
	}
}

	@ulib/c_libax/src/ctype.c

1 
	~<˘y≥.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

5 
	$tﬁowî
(
c
)

7 i‡(
	`isuµî
(
c
))

8  
c
 | 32;

9  
c
;

10 
	}
}

12 
	$touµî
(
c
)

14 i‡(
	`i¶owî
(
c
))

15  
c
 & 0x5f;

16  
c
;

17 
	}
}

	@ulib/c_libax/src/dirent.c

1 
	~<dúít.h
>

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<sys/°©.h
>

8 
	~<uni°d.h
>

10 #ifde‡
AX_CONFIG_ALLOC


11 
	$˛o£dú
(
DIR
 *
dú
)

13 
ªt
 = 
	`˛o£
(
dú
->
fd
);

14 
	`‰ì
(
dú
);

15  
ªt
;

16 
	}
}

18 
DIR
 *
	$fd›ídú
(
fd
)

20 
DIR
 *
dú
;

21 
°©
 
°
;

23 i‡(
	`f°©
(
fd
, &
°
) < 0) {

26 i‡(
	`f˙é
(
fd
, 
F_GETFL
Ë& 
O_PATH
) {

27 
î∫o
 = 
EBADF
;

30 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

31 
î∫o
 = 
ENOTDIR
;

34 i‡(!(
dú
 = 
	`ˇŒoc
(1, (*dir)))) {

38 
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
);

39 
dú
->
fd
 = fd;

40  
dú
;

41 
	}
}

45 
	$dúfd
(
DIR
 *
d
)

47  
d
->
fd
;

48 
	}
}

	@ulib/c_libax/src/env.c

1 
	~<°rög.h
>

2 
	~<uni°d.h
>

4 **
	gívú⁄
 = 0;

6 *
	$gëív
(c⁄° *
«me
)

8 
size_t
 
l
 = 
	`°rch∫ul
(
«me
, '=') -Çame;

9 i‡(
l
 && !
«me
[l] && 
ívú⁄
)

10 **
e
 = 
ívú⁄
; *e;É++)

11 i‡(!
	`°∫cmp
(
«me
, *
e
, 
l
) &&Ü[*e] == '=')

12  *
e
 + 
l
 + 1;

14 
	}
}

	@ulib/c_libax/src/epoll.c

1 
	~<°dio.h
>

2 
	~<sys/ïﬁl.h
>

4 
	~<libax.h
>

6 
	$ïﬁl_¸óã
(
size
)

8  
	`ax_ïﬁl_¸óã
(
size
);

9 
	}
}

11 
	$ïﬁl_˘l
(
fd
, 
›
, 
fd2
, 
ïﬁl_evít
 *
ev
)

13  
	`ax_ïﬁl_˘l
(
fd
, 
›
, 
fd2
, 
ev
);

14 
	}
}

16 
	$ïﬁl_waô
(
fd
, 
ïﬁl_evít
 *
ev
, 
˙t
, 
to
)

18  
	`ax_ïﬁl_waô
(
fd
, 
ev
, 
˙t
, 
to
);

19 
	}
}

	@ulib/c_libax/src/fcntl.c

1 
	~<f˙é.h
>

2 
	~<libax.h
>

3 
	~<°dio.h
>

5 
	$f˙é
(
fd
, 
cmd
, ... )

7 
¨g
;

8 
va_li°
 
≠
;

9 
	`va_°¨t
(
≠
, 
cmd
);

10 
¨g
 = 
	`va_¨g
(
≠
, );

11 
	`va_íd
(
≠
);

13  
	`ax_f˙é
(
fd
, 
cmd
, 
¨g
);

14 
	}
}

16 #ifde‡
AX_CONFIG_FS


17 
	$›í
(c⁄° *
fûíame
, 
Êags
, ...)

19 
mode_t
 
mode
 = 0;

21 i‡((
Êags
 & 
O_CREAT
Ë|| (Êag†& 
O_TMPFILE
) == O_TMPFILE) {

22 
va_li°
 
≠
;

23 
	`va_°¨t
(
≠
, 
Êags
);

24 
mode
 = 
	`va_¨g
(
≠
, 
mode_t
);

25 
	`va_íd
(
≠
);

28  
	`ax_›í
(
fûíame
, 
Êags
, 
mode
);

29 
	}
}

	@ulib/c_libax/src/libgen.c

1 
	~<libgí.h
>

2 
	~<°rög.h
>

4 *
	$dú«me
(*
s
)

6 
size_t
 
i
;

7 i‡(!
s
 || !*s)

9 
i
 = 
	`°æí
(
s
) - 1;

10 ; 
s
[
i
] == '/'; i--)

11 i‡(!
i
)

13 ; 
s
[
i
] != '/'; i--)

14 i‡(!
i
)

16 ; 
s
[
i
] == '/'; i--)

17 i‡(!
i
)

19 
s
[
i
 + 1] = 0;

20  
s
;

21 
	}
}

23 *
	$ba£«me
(*
s
)

25 
size_t
 
i
;

26 i‡(!
s
 || !*s)

28 
i
 = 
	`°æí
(
s
) - 1;

29 ; 
i
 && 
s
[i] == '/'; i--) s[i] = 0;

30 ; 
i
 && 
s
[i - 1] != '/'; i--)

32  
s
 + 
i
;

33 
	}
}

	@ulib/c_libax/src/math.c

1 
	~<Êﬂt.h
>

2 
	~<m©h.h
>

3 
	~<°döt.h
>

4 #i‡
deföed
(
AX_CONFIG_FP_SIMD
)

5 
	#FORCE_EVAL
(
x
) \

7 i‡((
x
) == ()) { \

8 
	`Â_f‹˚_evÆf
(
x
); \

9 } i‡((
x
) == ()) { \

10 
	`Â_f‹˚_evÆ
(
x
); \

12 } 0)

	)

19 
ölöe
 
	$Â_f‹˚_evÆf
(
x
)

21 vﬁ©ûê
y
;

22 
y
 = 
x
;

23 
	}
}

25 
ölöe
 
	$Â_f‹˚_evÆ
(
x
)

27 vﬁ©ûê
y
;

28 
y
 = 
x
;

29 
	}
}

31 
	$__Â˛assify
(
x
)

34 
f
;

35 
uöt64_t
 
i
;

36 } 
u
 = {
x
};

37 
e
 = 
u
.
i
 >> 52 & 0x7ff;

38 i‡(!
e
)

39  
u
.
i
 << 1 ? 
FP_SUBNORMAL
 : 
FP_ZERO
;

40 i‡(
e
 == 0x7ff)

41  
u
.
i
 << 12 ? 
FP_NAN
 : 
FP_INFINITE
;

42  
FP_NORMAL
;

43 
	}
}

45 
	$__Â˛assifyf
(
x
)

48 
f
;

49 
uöt32_t
 
i
;

50 } 
u
 = {
x
};

51 
e
 = 
u
.
i
 >> 23 & 0xff;

52 i‡(!
e
)

53  
u
.
i
 << 1 ? 
FP_SUBNORMAL
 : 
FP_ZERO
;

54 i‡(
e
 == 0xff)

55  
u
.
i
 << 9 ? 
FP_NAN
 : 
FP_INFINITE
;

56  
FP_NORMAL
;

57 
	}
}

59 
	$Ábs
(
x
)

62 
f
;

63 
uöt64_t
 
i
;

64 } 
u
 = {
x
};

65 
u
.
i
 &= -1ULL / 2;

66  
u
.
f
;

67 
	}
}

69 c⁄° 
	gtoöt
 = 1 / 
DBL_EPSILON
;

71 
	$Êo‹
(
x
)

74 
f
;

75 
uöt64_t
 
i
;

76 } 
u
 = {
x
};

77 
e
 = 
u
.
i
 >> 52 & 0x7ff;

78 
y
;

80 i‡(
e
 >0x3f‡+ 52 || 
x
 == 0)

81  
x
;

83 i‡(
u
.
i
 >> 63)

84 
y
 = 
x
 - 
toöt
 +Åoint - x;

86 
y
 = 
x
 + 
toöt
 -Åoint - x;

88 i‡(
e
 <= 0x3ff - 1) {

89 
	`FORCE_EVAL
(
y
);

90  
u
.
i
 >> 63 ? -1 : 0;

92 i‡(
y
 > 0)

93  
x
 + 
y
 - 1;

94  
x
 + 
y
;

95 
	}
}

	@ulib/c_libax/src/mmap.c

1 
	~<°ddef.h
>

2 
	~<°dio.h
>

5 *
	$mm≠
(*
addr
, 
size_t
 
Àn
, 
¥Ÿ
, 
Êags
, 
fûdes
, 
off_t
 
off
)

7 
	`unim∂emíãd
();

8  
NULL
;

9 
	}
}

12 
	$munm≠
(*
addr
, 
size_t
 
Àngth
)

14 
	`unim∂emíãd
();

16 
	}
}

19 *
	$mªm≠
(*
ﬁd_addªss
, 
size_t
 
ﬁd_size
, size_à
√w_size
, 
Êags
,

22 
	`unim∂emíãd
();

23  
NULL
;

24 
	}
}

	@ulib/c_libax/src/network.c

1 
	~<˘y≥.h
>

2 
	~<î∫o.h
>

3 
	~<libax.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<sys/sockë.h
>

9 
	~<¨∑/öë.h
>

10 
	~<√tdb.h
>

11 
	~<√töë/ö.h
>

13 
	gh_î∫o
;

15 #i‡
deföed
(
AX_CONFIG_ALLOC
Ë&& deföed(
AX_CONFIG_NET
)

18 
	$gëaddröfo
(c⁄° *
__ª°ri˘
 
node
, c⁄° *__ª°ri˘ 
£rvi˚
,

19 c⁄° 
addröfo
 *
__ª°ri˘
 
höts
, addröfÿ**__ª°ri˘ 
ªs
)

21 
sockaddr
 *
addrs
 = (sockadd∏*)
	`mÆloc
(
MAXADDRS
 * (sockaddr));

22 
ªs_Àn
 = 
	`ax_ªsﬁve_sockaddr
(
node
, 
£rvi˚
, 
addrs
, 
MAXADDRS
);

23 i‡(
ªs_Àn
 < 0)

24  
EAI_FAIL
;

25 i‡(
ªs_Àn
 == 0)

26  
EAI_NONAME
;

27 
addröfo
 *
_ªs
 = (addröfÿ*)
	`ˇŒoc
(
ªs_Àn
, (addrinfo));

28 
i
 = 0; i < 
ªs_Àn
; i++) {

29 (
_ªs
 + 
i
)->
ai_Ámûy
 = 
AF_INET
;

30 (
_ªs
 + 
i
)->
ai_addæí
 = (
sockaddr
);

31 (
_ªs
 + 
i
)->
ai_addr
 = (
addrs
 + i);

32 (
_ªs
 + 
i
)->
ai_√xt
 = (_res + i + 1);

34 (
_ªs
 + 
ªs_Àn
 - 1)->
ai_√xt
 = 
NULL
;

35 *
ªs
 = 
_ªs
;

37 
	}
}

39 
	$‰ìaddröfo
(
addröfo
 *
__ª°ri˘
 
ªs
)

41 
	`‰ì
(
ªs
->
ai_addr
);

42 
	`‰ì
(
ªs
);

44 
	}
}

47 c⁄° 
	gmsgs
[] = "HostÇot found\0"

53 c⁄° *
	$h°ªº‹
(
ecode
)

55 c⁄° *
s
;

56 
s
 = 
msgs
, 
ecode
--;Écode && *s;Écode--, s++)

57 ; *
s
; s++)

59 i‡(!*
s
)

60 
s
++;

61  
s
;

62 
	}
}

64 
__ölöe
 
uöt16_t
 
	$__bsw≠_16
(
uöt16_t
 
__x
)

66  
__x
 << 8 | __x >> 8;

67 
	}
}

69 
__ölöe
 
uöt32_t
 
	$__bsw≠_32
(
uöt32_t
 
__x
)

71  
__x
 >> 24 | (__x >> 8 & 0xff00) | (__x << 8 & 0xff0000) | __x << 24;

72 
	}
}

74 
uöt32_t
 
	$ht⁄l
(
uöt32_t
 
n
)

77 
i
;

78 
c
;

79 } 
u
 = {1};

80  
u
.
c
 ? 
	`__bsw≠_32
(
n
) :Ç;

81 
	}
}

83 
uöt16_t
 
	$ht⁄s
(
uöt16_t
 
n
)

86 
i
;

87 
c
;

88 } 
u
 = {1};

89  
u
.
c
 ? 
	`__bsw≠_16
(
n
) :Ç;

90 
	}
}

92 
uöt32_t
 
	$¡ohl
(
uöt32_t
 
n
)

95 
i
;

96 
c
;

97 } 
u
 = {1};

98  
u
.
c
 ? 
	`__bsw≠_32
(
n
) :Ç;

99 
	}
}

101 
uöt16_t
 
	$¡ohs
(
uöt16_t
 
n
)

104 
i
;

105 
c
;

106 } 
u
 = {1};

107  
u
.
c
 ? 
	`__bsw≠_16
(
n
) :Ç;

108 
	}
}

110 
	$hexvÆ
(
c
)

112 i‡(
c
 - '0' < 10)

113  
c
 - '0';

114 
c
 |= 32;

115 i‡(
c
 - 'a' < 6)

116  
c
 - 'a' + 10;

118 
	}
}

120 
	$öë_±⁄
(
af
, c⁄° *
__ª°ri˘
 
s
, *__ª°ri˘ 
a0
)

122 
uöt16_t
 
ù
[8];

123 *
a
 = 
a0
;

124 
i
, 
j
, 
v
, 
d
, 
brk
 = -1, 
√ed_v4
 = 0;

126 i‡(
af
 =
AF_INET
) {

127 
i
 = 0; i < 4; i++) {

128 
v
 = 
j
 = 0; j < 3 && 
	`isdigô
(
s
[j]); j++) v = 10 * v + s[j] - '0';

129 i‡(
j
 =0 || (j > 1 && 
s
[0] ='0'Ë|| 
v
 > 255)

131 
a
[
i
] = 
v
;

132 i‡(
s
[
j
] =0 && 
i
 == 3)

134 i‡(
s
[
j
] != '.')

136 
s
 +
j
 + 1;

139 } i‡(
af
 !
AF_INET6
) {

140 
î∫o
 = 
EAFNOSUPPORT
;

144 i‡(*
s
 == ':' && *++s != ':')

147 
i
 = 0;; i++) {

148 i‡(
s
[0] =':' && 
brk
 < 0) {

149 
brk
 = 
i
;

150 
ù
[
i
 & 7] = 0;

151 i‡(!*++
s
)

153 i‡(
i
 == 7)

157 
v
 = 
j
 = 0; j < 4 && (
d
 = 
	`hexvÆ
(
s
[j])) >= 0; j++) v = 16 * v + d;

158 i‡(
j
 == 0)

160 
ù
[
i
 & 7] = 
v
;

161 i‡(!
s
[
j
] && (
brk
 >0 || 
i
 == 7))

163 i‡(
i
 == 7)

165 i‡(
s
[
j
] != ':') {

166 i‡(
s
[
j
] !'.' || (
i
 < 6 && 
brk
 < 0))

168 
√ed_v4
 = 1;

169 
i
++;

172 
s
 +
j
 + 1;

174 i‡(
brk
 >= 0) {

175 
j
 = 0; j < 7 - 
i
; j++Ë
ù
[
brk
 + j] = 0;

176 
	`memmove
(
ù
 + 
brk
 + 7 - 
i
, ip + brk, 2 * (i + 1 - brk));

178 
j
 = 0; j < 8; j++) {

179 *
a
++ = 
ù
[
j
] >> 8;

180 *
a
++ = 
ù
[
j
];

182 i‡(
√ed_v4
 && 
	`öë_±⁄
(
AF_INET
, (*)
s
, 
a
 - 4) <= 0)

185 
	}
}

187 c⁄° *
	$öë_¡›
(
af
, c⁄° *
__ª°ri˘
 
a0
, *__ª°ri˘ 
s
, 
sockÀn_t
 
l
)

189 c⁄° *
a
 = 
a0
;

190 
i
, 
j
, 
max
, 
be°
;

191 
buf
[100];

193 
af
) {

194 
AF_INET
:

195 i‡(
	`¢¥ötf
(
s
, 
l
, "%d.%d.%d.%d", 
a
[0],á[1],á[2],á[3]) <Ü)

196  
s
;

198 
AF_INET6
:

199 i‡(
	`memcmp
(
a
, "\0\0\0\0\0\0\0\0\0\0\377\377", 12))

200 
	`¢¥ötf
(
buf
,  buf, "%x:%x:%x:%x:%x:%x:%x:%x", 256 * 
a
[0] +á[1],

201 256 * 
a
[2] +á[3], 256 *á[4] +á[5], 256 *á[6] +á[7], 256 *á[8] +á[9],

202 256 * 
a
[10] +á[11], 256 *á[12] +á[13], 256 *á[14] +á[15]);

204 
	`¢¥ötf
(
buf
,  buf, "%x:%x:%x:%x:%x:%x:%d.%d.%d.%d", 256 * 
a
[0] +á[1],

205 256 * 
a
[2] +á[3], 256 *á[4] +á[5], 256 *á[6] +á[7], 256 *á[8] +á[9],

206 256 * 
a
[10] +á[11],á[12],á[13],á[14],á[15]);

208 
i
 = 
be°
 = 0, 
max
 = 2; 
buf
[i]; i++) {

209 i‡(
i
 && 
buf
[i] != ':')

211 
j
 = 
	`°r•n
(
buf
 + 
i
, ":0");

212 i‡(
j
 > 
max
)

213 
be°
 = 
i
, 
max
 = 
j
;

215 i‡(
max
 > 3) {

216 
buf
[
be°
] = buf[best + 1] = ':';

217 
	`memmove
(
buf
 + 
be°
 + 2, bu‡+ be° + 
max
, 
i
 - best - max + 1);

219 i‡(
	`°æí
(
buf
Ë< 
l
) {

220 
	`°r˝y
(
s
, 
buf
);

221  
s
;

225 
î∫o
 = 
EAFNOSUPPORT
;

228 
î∫o
 = 
ENOSPC
;

230 
	}
}

	@ulib/c_libax/src/printf.c

42 
	#PRINTF_INCLUDE_CONFIG_H
 1

	)

44 #i‡
PRINTF_INCLUDE_CONFIG_H


45 
	~"¥ötf_c⁄fig.h
"

48 
	~"¥ötf.h
"

50 #ifde‡
__˝lu•lus


51 
	~<˛imôs
>

52 
	~<c°döt
>

54 
	~<limôs.h
>

55 
	~<°d¨g.h
>

56 
	~<°dboﬁ.h
>

57 
	~<°döt.h
>

60 #i‡
PRINTF_ALIAS_STANDARD_FUNCTION_NAMES


61 
	#¥ötf_
 
¥ötf


	)

62 
	#•rötf_
 
•rötf


	)

63 
	#v•rötf_
 
v•rötf


	)

64 
	#¢¥ötf_
 
¢¥ötf


	)

65 
	#v¢¥ötf_
 
v¢¥ötf


	)

66 
	#v¥ötf_
 
v¥ötf


	)

71 #i‚de‡
PRINTF_INTEGER_BUFFER_SIZE


72 
	#PRINTF_INTEGER_BUFFER_SIZE
 32

	)

78 #i‚de‡
PRINTF_DECIMAL_BUFFER_SIZE


79 
	#PRINTF_DECIMAL_BUFFER_SIZE
 32

	)

83 #i‚de‡
PRINTF_SUPPORT_DECIMAL_SPECIFIERS


84 
	#PRINTF_SUPPORT_DECIMAL_SPECIFIERS
 1

	)

88 #i‚de‡
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS


89 
	#PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 1

	)

93 #i‚de‡
PRINTF_SUPPORT_WRITEBACK_SPECIFIER


94 
	#PRINTF_SUPPORT_WRITEBACK_SPECIFIER
 1

	)

98 #i‚de‡
PRINTF_DEFAULT_FLOAT_PRECISION


99 
	#PRINTF_DEFAULT_FLOAT_PRECISION
 6

	)

106 #i‚de‡
PRINTF_MAX_INTEGRAL_DIGITS_FOR_DECIMAL


107 
	#PRINTF_MAX_INTEGRAL_DIGITS_FOR_DECIMAL
 9

	)

112 #i‚de‡
PRINTF_SUPPORT_LONG_LONG


113 
	#PRINTF_SUPPORT_LONG_LONG
 1

	)

119 #i‚de‡
PRINTF_LOG10_TAYLOR_TERMS


120 
	#PRINTF_LOG10_TAYLOR_TERMS
 4

	)

123 #i‡
PRINTF_LOG10_TAYLOR_TERMS
 <= 1

129 #i‚de‡
PRINTF_CHECK_FOR_NUL_IN_FORMAT_SPECIFIER


130 
	#PRINTF_CHECK_FOR_NUL_IN_FORMAT_SPECIFIER
 1

	)

133 
	#PRINTF_PREFER_DECIMAL
 
Ál£


	)

134 
	#PRINTF_PREFER_EXPONENTIAL
 
åue


	)

139 
	#PRINTF_CONCATENATE
(
s1
, 
s2
Ës1##
	)
s2

140 
	#PRINTF_EXPAND_THEN_CONCATENATE
(
s1
, 
s2
Ë
	`PRINTF_CONCATENATE
(s1, s2)

	)

141 
	#PRINTF_FLOAT_NOTATION_THRESHOLD
 \

142 
	`PRINTF_EXPAND_THEN_CONCATENATE
(1e, 
PRINTF_MAX_INTEGRAL_DIGITS_FOR_DECIMAL
)

	)

145 
	#FLAGS_ZEROPAD
 (1U << 0U)

	)

146 
	#FLAGS_LEFT
 (1U << 1U)

	)

147 
	#FLAGS_PLUS
 (1U << 2U)

	)

148 
	#FLAGS_SPACE
 (1U << 3U)

	)

149 
	#FLAGS_HASH
 (1U << 4U)

	)

150 
	#FLAGS_UPPERCASE
 (1U << 5U)

	)

151 
	#FLAGS_CHAR
 (1U << 6U)

	)

152 
	#FLAGS_SHORT
 (1U << 7U)

	)

153 
	#FLAGS_INT
 (1U << 8U)

	)

155 
	#FLAGS_LONG
 (1U << 9U)

	)

156 
	#FLAGS_LONG_LONG
 (1U << 10U)

	)

157 
	#FLAGS_PRECISION
 (1U << 11U)

	)

158 
	#FLAGS_ADAPT_EXP
 (1U << 12U)

	)

159 
	#FLAGS_POINTER
 (1U << 13U)

	)

161 
	#FLAGS_SIGNED
 (1U << 14U)

	)

164 #ifde‡
PRINTF_SUPPORT_MSVC_STYLE_INTEGER_SPECIFIERS


166 
	#FLAGS_INT8
 
FLAGS_CHAR


	)

168 #i‡(
SHRT_MAX
 == 32767LL)

169 
	#FLAGS_INT16
 
FLAGS_SHORT


	)

170 #ñi‡(
INT_MAX
 == 32767LL)

171 
	#FLAGS_INT16
 
FLAGS_INT


	)

172 #ñi‡(
LONG_MAX
 == 32767LL)

173 
	#FLAGS_INT16
 
FLAGS_LONG


	)

174 #ñi‡(
LLONG_MAX
 == 32767LL)

175 
	#FLAGS_INT16
 
FLAGS_LONG_LONG


	)

180 #i‡(
SHRT_MAX
 == 2147483647LL)

181 
	#FLAGS_INT32
 
FLAGS_SHORT


	)

182 #ñi‡(
INT_MAX
 == 2147483647LL)

183 
	#FLAGS_INT32
 
FLAGS_INT


	)

184 #ñi‡(
LONG_MAX
 == 2147483647LL)

185 
	#FLAGS_INT32
 
FLAGS_LONG


	)

186 #ñi‡(
LLONG_MAX
 == 2147483647LL)

187 
	#FLAGS_INT32
 
FLAGS_LONG_LONG


	)

192 #i‡(
SHRT_MAX
 == 9223372036854775807LL)

193 
	#FLAGS_INT64
 
FLAGS_SHORT


	)

194 #ñi‡(
INT_MAX
 == 9223372036854775807LL)

195 
	#FLAGS_INT64
 
FLAGS_INT


	)

196 #ñi‡(
LONG_MAX
 == 9223372036854775807LL)

197 
	#FLAGS_INT64
 
FLAGS_LONG


	)

198 #ñi‡(
LLONG_MAX
 == 9223372036854775807LL)

199 
	#FLAGS_INT64
 
FLAGS_LONG_LONG


	)

206 
	t¥ötf_Êags_t
;

208 
	#BASE_BINARY
 2

	)

209 
	#BASE_OCTAL
 8

	)

210 
	#BASE_DECIMAL
 10

	)

211 
	#BASE_HEX
 16

	)

213 
uöt8_t
 
	tnumîic_ba£_t
;

215 #i‡
PRINTF_SUPPORT_LONG_LONG


216 
	t¥ötf_unsig√d_vÆue_t
;

217 
	t¥ötf_sig√d_vÆue_t
;

219 
	t¥ötf_unsig√d_vÆue_t
;

220 
	t¥ötf_sig√d_vÆue_t
;

228 
	t¥ötf_size_t
;

229 
	#PRINTF_MAX_POSSIBLE_BUFFER_SIZE
 
INT_MAX


	)

234 #i‡(
PRINTF_SUPPORT_DECIMAL_SPECIFIERS
 || 
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
)

235 
	~<Êﬂt.h
>

236 #i‡
FLT_RADIX
 != 2

240 #i‡
DBL_MANT_DIG
 == 24

242 
	#DOUBLE_SIZE_IN_BITS
 32

	)

243 
uöt32_t
 
	tdoubÀ_uöt_t
;

244 
	#DOUBLE_EXPONENT_MASK
 0xFFU

	)

245 
	#DOUBLE_BASE_EXPONENT
 127

	)

246 
	#DOUBLE_MAX_SUBNORMAL_EXPONENT_OF_10
 -38

	)

247 
	#DOUBLE_MAX_SUBNORMAL_POWER_OF_10
 1e-38

	)

249 #ñi‡
DBL_MANT_DIG
 == 53

251 
	#DOUBLE_SIZE_IN_BITS
 64

	)

252 
uöt64_t
 
	tdoubÀ_uöt_t
;

253 
	#DOUBLE_EXPONENT_MASK
 0x7FFU

	)

254 
	#DOUBLE_BASE_EXPONENT
 1023

	)

255 
	#DOUBLE_MAX_SUBNORMAL_EXPONENT_OF_10
 -308

	)

256 
	#DOUBLE_MAX_SUBNORMAL_POWER_OF_10
 1e-308

	)

261 
	#DOUBLE_STORED_MANTISSA_BITS
 (
DBL_MANT_DIG
 - 1)

	)

264 
doubÀ_uöt_t
 
	mU
;

265 
	mF
;

266 } 
	tdoubÀ_wôh_bô_ac˚ss
;

273 
ölöe
 
doubÀ_wôh_bô_ac˚ss
 
	$gë_bô_ac˚ss
(
x
)

275 
doubÀ_wôh_bô_ac˚ss
 
dwba
;

276 
dwba
.
F
 = 
x
;

277  
dwba
;

278 
	}
}

280 
ölöe
 
	$gë_sign_bô
(
x
)

283  ()(
	`gë_bô_ac˚ss
(
x
).
U
 >> (
DOUBLE_SIZE_IN_BITS
 - 1));

284 
	}
}

286 
ölöe
 
	$gë_exp2
(
doubÀ_wôh_bô_ac˚ss
 
x
)

292  ()((
x
.
U
 >> 
DOUBLE_STORED_MANTISSA_BITS
Ë& 
DOUBLE_EXPONENT_MASK
) -

293 
DOUBLE_BASE_EXPONENT
;

294 
	}
}

295 
	#PRINTF_ABS
(
_x
Ë((_xË> 0 ? (_xË: -(_x))

	)

302 
	#ABS_FOR_PRINTING
(
_x
) \

303 ((
¥ötf_unsig√d_vÆue_t
)((
_x
Ë> 0 ? (_xË: -((
¥ötf_sig√d_vÆue_t
)_x)))

	)

314 (*
	mfun˘i⁄
)(
	mc
, *
	mexåa_¨g
);

315 *
	mexåa_fun˘i⁄_¨g
;

316 *
	mbuf„r
;

317 
¥ötf_size_t
 
	mpos
;

318 
¥ötf_size_t
 
	mmax_ch¨s
;

319 } 
	touçut_gadgë_t
;

325 
ölöe
 
	$putch¨_vü_gadgë
(
ouçut_gadgë_t
 *
gadgë
, 
c
)

327 
¥ötf_size_t
 
wrôe_pos
 = 
gadgë
->
pos
++;

330 i‡(
wrôe_pos
 >
gadgë
->
max_ch¨s
) {

333 i‡(
gadgë
->
fun˘i⁄
 !
NULL
) {

335 
gadgë
->
	`fun˘i⁄
(
c
, gadgë->
exåa_fun˘i⁄_¨g
);

339 
gadgë
->
buf„r
[
wrôe_pos
] = 
c
;

341 
	}
}

344 
ölöe
 
	$≠≥nd_ãrmö©i⁄_wôh_gadgë
(
ouçut_gadgë_t
 *
gadgë
)

346 i‡(
gadgë
->
fun˘i⁄
 !
NULL
 || gadgë->
max_ch¨s
 == 0) {

349 i‡(
gadgë
->
buf„r
 =
NULL
) {

352 
¥ötf_size_t
 
nuŒ_ch¨_pos
 =

353 
gadgë
->
pos
 < gadgë->
max_ch¨s
 ? gadget->pos : gadget->max_chars - 1;

354 
gadgë
->
buf„r
[
nuŒ_ch¨_pos
] = '\0';

355 
	}
}

365 
ölöe
 
ouçut_gadgë_t
 
	$disˇrdög_gadgë
()

367 
ouçut_gadgë_t
 
gadgë
;

368 
gadgë
.
fun˘i⁄
 = 
NULL
;

369 
gadgë
.
exåa_fun˘i⁄_¨g
 = 
NULL
;

370 
gadgë
.
buf„r
 = 
NULL
;

371 
gadgë
.
pos
 = 0;

372 
gadgë
.
max_ch¨s
 = 0;

373  
gadgë
;

374 
	}
}

376 
ölöe
 
ouçut_gadgë_t
 
	$buf„r_gadgë
(*
buf„r
, 
size_t
 
buf„r_size
)

378 
¥ötf_size_t
 
ußbÀ_buf„r_size
 = (
buf„r_size
 > 
PRINTF_MAX_POSSIBLE_BUFFER_SIZE
)

379 ? 
PRINTF_MAX_POSSIBLE_BUFFER_SIZE


380 : (
¥ötf_size_t
)
buf„r_size
;

381 
ouçut_gadgë_t
 
ªsu…
 = 
	`disˇrdög_gadgë
();

382 i‡(
buf„r
 !
NULL
) {

383 
ªsu…
.
buf„r
 = buffer;

384 
ªsu…
.
max_ch¨s
 = 
ußbÀ_buf„r_size
;

386  
ªsu…
;

387 
	}
}

389 
ölöe
 
ouçut_gadgë_t
 
	$fun˘i⁄_gadgë
((*
fun˘i⁄
)(, *), *
exåa_¨g
)

391 
ouçut_gadgë_t
 
ªsu…
 = 
	`disˇrdög_gadgë
();

392 
ªsu…
.
fun˘i⁄
 = function;

393 
ªsu…
.
exåa_fun˘i⁄_¨g
 = 
exåa_¨g
;

394 
ªsu…
.
max_ch¨s
 = 
PRINTF_MAX_POSSIBLE_BUFFER_SIZE
;

395  
ªsu…
;

396 
	}
}

407 
ölöe
 
¥ötf_size_t
 
	$°∫Àn_s_
(c⁄° *
°r
, 
¥ötf_size_t
 
maxsize
)

409 c⁄° *
s
;

410 
s
 = 
°r
; *†&& 
maxsize
--; ++s)

412  (
¥ötf_size_t
)(
s
 - 
°r
);

413 
	}
}

417 
ölöe
 
boﬁ
 
	$is_digô_
(
ch
)

419  (
ch
 >= '0') && (ch <= '9');

420 
	}
}

423 
¥ötf_size_t
 
	$©ou_
(c⁄° **
°r
)

425 
¥ötf_size_t
 
i
 = 0U;

426 
	`is_digô_
(**
°r
)) {

427 
i
 = i * 10U + (
¥ötf_size_t
)(*((*
°r
)++) - '0');

429  
i
;

430 
	}
}

433 
	$out_ªv_
(
ouçut_gadgë_t
 *
ouçut
, c⁄° *
buf
, 
¥ötf_size_t
 
Àn
,

434 
¥ötf_size_t
 
width
, 
¥ötf_Êags_t
 
Êags
)

436 c⁄° 
¥ötf_size_t
 
°¨t_pos
 = 
ouçut
->
pos
;

439 i‡(!(
Êags
 & 
FLAGS_LEFT
Ë&& !(Êag†& 
FLAGS_ZEROPAD
)) {

440 
¥ötf_size_t
 
i
 = 
Àn
; i < 
width
; i++) {

441 
	`putch¨_vü_gadgë
(
ouçut
, ' ');

446 
Àn
) {

447 
	`putch¨_vü_gadgë
(
ouçut
, 
buf
[--
Àn
]);

451 i‡(
Êags
 & 
FLAGS_LEFT
) {

452 
ouçut
->
pos
 - 
°¨t_pos
 < 
width
) {

453 
	`putch¨_vü_gadgë
(
ouçut
, ' ');

456 
	}
}

460 
	$¥öt_öãgî_föÆiz©i⁄
(
ouçut_gadgë_t
 *
ouçut
, *
buf
, 
¥ötf_size_t
 
Àn
,

461 
boﬁ
 
√g©ive
, 
numîic_ba£_t
 
ba£
, 
¥ötf_size_t
 
¥ecisi⁄
,

462 
¥ötf_size_t
 
width
, 
¥ötf_Êags_t
 
Êags
)

464 
¥ötf_size_t
 
u≈added_Àn
 = 
Àn
;

468 i‡(!(
Êags
 & 
FLAGS_LEFT
)) {

469 i‡(
width
 && (
Êags
 & 
FLAGS_ZEROPAD
) &&

470 (
√g©ive
 || (
Êags
 & (
FLAGS_PLUS
 | 
FLAGS_SPACE
)))) {

471 
width
--;

473 (
Êags
 & 
FLAGS_ZEROPAD
Ë&& (
Àn
 < 
width
Ë&& (À¿< 
PRINTF_INTEGER_BUFFER_SIZE
)) {

474 
buf
[
Àn
++] = '0';

478 (
Àn
 < 
¥ecisi⁄
Ë&& (À¿< 
PRINTF_INTEGER_BUFFER_SIZE
)) {

479 
buf
[
Àn
++] = '0';

482 i‡(
ba£
 =
BASE_OCTAL
 && (
Àn
 > 
u≈added_Àn
)) {

485 
Êags
 &~
FLAGS_HASH
;

490 i‡(
Êags
 & (
FLAGS_HASH
 | 
FLAGS_POINTER
)) {

491 i‡(!(
Êags
 & 
FLAGS_PRECISION
Ë&& 
Àn
 && (÷í =
¥ecisi⁄
Ë|| (À¿=
width
))) {

494 i‡(
u≈added_Àn
 < 
Àn
) {

495 
Àn
--;

497 i‡(
Àn
 && (
ba£
 =
BASE_HEX
 || ba£ =
BASE_BINARY
Ë&& (
u≈added_Àn
 <Üen)) {

498 
Àn
--;

501 i‡((
ba£
 =
BASE_HEX
Ë&& !(
Êags
 & 
FLAGS_UPPERCASE
) &&

502 (
Àn
 < 
PRINTF_INTEGER_BUFFER_SIZE
)) {

503 
buf
[
Àn
++] = 'x';

504 } i‡((
ba£
 =
BASE_HEX
Ë&& (
Êags
 & 
FLAGS_UPPERCASE
) &&

505 (
Àn
 < 
PRINTF_INTEGER_BUFFER_SIZE
)) {

506 
buf
[
Àn
++] = 'X';

507 } i‡((
ba£
 =
BASE_BINARY
Ë&& (
Àn
 < 
PRINTF_INTEGER_BUFFER_SIZE
)) {

508 
buf
[
Àn
++] = 'b';

510 i‡(
Àn
 < 
PRINTF_INTEGER_BUFFER_SIZE
) {

511 
buf
[
Àn
++] = '0';

515 i‡(
Àn
 < 
PRINTF_INTEGER_BUFFER_SIZE
) {

516 i‡(
√g©ive
) {

517 
buf
[
Àn
++] = '-';

518 } i‡(
Êags
 & 
FLAGS_PLUS
) {

519 
buf
[
Àn
++] = '+';

520 } i‡(
Êags
 & 
FLAGS_SPACE
) {

521 
buf
[
Àn
++] = ' ';

525 
	`out_ªv_
(
ouçut
, 
buf
, 
Àn
, 
width
, 
Êags
);

526 
	}
}

529 
	$¥öt_öãgî
(
ouçut_gadgë_t
 *
ouçut
, 
¥ötf_unsig√d_vÆue_t
 
vÆue
, 
boﬁ
 
√g©ive
,

530 
numîic_ba£_t
 
ba£
, 
¥ötf_size_t
 
¥ecisi⁄
,Örötf_size_à
width
,

531 
¥ötf_Êags_t
 
Êags
)

533 
buf
[
PRINTF_INTEGER_BUFFER_SIZE
];

534 
¥ötf_size_t
 
Àn
 = 0U;

536 i‡(!
vÆue
) {

537 i‡(!(
Êags
 & 
FLAGS_PRECISION
)) {

538 
buf
[
Àn
++] = '0';

539 
Êags
 &~
FLAGS_HASH
;

543 } i‡(
ba£
 =
BASE_HEX
) {

544 
Êags
 &~
FLAGS_HASH
;

550 c⁄° 
digô
 = ()(
vÆue
 % 
ba£
);

551 
buf
[
Àn
++] = ()(
digô
 < 10 ? '0' + digit

552 : (
Êags
 & 
FLAGS_UPPERCASE
 ? 'A' : 'a'Ë+ 
digô
 - 10);

553 
vÆue
 /
ba£
;

554 } 
vÆue
 && (
Àn
 < 
PRINTF_INTEGER_BUFFER_SIZE
));

557 
	`¥öt_öãgî_föÆiz©i⁄
(
ouçut
, 
buf
, 
Àn
, 
√g©ive
, 
ba£
, 
¥ecisi⁄
, 
width
, 
Êags
);

558 
	}
}

560 #i‡(
PRINTF_SUPPORT_DECIMAL_SPECIFIERS
 || 
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
)

564 
	sdoubÀ_comp⁄íts
 {

565 
öt_Á°64_t
 
	möãgøl
;

566 
öt_Á°64_t
 
	m‰a˘i⁄Æ
;

569 
boﬁ
 
	mis_√g©ive
;

572 
	#NUM_DECIMAL_DIGITS_IN_INT64_T
 18

	)

573 
	#PRINTF_MAX_PRECOMPUTED_POWER_OF_10
 
NUM_DECIMAL_DIGITS_IN_INT64_T


	)

574 c⁄° 
	gpowîs_of_10
[
NUM_DECIMAL_DIGITS_IN_INT64_T
] = {

578 
	#PRINTF_MAX_SUPPORTED_PRECISION
 
NUM_DECIMAL_DIGITS_IN_INT64_T
 - 1

	)

583 
doubÀ_comp⁄íts
 
	$gë_comp⁄íts
(
numbî
, 
¥ötf_size_t
 
¥ecisi⁄
)

585 
doubÀ_comp⁄íts
 
numbî_
;

586 
numbî_
.
is_√g©ive
 = 
	`gë_sign_bô
(
numbî
);

587 
abs_numbî
 = (
numbî_
.
is_√g©ive
Ë? -
numbî
 :Çumber;

588 
numbî_
.
öãgøl
 = (
öt_Á°64_t
)
abs_numbî
;

589 
ªmaödî
 = (
abs_numbî
 - ()
numbî_
.
öãgøl
Ë* 
powîs_of_10
[
¥ecisi⁄
];

590 
numbî_
.
‰a˘i⁄Æ
 = (
öt_Á°64_t
)
ªmaödî
;

592 
ªmaödî
 -()
numbî_
.
‰a˘i⁄Æ
;

594 i‡(
ªmaödî
 > 0.5) {

595 ++
numbî_
.
‰a˘i⁄Æ
;

597 i‡(()
numbî_
.
‰a˘i⁄Æ
 >
powîs_of_10
[
¥ecisi⁄
]) {

598 
numbî_
.
‰a˘i⁄Æ
 = 0;

599 ++
numbî_
.
öãgøl
;

601 } i‡((
ªmaödî
 =0.5Ë&& ((
numbî_
.
‰a˘i⁄Æ
 == 0U) || (number_.fractional & 1U))) {

603 ++
numbî_
.
‰a˘i⁄Æ
;

606 i‡(
¥ecisi⁄
 == 0U) {

607 
ªmaödî
 = 
abs_numbî
 - ()
numbî_
.
öãgøl
;

608 i‡((!(
ªmaödî
 < 0.5Ë|| (ªmaödî > 0.5)Ë&& (
numbî_
.
öãgøl
 & 1)) {

611 ++
numbî_
.
öãgøl
;

614  
numbî_
;

615 
	}
}

617 #i‡
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS


618 
	ssˇlög_Á˘‹
 {

619 
	møw_Á˘‹
;

620 
boﬁ
 
	mmu…ùly
;

623 
	$≠∂y_sˇlög
(
num
, 
sˇlög_Á˘‹
 
n‹mÆiz©i⁄
)

625  
n‹mÆiz©i⁄
.
mu…ùly
 ? 
num
 *Ç‹mÆiz©i⁄.
øw_Á˘‹
 :Çum /Çormalization.raw_factor;

626 
	}
}

628 
	$u«µly_sˇlög
(
n‹mÆized
, 
sˇlög_Á˘‹
 
n‹mÆiz©i⁄
)

630 #ifde‡
__GNUC__


632 #¥agm®
GCC
 
dügno°ic
 
push


633 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wmaybe-uninitialized"

635  
n‹mÆiz©i⁄
.
mu…ùly
 ? 
n‹mÆized
 /Ç‹mÆiz©i⁄.
øw_Á˘‹


636 : 
n‹mÆized
 * 
n‹mÆiz©i⁄
.
øw_Á˘‹
;

637 #ifde‡
__GNUC__


638 #¥agm®
GCC
 
dügno°ic
 
p›


640 
	}
}

642 
sˇlög_Á˘‹
 
	$upd©e_n‹mÆiz©i⁄
(
sˇlög_Á˘‹
 
sf
,

643 
exåa_mu…ùliˇtive_Á˘‹
)

645 
sˇlög_Á˘‹
 
ªsu…
;

646 i‡(
sf
.
mu…ùly
) {

647 
ªsu…
.
mu…ùly
 = 
åue
;

648 
ªsu…
.
øw_Á˘‹
 = 
sf
.øw_Á˘‹ * 
exåa_mu…ùliˇtive_Á˘‹
;

650 
Á˘‹_exp2
 = 
	`gë_exp2
(
	`gë_bô_ac˚ss
(
sf
.
øw_Á˘‹
));

651 
exåa_Á˘‹_exp2
 = 
	`gë_exp2
(
	`gë_bô_ac˚ss
(
exåa_mu…ùliˇtive_Á˘‹
));

654 i‡(
	`PRINTF_ABS
(
Á˘‹_exp2
Ë> PRINTF_ABS(
exåa_Á˘‹_exp2
)) {

655 
ªsu…
.
mu…ùly
 = 
Ál£
;

656 
ªsu…
.
øw_Á˘‹
 = 
sf
.øw_Á˘‹ / 
exåa_mu…ùliˇtive_Á˘‹
;

658 
ªsu…
.
mu…ùly
 = 
åue
;

659 
ªsu…
.
øw_Á˘‹
 = 
exåa_mu…ùliˇtive_Á˘‹
 / 
sf
.raw_factor;

662  
ªsu…
;

663 
	}
}

665 
doubÀ_comp⁄íts
 
	$gë_n‹mÆized_comp⁄íts
(
boﬁ
 
√g©ive
, 
¥ötf_size_t
 
¥ecisi⁄
,

666 
n⁄_n‹mÆized
,

667 
sˇlög_Á˘‹
 
n‹mÆiz©i⁄
,

668 
Êo‹ed_exp10
)

670 
doubÀ_comp⁄íts
 
comp⁄íts
;

671 
comp⁄íts
.
is_√g©ive
 = 
√g©ive
;

672 
sˇÀd
 = 
	`≠∂y_sˇlög
(
n⁄_n‹mÆized
, 
n‹mÆiz©i⁄
);

674 
boﬁ
 
˛o£_to_ª¥e£¡©i⁄_exåemum
 =

675 ((-
Êo‹ed_exp10
 + ()
¥ecisi⁄
Ë>
DBL_MAX_10_EXP
 - 1);

676 i‡(
˛o£_to_ª¥e£¡©i⁄_exåemum
) {

680  
	`gë_comp⁄íts
(
√g©ive
 ? -
sˇÀd
 : sˇÀd, 
¥ecisi⁄
);

682 
comp⁄íts
.
öãgøl
 = (
öt_Á°64_t
)
sˇÀd
;

683 
ªmaödî
 = 
n⁄_n‹mÆized
 - 
	`u«µly_sˇlög
(()
comp⁄íts
.
öãgøl
, 
n‹mÆiz©i⁄
);

684 
¥ec_powî_of_10
 = 
powîs_of_10
[
¥ecisi⁄
];

685 
sˇlög_Á˘‹
 
accou¡_f‹_¥ecisi⁄
 =

686 
	`upd©e_n‹mÆiz©i⁄
(
n‹mÆiz©i⁄
, 
¥ec_powî_of_10
);

687 
sˇÀd_ªmaödî
 = 
	`≠∂y_sˇlög
(
ªmaödî
, 
accou¡_f‹_¥ecisi⁄
);

688 
roundög_thªshﬁd
 = 0.5;

690 
comp⁄íts
.
‰a˘i⁄Æ
 =

691 (
öt_Á°64_t
)
sˇÀd_ªmaödî
;

692 
sˇÀd_ªmaödî
 -=

693 ()
comp⁄íts
.
‰a˘i⁄Æ
;

695 
comp⁄íts
.
‰a˘i⁄Æ
 +(
sˇÀd_ªmaödî
 >
roundög_thªshﬁd
);

696 i‡(
sˇÀd_ªmaödî
 =
roundög_thªshﬁd
) {

698 
comp⁄íts
.
‰a˘i⁄Æ
 &~((
öt_Á°64_t
)0x1);

705 i‡(()
comp⁄íts
.
‰a˘i⁄Æ
 >
¥ec_powî_of_10
) {

706 
comp⁄íts
.
‰a˘i⁄Æ
 = 0;

707 ++
comp⁄íts
.
öãgøl
;

709  
comp⁄íts
;

710 
	}
}

713 
	$¥öt_brokí_up_decimÆ
(
doubÀ_comp⁄íts
 
numbî_
, 
ouçut_gadgë_t
 *
ouçut
,

714 
¥ötf_size_t
 
¥ecisi⁄
,Örötf_size_à
width
,

715 
¥ötf_Êags_t
 
Êags
, *
buf
, 
¥ötf_size_t
 
Àn
)

717 i‡(
¥ecisi⁄
 != 0U) {

720 
¥ötf_size_t
 
cou¡
 = 
¥ecisi⁄
;

723 i‡((
Êags
 & 
FLAGS_ADAPT_EXP
Ë&& !(Êag†& 
FLAGS_HASH
Ë&& (
numbî_
.
‰a˘i⁄Æ
 > 0)) {

724 
åue
) {

725 
öt_Á°64_t
 
digô
 = 
numbî_
.
‰a˘i⁄Æ
 % 10U;

726 i‡(
digô
 != 0) {

729 --
cou¡
;

730 
numbî_
.
‰a˘i⁄Æ
 /= 10U;

736 i‡(
numbî_
.
‰a˘i⁄Æ
 > 0 || !(
Êags
 & 
FLAGS_ADAPT_EXP
Ë|| (Êag†& 
FLAGS_HASH
)) {

737 
Àn
 < 
PRINTF_DECIMAL_BUFFER_SIZE
) {

738 --
cou¡
;

739 
buf
[
Àn
++] = ()('0' + 
numbî_
.
‰a˘i⁄Æ
 % 10U);

740 i‡(!(
numbî_
.
‰a˘i⁄Æ
 /= 10U)) {

745 (
Àn
 < 
PRINTF_DECIMAL_BUFFER_SIZE
Ë&& (
cou¡
 > 0U)) {

746 
buf
[
Àn
++] = '0';

747 --
cou¡
;

749 i‡(
Àn
 < 
PRINTF_DECIMAL_BUFFER_SIZE
) {

750 
buf
[
Àn
++] = '.';

754 i‡((
Êags
 & 
FLAGS_HASH
Ë&& (
Àn
 < 
PRINTF_DECIMAL_BUFFER_SIZE
)) {

755 
buf
[
Àn
++] = '.';

761 
Àn
 < 
PRINTF_DECIMAL_BUFFER_SIZE
) {

762 
buf
[
Àn
++] = ()('0' + (
numbî_
.
öãgøl
 % 10));

763 i‡(!(
numbî_
.
öãgøl
 /= 10)) {

769 i‡(!(
Êags
 & 
FLAGS_LEFT
Ë&& (Êag†& 
FLAGS_ZEROPAD
)) {

770 i‡(
width
 && (
numbî_
.
is_√g©ive
 || (
Êags
 & (
FLAGS_PLUS
 | 
FLAGS_SPACE
)))) {

771 
width
--;

773 (
Àn
 < 
width
Ë&& (À¿< 
PRINTF_DECIMAL_BUFFER_SIZE
)) {

774 
buf
[
Àn
++] = '0';

778 i‡(
Àn
 < 
PRINTF_DECIMAL_BUFFER_SIZE
) {

779 i‡(
numbî_
.
is_√g©ive
) {

780 
buf
[
Àn
++] = '-';

781 } i‡(
Êags
 & 
FLAGS_PLUS
) {

782 
buf
[
Àn
++] = '+';

783 } i‡(
Êags
 & 
FLAGS_SPACE
) {

784 
buf
[
Àn
++] = ' ';

788 
	`out_ªv_
(
ouçut
, 
buf
, 
Àn
, 
width
, 
Êags
);

789 
	}
}

792 
	$¥öt_decimÆ_numbî
(
ouçut_gadgë_t
 *
ouçut
, 
numbî
, 
¥ötf_size_t
 
¥ecisi⁄
,

793 
¥ötf_size_t
 
width
, 
¥ötf_Êags_t
 
Êags
, *
buf
,

794 
¥ötf_size_t
 
Àn
)

796 
doubÀ_comp⁄íts
 
vÆue_
 = 
	`gë_comp⁄íts
(
numbî
, 
¥ecisi⁄
);

797 
	`¥öt_brokí_up_decimÆ
(
vÆue_
, 
ouçut
, 
¥ecisi⁄
, 
width
, 
Êags
, 
buf
, 
Àn
);

798 
	}
}

800 #i‡
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS


804 
	$ba°¨dized_Êo‹
(
x
)

806 i‡(
x
 >= 0) {

807  ()
x
;

809 
n
 = ()
x
;

810  ((()
n
Ë=
x
) ?Ç :Ç - 1;

811 
	}
}

815 
	$log10_of_posôive
(
posôive_numbî
)

825 
doubÀ_wôh_bô_ac˚ss
 
dwba
 = 
	`gë_bô_ac˚ss
(
posôive_numbî
);

827 
exp2
 = 
	`gë_exp2
(
dwba
);

829 
dwba
.
U
 = (dwba.U & (((
doubÀ_uöt_t
)(1Ë<< 
DOUBLE_STORED_MANTISSA_BITS
) - 1U)) |

830 ((
doubÀ_uöt_t
)
DOUBLE_BASE_EXPONENT
 << 
DOUBLE_STORED_MANTISSA_BITS
);

831 
z
 = (
dwba
.
F
 - 1.5);

835 + 
z
 * 0.2895296546021678851

836 #i‡
PRINTF_LOG10_TAYLOR_TERMS
 > 2

837 - 
z
 * z * 0.0965098848673892950

838 #i‡
PRINTF_LOG10_TAYLOR_TERMS
 > 3

839 + 
z
 * z * z * 0.0428932821632841311

843 + 
exp2
 * 0.30102999566398119521

845 
	}
}

847 
	$pow10_of_öt
(
Êo‹ed_exp10
)

850 i‡(
Êo‹ed_exp10
 =
DOUBLE_MAX_SUBNORMAL_EXPONENT_OF_10
) {

851  
DOUBLE_MAX_SUBNORMAL_POWER_OF_10
;

854 
doubÀ_wôh_bô_ac˚ss
 
dwba
;

855 
exp2
 = 
	`ba°¨dized_Êo‹
(
Êo‹ed_exp10
 * 3.321928094887362 + 0.5);

856 c⁄° 
z
 = 
Êo‹ed_exp10
 * 2.302585092994046 - 
exp2
 * 0.6931471805599453;

857 c⁄° 
z2
 = 
z
 * z;

858 
dwba
.
U
 = ((
doubÀ_uöt_t
)(
exp2
Ë+ 
DOUBLE_BASE_EXPONENT
Ë<< 
DOUBLE_STORED_MANTISSA_BITS
;

861 
dwba
.
F
 *1 + 2 * 
z
 / (2 - z + (
z2
 / (6 + (z2 / (10 + z2 / 14)))));

862  
dwba
.
F
;

863 
	}
}

865 
	$¥öt_exp⁄ítül_numbî
(
ouçut_gadgë_t
 *
ouçut
, 
numbî
,

866 
¥ötf_size_t
 
¥ecisi⁄
,Örötf_size_à
width
,

867 
¥ötf_Êags_t
 
Êags
, *
buf
, 
¥ötf_size_t
 
Àn
)

869 c⁄° 
boﬁ
 
√g©ive
 = 
	`gë_sign_bô
(
numbî
);

871 
abs_numbî
 = 
√g©ive
 ? -
numbî
 :Çumber;

873 
Êo‹ed_exp10
;

874 
boﬁ
 
abs_exp10_covîed_by_powîs_èbÀ
;

875 
sˇlög_Á˘‹
 
n‹mÆiz©i⁄
;

878 i‡(
abs_numbî
 == 0.0) {

881 
Êo‹ed_exp10
 =

884 
exp10
 = 
	`log10_of_posôive
(
abs_numbî
);

885 
Êo‹ed_exp10
 = 
	`ba°¨dized_Êo‹
(
exp10
);

886 
p10
 = 
	`pow10_of_öt
(
Êo‹ed_exp10
);

888 i‡(
abs_numbî
 < 
p10
) {

889 
Êo‹ed_exp10
--;

890 
p10
 /= 10;

892 
abs_exp10_covîed_by_powîs_èbÀ
 =

893 
	`PRINTF_ABS
(
Êo‹ed_exp10
Ë< 
PRINTF_MAX_PRECOMPUTED_POWER_OF_10
;

894 
n‹mÆiz©i⁄
.
øw_Á˘‹
 =

895 
abs_exp10_covîed_by_powîs_èbÀ
 ? 
powîs_of_10
[
	`PRINTF_ABS
(
Êo‹ed_exp10
)] : 
p10
;

904 
boﬁ
 
ÁŒ_back_to_decimÆ_⁄ly_mode
 = 
Ál£
;

905 i‡(
Êags
 & 
FLAGS_ADAPT_EXP
) {

906 
ªquúed_signifiˇ¡_digôs
 = (
¥ecisi⁄
 == 0) ? 1 : ()precision;

908 
ÁŒ_back_to_decimÆ_⁄ly_mode
 =

909 (
Êo‹ed_exp10
 >-4 && flo‹ed_exp10 < 
ªquúed_signifiˇ¡_digôs
);

914 
¥ecisi⁄_
 =

915 
ÁŒ_back_to_decimÆ_⁄ly_mode


916 ? ()
¥ecisi⁄
 - 1 - 
Êo‹ed_exp10


917 : ()
¥ecisi⁄
 - 1;

919 
¥ecisi⁄
 = (
¥ecisi⁄_
 > 0 ? ()precision_ : 0U);

920 
Êags
 |
FLAGS_PRECISION
;

923 
n‹mÆiz©i⁄
.
mu…ùly
 = (
Êo‹ed_exp10
 < 0 && 
abs_exp10_covîed_by_powîs_èbÀ
);

924 
boﬁ
 
should_skù_n‹mÆiz©i⁄
 = (
ÁŒ_back_to_decimÆ_⁄ly_mode
 || 
Êo‹ed_exp10
 == 0);

925 
doubÀ_comp⁄íts
 
decimÆ_∑π_comp⁄íts
 =

926 
should_skù_n‹mÆiz©i⁄
 ? 
	`gë_comp⁄íts
(
√g©ive
 ? -
abs_numbî
 :ábs_numbî, 
¥ecisi⁄
)

927 : 
	`gë_n‹mÆized_comp⁄íts
(
√g©ive
, 
¥ecisi⁄
, 
abs_numbî
,

928 
n‹mÆiz©i⁄
, 
Êo‹ed_exp10
);

932 i‡(
ÁŒ_back_to_decimÆ_⁄ly_mode
) {

933 i‡((
Êags
 & 
FLAGS_ADAPT_EXP
Ë&& 
Êo‹ed_exp10
 >= -1 &&

934 
decimÆ_∑π_comp⁄íts
.
öãgøl
 =
powîs_of_10
[
Êo‹ed_exp10
 + 1]) {

935 
Êo‹ed_exp10
++;

936 
¥ecisi⁄
--;

941 i‡(
decimÆ_∑π_comp⁄íts
.
öãgøl
 >= 10) {

942 
Êo‹ed_exp10
++;

943 
decimÆ_∑π_comp⁄íts
.
öãgøl
 = 1;

944 
decimÆ_∑π_comp⁄íts
.
‰a˘i⁄Æ
 = 0;

950 
¥ötf_size_t
 
exp10_∑π_width
 = 
ÁŒ_back_to_decimÆ_⁄ly_mode
 ? 0U

951 : (
	`PRINTF_ABS
(
Êo‹ed_exp10
) < 100) ? 4U

954 
¥ötf_size_t
 
decimÆ_∑π_width
 =

955 ((
Êags
 & 
FLAGS_LEFT
Ë&& 
exp10_∑π_width
)

964 ((
width
 > 
exp10_∑π_width
)

968 
width
 - 
exp10_∑π_width


974 c⁄° 
¥ötf_size_t
 
¥öãd_exp⁄ítül_°¨t_pos
 = 
ouçut
->
pos
;

975 
	`¥öt_brokí_up_decimÆ
(
decimÆ_∑π_comp⁄íts
, 
ouçut
, 
¥ecisi⁄
, 
decimÆ_∑π_width
, 
Êags
,

976 
buf
, 
Àn
);

978 i‡(!
ÁŒ_back_to_decimÆ_⁄ly_mode
) {

979 
	`putch¨_vü_gadgë
(
ouçut
, (
Êags
 & 
FLAGS_UPPERCASE
) ? 'E' : 'e');

980 
	`¥öt_öãgî
(
ouçut
, 
	`ABS_FOR_PRINTING
(
Êo‹ed_exp10
), floored_exp10 < 0, 10, 0,

981 
exp10_∑π_width
 - 1, 
FLAGS_ZEROPAD
 | 
FLAGS_PLUS
);

982 i‡(
Êags
 & 
FLAGS_LEFT
) {

984 
ouçut
->
pos
 - 
¥öãd_exp⁄ítül_°¨t_pos
 < 
width
) {

985 
	`putch¨_vü_gadgë
(
ouçut
, ' ');

989 
	}
}

992 
	$¥öt_Êﬂtög_poöt
(
ouçut_gadgë_t
 *
ouçut
, 
vÆue
, 
¥ötf_size_t
 
¥ecisi⁄
,

993 
¥ötf_size_t
 
width
, 
¥ötf_Êags_t
 
Êags
, 
boﬁ
 
¥e„r_exp⁄ítül
)

995 
buf
[
PRINTF_DECIMAL_BUFFER_SIZE
];

996 
¥ötf_size_t
 
Àn
 = 0U;

999 i‡(
vÆue
 != value) {

1000 
	`out_ªv_
(
ouçut
, "«n", 3, 
width
, 
Êags
);

1003 i‡(
vÆue
 < -
DBL_MAX
) {

1004 
	`out_ªv_
(
ouçut
, "‚i-", 4, 
width
, 
Êags
);

1007 i‡(
vÆue
 > 
DBL_MAX
) {

1008 
	`out_ªv_
(
ouçut
, (
Êags
 & 
FLAGS_PLUS
) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U,

1009 
width
, 
Êags
);

1013 i‡(!
¥e„r_exp⁄ítül
 &&

1014 ((
vÆue
 > 
PRINTF_FLOAT_NOTATION_THRESHOLD
) || (value < -PRINTF_FLOAT_NOTATION_THRESHOLD))) {

1018 #i‡
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS


1019 
	`¥öt_exp⁄ítül_numbî
(
ouçut
, 
vÆue
, 
¥ecisi⁄
, 
width
, 
Êags
, 
buf
, 
Àn
);

1025 i‡(!(
Êags
 & 
FLAGS_PRECISION
)) {

1026 
¥ecisi⁄
 = 
PRINTF_DEFAULT_FLOAT_PRECISION
;

1030 (
Àn
 < 
PRINTF_DECIMAL_BUFFER_SIZE
Ë&& (
¥ecisi⁄
 > 
PRINTF_MAX_SUPPORTED_PRECISION
)) {

1031 
buf
[
Àn
++] = '0';

1032 
¥ecisi⁄
--;

1035 #i‡
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS


1036 i‡(
¥e„r_exp⁄ítül
)

1037 
	`¥öt_exp⁄ítül_numbî
(
ouçut
, 
vÆue
, 
¥ecisi⁄
, 
width
, 
Êags
, 
buf
, 
Àn
);

1040 
	`¥öt_decimÆ_numbî
(
ouçut
, 
vÆue
, 
¥ecisi⁄
, 
width
, 
Êags
, 
buf
, 
Àn
);

1041 
	}
}

1047 
¥ötf_Êags_t
 
	$∑r£_Êags
(c⁄° **
f‹m©
)

1049 
¥ötf_Êags_t
 
Êags
 = 0U;

1051 **
f‹m©
) {

1053 
Êags
 |
FLAGS_ZEROPAD
;

1054 (*
f‹m©
)++;

1057 
Êags
 |
FLAGS_LEFT
;

1058 (*
f‹m©
)++;

1061 
Êags
 |
FLAGS_PLUS
;

1062 (*
f‹m©
)++;

1065 
Êags
 |
FLAGS_SPACE
;

1066 (*
f‹m©
)++;

1069 
Êags
 |
FLAGS_HASH
;

1070 (*
f‹m©
)++;

1073  
Êags
;

1075 } 
åue
);

1076 
	}
}

1078 
ölöe
 
	$f‹m©_°rög_lo›
(
ouçut_gadgë_t
 *
ouçut
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

1080 #i‡
PRINTF_CHECK_FOR_NUL_IN_FORMAT_SPECIFIER


1081 
	#ADVANCE_IN_FORMAT_STRING
(
˝å_
) \

1083 (
˝å_
)++; \

1084 i‡(!*(
˝å_
)) \

1086 } 0)

	)

1088 
	#ADVANCE_IN_FORMAT_STRING
(
˝å_
Ë(˝å_)++

	)

1091 *
f‹m©
) {

1092 i‡(*
f‹m©
 != '%') {

1094 
	`putch¨_vü_gadgë
(
ouçut
, *
f‹m©
);

1095 
f‹m©
++;

1099 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1101 
¥ötf_Êags_t
 
Êags
 = 
	`∑r£_Êags
(&
f‹m©
);

1104 
¥ötf_size_t
 
width
 = 0U;

1105 i‡(
	`is_digô_
(*
f‹m©
)) {

1106 
width
 = (
¥ötf_size_t
)
	`©ou_
(&
f‹m©
);

1107 } i‡(*
f‹m©
 == '*') {

1108 c⁄° 
w
 = 
	`va_¨g
(
¨gs
, );

1109 i‡(
w
 < 0) {

1110 
Êags
 |
FLAGS_LEFT
;

1111 
width
 = (
¥ötf_size_t
)-
w
;

1113 
width
 = (
¥ötf_size_t
)
w
;

1115 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1119 
¥ötf_size_t
 
¥ecisi⁄
 = 0U;

1120 i‡(*
f‹m©
 == '.') {

1121 
Êags
 |
FLAGS_PRECISION
;

1122 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1123 i‡(
	`is_digô_
(*
f‹m©
)) {

1124 
¥ecisi⁄
 = (
¥ötf_size_t
)
	`©ou_
(&
f‹m©
);

1125 } i‡(*
f‹m©
 == '*') {

1126 c⁄° 
¥ecisi⁄_
 = 
	`va_¨g
(
¨gs
, );

1127 
¥ecisi⁄
 = 
¥ecisi⁄_
 > 0 ? (
¥ötf_size_t
)precision_ : 0U;

1128 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1133 *
f‹m©
) {

1134 #ifde‡
PRINTF_SUPPORT_MSVC_STYLE_INTEGER_SPECIFIERS


1136 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1138 *
f‹m©
) {

1140 
Êags
 |
FLAGS_INT8
;

1141 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1144 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1145 i‡(*
f‹m©
 == '6') {

1146 
f‹m©
++;

1147 
Êags
 |
FLAGS_INT16
;

1151 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1152 i‡(*
f‹m©
 == '2') {

1153 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1154 
Êags
 |
FLAGS_INT32
;

1158 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1159 i‡(*
f‹m©
 == '4') {

1160 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1161 
Êags
 |
FLAGS_INT64
;

1171 
Êags
 |
FLAGS_LONG
;

1172 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1173 i‡(*
f‹m©
 == 'l') {

1174 
Êags
 |
FLAGS_LONG_LONG
;

1175 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1179 
Êags
 |
FLAGS_SHORT
;

1180 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1181 i‡(*
f‹m©
 == 'h') {

1182 
Êags
 |
FLAGS_CHAR
;

1183 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1187 
Êags
 |((
±rdiff_t
Ë=(Ë? 
FLAGS_LONG
 : 
FLAGS_LONG_LONG
);

1188 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1191 
Êags
 |((
ötmax_t
Ë=(Ë? 
FLAGS_LONG
 : 
FLAGS_LONG_LONG
);

1192 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1195 
Êags
 |((
size_t
Ë=(Ë? 
FLAGS_LONG
 : 
FLAGS_LONG_LONG
);

1196 
	`ADVANCE_IN_FORMAT_STRING
(
f‹m©
);

1203 *
f‹m©
) {

1212 i‡(*
f‹m©
 == 'd' || *format == 'i') {

1213 
Êags
 |
FLAGS_SIGNED
;

1216 
numîic_ba£_t
 
ba£
;

1217 i‡(*
f‹m©
 == 'x' || *format == 'X') {

1218 
ba£
 = 
BASE_HEX
;

1219 } i‡(*
f‹m©
 == 'o') {

1220 
ba£
 = 
BASE_OCTAL
;

1221 } i‡(*
f‹m©
 == 'b') {

1222 
ba£
 = 
BASE_BINARY
;

1224 
ba£
 = 
BASE_DECIMAL
;

1225 
Êags
 &~
FLAGS_HASH
;

1228 i‡(*
f‹m©
 == 'X') {

1229 
Êags
 |
FLAGS_UPPERCASE
;

1232 
f‹m©
++;

1234 i‡(
Êags
 & 
FLAGS_PRECISION
) {

1235 
Êags
 &~
FLAGS_ZEROPAD
;

1238 i‡(
Êags
 & 
FLAGS_SIGNED
) {

1241 i‡(
Êags
 & 
FLAGS_LONG_LONG
) {

1242 #i‡
PRINTF_SUPPORT_LONG_LONG


1243 c⁄° 
vÆue
 = 
	`va_¨g
(
¨gs
, );

1244 
	`¥öt_öãgî
(
ouçut
, 
	`ABS_FOR_PRINTING
(
vÆue
), vÆuê< 0, 
ba£
, 
¥ecisi⁄
,

1245 
width
, 
Êags
);

1247 } i‡(
Êags
 & 
FLAGS_LONG
) {

1248 c⁄° 
vÆue
 = 
	`va_¨g
(
¨gs
, );

1249 
	`¥öt_öãgî
(
ouçut
, 
	`ABS_FOR_PRINTING
(
vÆue
), vÆuê< 0, 
ba£
, 
¥ecisi⁄
,

1250 
width
, 
Êags
);

1256 c⁄° 
vÆue
 = (
Êags
 & 
FLAGS_CHAR
Ë? (sig√d )
	`va_¨g
(
¨gs
, )

1257 : (
Êags
 & 
FLAGS_SHORT
Ë? ()
	`va_¨g
(
¨gs
, )

1258 : 
	`va_¨g
(
¨gs
, );

1259 
	`¥öt_öãgî
(
ouçut
, 
	`ABS_FOR_PRINTING
(
vÆue
), vÆuê< 0, 
ba£
, 
¥ecisi⁄
,

1260 
width
, 
Êags
);

1265 
Êags
 &~(
FLAGS_PLUS
 | 
FLAGS_SPACE
);

1267 i‡(
Êags
 & 
FLAGS_LONG_LONG
) {

1268 #i‡
PRINTF_SUPPORT_LONG_LONG


1269 
	`¥öt_öãgî
(
ouçut
, (
¥ötf_unsig√d_vÆue_t
)
	`va_¨g
(
¨gs
, ),

1270 
Ál£
, 
ba£
, 
¥ecisi⁄
, 
width
, 
Êags
);

1272 } i‡(
Êags
 & 
FLAGS_LONG
) {

1273 
	`¥öt_öãgî
(
ouçut
, (
¥ötf_unsig√d_vÆue_t
)
	`va_¨g
(
¨gs
, ),

1274 
Ál£
, 
ba£
, 
¥ecisi⁄
, 
width
, 
Êags
);

1276 c⁄° 
vÆue
 =

1277 (
Êags
 & 
FLAGS_CHAR
Ë? ()
	`va_¨g
(
¨gs
, )

1278 : (
Êags
 & 
FLAGS_SHORT
Ë? ()
	`va_¨g
(
¨gs
, )

1279 : 
	`va_¨g
(
¨gs
, );

1280 
	`¥öt_öãgî
(
ouçut
, (
¥ötf_unsig√d_vÆue_t
)
vÆue
, 
Ál£
, 
ba£
, 
¥ecisi⁄
,

1281 
width
, 
Êags
);

1286 #i‡
PRINTF_SUPPORT_DECIMAL_SPECIFIERS


1289 i‡(*
f‹m©
 == 'F')

1290 
Êags
 |
FLAGS_UPPERCASE
;

1291 
	`¥öt_Êﬂtög_poöt
(
ouçut
, 
	`va_¨g
(
¨gs
, ), 
¥ecisi⁄
, 
width
, 
Êags
,

1292 
PRINTF_PREFER_DECIMAL
);

1293 
f‹m©
++;

1296 #i‡
PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS


1301 i‡((*
f‹m©
 == 'g') || (*format == 'G'))

1302 
Êags
 |
FLAGS_ADAPT_EXP
;

1303 i‡((*
f‹m©
 == 'E') || (*format == 'G'))

1304 
Êags
 |
FLAGS_UPPERCASE
;

1305 
	`¥öt_Êﬂtög_poöt
(
ouçut
, 
	`va_¨g
(
¨gs
, ), 
¥ecisi⁄
, 
width
, 
Êags
,

1306 
PRINTF_PREFER_EXPONENTIAL
);

1307 
f‹m©
++;

1311 
¥ötf_size_t
 
l
 = 1U;

1313 i‡(!(
Êags
 & 
FLAGS_LEFT
)) {

1314 
l
++ < 
width
) {

1315 
	`putch¨_vü_gadgë
(
ouçut
, ' ');

1319 
	`putch¨_vü_gadgë
(
ouçut
, ()
	`va_¨g
(
¨gs
, ));

1321 i‡(
Êags
 & 
FLAGS_LEFT
) {

1322 
l
++ < 
width
) {

1323 
	`putch¨_vü_gadgë
(
ouçut
, ' ');

1326 
f‹m©
++;

1331 c⁄° *
p
 = 
	`va_¨g
(
¨gs
, *);

1332 i‡(
p
 =
NULL
) {

1333 
	`out_ªv_
(
ouçut
, "Ólun(", 6, 
width
, 
Êags
);

1335 
¥ötf_size_t
 
l
 =

1336 
	`°∫Àn_s_
(
p
, 
¥ecisi⁄
 ?Öªcisi⁄ : 
PRINTF_MAX_POSSIBLE_BUFFER_SIZE
);

1338 i‡(
Êags
 & 
FLAGS_PRECISION
) {

1339 
l
 = (»< 
¥ecisi⁄
 ?Ü :Örecision);

1341 i‡(!(
Êags
 & 
FLAGS_LEFT
)) {

1342 
l
++ < 
width
) {

1343 
	`putch¨_vü_gadgë
(
ouçut
, ' ');

1347 (*
p
 !0Ë&& (!(
Êags
 & 
FLAGS_PRECISION
Ë|| 
¥ecisi⁄
)) {

1348 
	`putch¨_vü_gadgë
(
ouçut
, *(
p
++));

1349 --
¥ecisi⁄
;

1352 i‡(
Êags
 & 
FLAGS_LEFT
) {

1353 
l
++ < 
width
) {

1354 
	`putch¨_vü_gadgë
(
ouçut
, ' ');

1358 
f‹m©
++;

1363 
width
 = (*) * 2U + 2;

1364 
Êags
 |
FLAGS_ZEROPAD
 | 
FLAGS_POINTER
;

1365 
uöçå_t
 
vÆue
 = (uöçå_t)
	`va_¨g
(
¨gs
, *);

1366 (
vÆue
 =(
uöçå_t
)
NULL
Ë? 
	`out_ªv_
(
ouçut
, "Óö(", 5, 
width
, 
Êags
)

1367 : 
	`¥öt_öãgî
(
ouçut
, (
¥ötf_unsig√d_vÆue_t
)
vÆue
,

1368 
Ál£
, 
BASE_HEX
, 
¥ecisi⁄
, 
width
, 
Êags
);

1369 
f‹m©
++;

1374 
	`putch¨_vü_gadgë
(
ouçut
, '%');

1375 
f‹m©
++;

1381 #i‡
PRINTF_SUPPORT_WRITEBACK_SPECIFIER


1383 i‡(
Êags
 & 
FLAGS_CHAR
)

1384 *(
	`va_¨g
(
¨gs
, *)Ë()
ouçut
->
pos
;

1385 i‡(
Êags
 & 
FLAGS_SHORT
)

1386 *(
	`va_¨g
(
¨gs
, *)Ë()
ouçut
->
pos
;

1387 i‡(
Êags
 & 
FLAGS_LONG
)

1388 *(
	`va_¨g
(
¨gs
, *)Ë()
ouçut
->
pos
;

1389 #i‡
PRINTF_SUPPORT_LONG_LONG


1390 i‡(
Êags
 & 
FLAGS_LONG_LONG
)

1391 *(
	`va_¨g
(
¨gs
, *)Ë()
ouçut
->
pos
;

1394 *(
	`va_¨g
(
¨gs
, *)Ë()
ouçut
->
pos
;

1395 
f‹m©
++;

1401 
	`putch¨_vü_gadgë
(
ouçut
, *
f‹m©
);

1402 
f‹m©
++;

1406 
	}
}

1409 
	$v¢¥ötf_im∂
(
ouçut_gadgë_t
 *
ouçut
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

1413 
	`f‹m©_°rög_lo›
(
ouçut
, 
f‹m©
, 
¨gs
);

1416 
	`≠≥nd_ãrmö©i⁄_wôh_gadgë
(
ouçut
);

1419  ()
ouçut
->
pos
;

1420 
	}
}

1430 
	$v¢¥ötf_
(*
s
, 
size_t
 
n
, c⁄° *
f‹m©
, 
va_li°
 
¨g
)

1432 
ouçut_gadgë_t
 
gadgë
 = 
	`buf„r_gadgë
(
s
, 
n
);

1433  
	`v¢¥ötf_im∂
(&
gadgë
, 
f‹m©
, 
¨g
);

1434 
	}
}

1436 
	$v•rötf_
(*
s
, c⁄° *
f‹m©
, 
va_li°
 
¨g
)

1438  
	`v¢¥ötf_
(
s
, 
PRINTF_MAX_POSSIBLE_BUFFER_SIZE
, 
f‹m©
, 
¨g
);

1439 
	}
}

1441 
	$vf˘¥ötf
((*
out
)(
c
, *
exåa_¨g
), *exåa_¨g, c⁄° *
f‹m©
,

1442 
va_li°
 
¨g
)

1444 
ouçut_gadgë_t
 
gadgë
 = 
	`fun˘i⁄_gadgë
(
out
, 
exåa_¨g
);

1445  
	`v¢¥ötf_im∂
(&
gadgë
, 
f‹m©
, 
¨g
);

1446 
	}
}

1457 
	$•rötf_
(*
s
, c⁄° *
f‹m©
, ...)

1459 
va_li°
 
¨gs
;

1460 
	`va_°¨t
(
¨gs
, 
f‹m©
);

1461 c⁄° 
ªt
 = 
	`v•rötf_
(
s
, 
f‹m©
, 
¨gs
);

1462 
	`va_íd
(
¨gs
);

1463  
ªt
;

1464 
	}
}

1466 
	$¢¥ötf_
(*
s
, 
size_t
 
n
, c⁄° *
f‹m©
, ...)

1468 
va_li°
 
¨gs
;

1469 
	`va_°¨t
(
¨gs
, 
f‹m©
);

1470 c⁄° 
ªt
 = 
	`v¢¥ötf_
(
s
, 
n
, 
f‹m©
, 
¨gs
);

1471 
	`va_íd
(
¨gs
);

1472  
ªt
;

1473 
	}
}

1475 
	$f˘¥ötf
((*
out
)(
c
, *
exåa_¨g
), *exåa_¨g, c⁄° *
f‹m©
, ...)

1477 
va_li°
 
¨gs
;

1478 
	`va_°¨t
(
¨gs
, 
f‹m©
);

1479 c⁄° 
ªt
 = 
	`vf˘¥ötf
(
out
, 
exåa_¨g
, 
f‹m©
, 
¨gs
);

1480 
	`va_íd
(
¨gs
);

1481  
ªt
;

1482 
	}
}

	@ulib/c_libax/src/printf.h

39 #i‚de‡
PRINTF_H_


40 
	#PRINTF_H_


	)

42 #ifde‡
__˝lu•lus


43 
	~<c°d¨g
>

44 
	~<c°ddef
>

47 
	~<°d¨g.h
>

48 
	~<°ddef.h
>

51 #ifde‡
__GNUC__


52 #i‡((
__GNUC__
 =4 && 
__GNUC_MINOR__
 >= 4) || __GNUC__ > 4)

53 
	#ATTR_PRINTF
(
⁄e_ba£d_f‹m©_ödex
, 
fú°_¨g
) \

54 
	`__©åibuã__
((
	`f‹m©
(
gnu_¥ötf
, (
⁄e_ba£d_f‹m©_ödex
), (
fú°_¨g
))))

	)

56 
	#ATTR_PRINTF
(
⁄e_ba£d_f‹m©_ödex
, 
fú°_¨g
) \

57 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
, (
⁄e_ba£d_f‹m©_ödex
), (
fú°_¨g
))))

	)

59 
	#ATTR_VPRINTF
(
⁄e_ba£d_f‹m©_ödex
Ë
	`ATTR_PRINTF
((⁄e_ba£d_f‹m©_ödex), 0)

	)

61 
	#ATTR_PRINTF
(
⁄e_ba£d_f‹m©_ödex
, 
fú°_¨g
)

	)

62 
	#ATTR_VPRINTF
(
⁄e_ba£d_f‹m©_ödex
)

	)

65 #i‚de‡
PRINTF_ALIAS_STANDARD_FUNCTION_NAMES


66 
	#PRINTF_ALIAS_STANDARD_FUNCTION_NAMES
 0

	)

69 #i‡
PRINTF_ALIAS_STANDARD_FUNCTION_NAMES_HARD


70 
	#¥ötf_
 
¥ötf


	)

71 
	#•rötf_
 
•rötf


	)

72 
	#v•rötf_
 
v•rötf


	)

73 
	#¢¥ötf_
 
¢¥ötf


	)

74 
	#v¢¥ötf_
 
v¢¥ötf


	)

75 
	#v¥ötf_
 
v¥ötf


	)

82 #i‚de‡
PRINTF_VISIBILITY


83 
	#PRINTF_VISIBILITY


	)

141 
PRINTF_VISIBILITY


142 
•rötf_
(*
s
, c⁄° *
f‹m©
, ...Ë
ATTR_PRINTF
(2, 3);

143 
PRINTF_VISIBILITY


144 
v•rötf_
(*
s
, c⁄° *
f‹m©
, 
va_li°
 
¨g
Ë
ATTR_VPRINTF
(2);

165 
PRINTF_VISIBILITY


166 
¢¥ötf_
(*
s
, 
size_t
 
cou¡
, c⁄° *
f‹m©
, ...Ë
ATTR_PRINTF
(3, 4);

167 
PRINTF_VISIBILITY


168 
v¢¥ötf_
(*
s
, 
size_t
 
cou¡
, c⁄° *
f‹m©
, 
va_li°
 
¨g
Ë
ATTR_VPRINTF
(3);

186 
PRINTF_VISIBILITY


187 
f˘¥ötf
((*
out
)(
c
, *
exåa_¨g
), *exåa_¨g, c⁄° *
f‹m©
, ...)

188 
ATTR_PRINTF
(3, 4);

189 
PRINTF_VISIBILITY


190 
vf˘¥ötf
((*
out
)(
c
, *
exåa_¨g
), *exåa_¨g, c⁄° *
f‹m©
,

191 
va_li°
 
¨g
Ë
ATTR_VPRINTF
(3);

193 #ifde‡
__˝lu•lus


197 #i‡
PRINTF_ALIAS_STANDARD_FUNCTION_NAMES_HARD


198 #unde‡
¥ötf_


199 #unde‡
•rötf_


200 #unde‡
v•rötf_


201 #unde‡
¢¥ötf_


202 #unde‡
v¢¥ötf_


203 #unde‡
v¥ötf_


205 #i‡
PRINTF_ALIAS_STANDARD_FUNCTION_NAMES_SOFT


206 
	#¥ötf
 
¥ötf_


	)

207 
	#•rötf
 
•rötf_


	)

208 
	#v•rötf
 
v•rötf_


	)

209 
	#¢¥ötf
 
¢¥ötf_


	)

210 
	#v¢¥ötf
 
v¢¥ötf_


	)

211 
	#v¥ötf
 
v¥ötf_


	)

	@ulib/c_libax/src/printf_config.h

1 #i‚de‡
PRINTF_CONFIG_H


2 
	#PRINTF_CONFIG_H


	)

4 
	#PRINTF_ALIAS_STANDARD_FUNCTION_NAMES
 1

	)

6 #i‚de‡
AX_CONFIG_FP_SIMD


8 
	#PRINTF_SUPPORT_DECIMAL_SPECIFIERS
 0

	)

10 
	#PRINTF_SUPPORT_EXPONENTIAL_SPECIFIERS
 0

	)

	@ulib/c_libax/src/pthread.c

1 
	~<libax.h
>

2 
	~<±hªad.h
>

3 
	~<uni°d.h
>

5 #i‡
deföed
(
AX_CONFIG_MULTITASK
)

7 
_N‹ëu∫
 
	$±hªad_exô
(*
ªsu…
)

9 
	`ax_±hªad_exô
(
ªsu…
);

10 
	}
}

12 
±hªad_t
 
	$±hªad_£lf
()

14  
	`ax_±hªad_£lf
();

15 
	}
}

17 
	$±hªad_¸óã
(
±hªad_t
 *
ª°ri˘
 
ªs
, c⁄° 
±hªad_©å_t
 *ª°ri˘ 
©åp
,

18 *(*
íåy
)(*), *
ª°ri˘
 
¨g
)

20  
	`ax_±hªad_¸óã
(
ªs
, 
©åp
, (*)
íåy
, 
¨g
);

21 
	}
}

23 
	$±hªad_joö
(
±hªad_t
 
t
, **
ªs
)

25  
	`ax_±hªad_joö
(
t
, 
ªs
);

26 
	}
}

28 
	$±hªad_£tˇn˚l°©e
(
√w
, *
ﬁd
)

30 
	`unim∂emíãd
();

32 
	}
}

34 
	$±hªad_£tˇn˚…y≥
(
√w
, *
ﬁd
)

36 
	`unim∂emíãd
();

38 
	}
}

40 
	$±hªad_muãx_öô
(
±hªad_muãx_t
 *
ª°ri˘
 
m
, c⁄° 
±hªad_muãx©å_t
 *ª°ri˘ 
a
)

42 
	`ax_±hªad_muãx_öô
(
m
, 
a
);

44 
	}
}

46 
	$±hªad_muãx_lock
(
±hªad_muãx_t
 *
m
)

48 
	`ax_±hªad_muãx_lock
(
m
);

50 
	}
}

52 
	$±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *
m
)

54 
	`ax_±hªad_muãx_u∆ock
(
m
);

56 
	}
}

	@ulib/c_libax/src/resource.c

1 
	~<î∫o.h
>

2 
	~<libax.h
>

3 
	~<°dio.h
>

4 
	~<sys/ªsour˚.h
>

6 
	$gëæimô
(
ªsour˚
, 
æimô
 *
æimôs
)

8 
ªsour˚
) {

9 
RLIMIT_DATA
:

11 
RLIMIT_STACK
:

13 
RLIMIT_NOFILE
:

17  -
EINVAL
;

20 i‡(!
æimôs
)

22 
ªsour˚
) {

23 
RLIMIT_STACK
:

24 
æimôs
->
æim_cur
 = 
AX_CONFIG_TASK_STACK_SIZE
;

25 
æimôs
->
æim_max
 = 
AX_CONFIG_TASK_STACK_SIZE
;

27 
RLIMIT_NOFILE
:

28 
æimôs
->
æim_cur
 = 
AX_FILE_LIMIT
;

29 
æimôs
->
æim_max
 = 
AX_FILE_LIMIT
;

35 
	}
}

37 
	$£ålimô
(
ªsour˚
, 
æimô
 *
æimôs
)

39 
ªsour˚
) {

40 
RLIMIT_DATA
:

42 
RLIMIT_STACK
:

44 
RLIMIT_NOFILE
:

48  -
EINVAL
;

51 i‡(
æimôs
) {

52 
ªsour˚
) {

59 
	}
}

	@ulib/c_libax/src/select.c

1 
	~<î∫o.h
>

2 
	~<libax.h
>

3 
	~<°döt.h
>

4 
	~<°dio.h
>

5 
	~<sys/£À˘.h
>

6 
	~<sys/time.h
>

8 
	$£À˘
(
n
, 
fd_£t
 *
__ª°ri˘
 
rfds
, fd_£à*__ª°ri˘ 
wfds
, fd_£à*__ª°ri˘ 
efds
,

9 
timevÆ
 *
__ª°ri˘
 
tv
)

11 
time_t
 
s
 = 
tv
 ?Åv->
tv_£c
 : 0;

12 
us
 = 
tv
 ?Åv->
tv_u£c
 : 0;

14 c⁄° 
time_t
 
max_time
 = (1ULL << (8 * (time_t) - 1)) - 1;

16 i‡(
s
 < 0 || 
us
 < 0) {

17 
î∫o
 = 
EINVAL
;

20 i‡(
us
 / 1000000 > 
max_time
 - 
s
) {

21 
s
 = 
max_time
;

22 
us
 = 999999;

25 
s
 +
us
 / 1000000;

26 
us
 %= 1000000;

30  
	`ax_£À˘
(
n
, 
rfds
, 
wfds
, 
efds
, 
tv
 ? ((
timevÆ
 *)([]){
s
, 
us
}Ë: 
NULL
);

31 
	}
}

33 
	$p£À˘
(
n
, 
fd_£t
 *
ª°ri˘
 
rfds
, fd_£à*ª°ri˘ 
wfds
, fd_£à*ª°ri˘ 
efds
,

34 c⁄° 
time•ec
 *
ª°ri˘
 
ts
, c⁄° 
sig£t_t
 *ª°ri˘ 
mask
)

36 
timevÆ
 
tv
 = {
ts
->
tv_£c
,Ås->
tv_n£c
 / 1000};

37 
	`£À˘
(
n
, 
rfds
, 
wfds
, 
efds
, &
tv
);

39 
	}
}

	@ulib/c_libax/src/signal.c

1 
	~<î∫o.h
>

2 
	~<sig«l.h
>

3 
	~<°ddef.h
>

4 
	~<°dio.h
>

6 
	$siga˘i⁄_hñ≥r
(
signum
, c⁄° 
siga˘i⁄
 *
a˘
, siga˘i⁄ *
ﬁda˘
,

7 
size_t
 
sig£tsize
)

9 i‡(
signum
 =
SIGKILL
 || signum =
SIGSTOP
)

10  -
EINVAL
;

12 i‡(
ﬁda˘
)

13 *
ﬁda˘
 = (
siga˘i⁄
){0};

16 
	}
}

18 (*
	$sig«l
(
signum
, (*
h™dÀr
)()))()

20 
siga˘i⁄
 
ﬁd
;

21 
siga˘i⁄
 
a˘
 = {

22 .
ß_h™dÀr
 = 
h™dÀr
, .
ß_Êags
 = 
SA_RESTART
,

25 i‡(
	`siga˘i⁄_hñ≥r
(
signum
, &
a˘
, &
ﬁd
, (
sig£t_t
)) < 0)

26  
SIG_ERR
;

28  (
ﬁd
.
ß_Êags
 & 
SA_SIGINFO
Ë? 
NULL
 : old.
ß_h™dÀr
;

29 
	}
}

31 
	$siga˘i⁄
(
sig
, c⁄° 
siga˘i⁄
 *
ª°ri˘
 
a˘
, siga˘i⁄ *ª°ri˘ 
ﬂ˘
)

33  
	`siga˘i⁄_hñ≥r
(
sig
, 
a˘
, 
ﬂ˘
, (
sig£t_t
));

34 
	}
}

	@ulib/c_libax/src/socket.c

1 
	~<libax.h
>

2 
	~<°dio.h
>

3 
	~<sys/sockë.h
>

4 
	~<sys/ty≥s.h
>

6 #i‡
deföed
(
AX_CONFIG_NET
)

7 
	$sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
)

9  
	`ax_sockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
);

10 
	}
}

12 
	$shutdown
(
fd
, 
Êag
)

14  
	`ax_shutdown
(
fd
, 
Êag
);

15 
	}
}

17 
	$böd
(
fd
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Àn
)

19  
	`ax_böd
(
fd
, 
addr
, 
Àn
);

20 
	}
}

22 
	$c⁄√˘
(
fd
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Àn
)

24  
	`ax_c⁄√˘
(
fd
, 
addr
, 
Àn
);

25 
	}
}

27 
	$li°í
(
fd
, 
backlog
)

29  
	`ax_li°í
(
fd
, 
backlog
);

30 
	}
}

32 
	$ac˚±
(
fd
, 
sockaddr
 *
ª°ri˘
 
addr
, 
sockÀn_t
 *ª°ri˘ 
Àn
)

34  
	`ax_ac˚±
(
fd
, 
addr
, 
Àn
);

35 
	}
}

37 
ssize_t
 
	$£nd
(
fd
, c⁄° *
buf
, 
size_t
 
n
, 
Êags
)

39  
	`ax_£nd
(
fd
, 
buf
, 
n
, 
Êags
);

40 
	}
}

42 
ssize_t
 
	$ªcv
(
fd
, *
buf
, 
size_t
 
n
, 
Êags
)

44  
	`ax_ªcv
(
fd
, 
buf
, 
n
, 
Êags
);

45 
	}
}

47 
ssize_t
 
	$£ndto
(
fd
, c⁄° *
buf
, 
size_t
 
n
, 
Êags
, c⁄° 
sockaddr
 *
addr
,

48 
sockÀn_t
 
addr_Àn
)

50 i‡(
addr
 =
NULL
 && 
addr_Àn
 == 0)

51  
	`ax_£nd
(
fd
, 
buf
, 
n
, 
Êags
);

53  
	`ax_£ndto
(
fd
, 
buf
, 
n
, 
Êags
, 
addr
, 
addr_Àn
);

54 
	}
}

56 
ssize_t
 
	$ªcv‰om
(
fd
, *
ª°ri˘
 
buf
, 
size_t
 
n
, 
Êags
, 
sockaddr
 *ª°ri˘ 
addr
,

57 
sockÀn_t
 *
ª°ri˘
 
addr_Àn
)

59 i‡(
addr
 =
NULL
)

60  
	`ax_ªcv
(
fd
, 
buf
, 
n
, 
Êags
);

62  
	`ax_ªcv‰om
(
fd
, 
buf
, 
n
, 
Êags
, 
addr
, 
addr_Àn
);

63 
	}
}

65 
	$gësock›t
(
fd
, 
Àvñ
, 
›äame
, *
ª°ri˘
 
›tvÆ
, 
sockÀn_t
 *ª°ri˘ 
›éí
)

67 
	`unim∂emíãd
();

69 
	}
}

71 
	$£tsock›t
(
fd
, 
Àvñ
, 
›äame
, c⁄° *
›tvÆ
, 
sockÀn_t
 
›éí
)

73 
	`unim∂emíãd
();

75 
	}
}

77 
	$gësock«me
(
sockfd
, 
sockaddr
 *
ª°ri˘
 
addr
, 
sockÀn_t
 *ª°ri˘ 
addæí
)

79  
	`ax_gësock«me
(
sockfd
, 
addr
, 
addæí
);

80 
	}
}

82 
	$gë≥î«me
(
sockfd
, 
sockaddr
 *
ª°ri˘
 
addr
, 
sockÀn_t
 *ª°ri˘ 
addæí
)

84  
	`ax_gë≥î«me
(
sockfd
, 
addr
, 
addæí
);

85 
	}
}

	@ulib/c_libax/src/stat.c

1 
	~<°dio.h
>

2 
	~<sys/ty≥s.h
>

5 
	$fchmod
(
fd
, 
mode_t
 
mode
)

7 
	`unim∂emíãd
();

9 
	}
}

12 
	$mkdú
(c⁄° *
∑th«me
, 
mode_t
 
mode
)

14 
	`unim∂emíãd
();

16 
	}
}

	@ulib/c_libax/src/stdio.c

1 
	~"¥ötf.h
"

2 
	~<as£π.h
>

3 
	~<î∫o.h
>

4 
	~<f˙é.h
>

5 
	~<limôs.h
>

6 
	~<°d¨g.h
>

7 
	~<°ddef.h
>

8 
	~<°döt.h
>

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~<uni°d.h
>

13 
	~<libax.h
>

15 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

16 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

18 
FILE
 
	g__°dö_FILE
 = {.
fd
 = 0, .
	gbuf„r_Àn
 = 0};

20 
FILE
 
	g__°dout_FILE
 = {.
fd
 = 1, .
	gbuf„r_Àn
 = 0};

22 
FILE
 
	g__°dîr_FILE
 = {.
fd
 = 2, .
	gbuf„r_Àn
 = 0};

24 
FILE
 *c⁄° 
	g°dö
 = &
__°dö_FILE
;

25 
FILE
 *c⁄° 
	g°dout
 = &
__°dout_FILE
;

26 
FILE
 *c⁄° 
	g°dîr
 = &
__°dîr_FILE
;

30 
	$__wrôe_buf„r
(
FILE
 *
f
)

32 
r
 = 0;

33 i‡(
f
->
buf„r_Àn
 == 0)

35 i‡(
f
->
fd
 =
°dout
->fd || f->fd =
°dîr
->fd) {

36 
r
 = 
	`ax_¥öt_°r
(
f
->
buf
, f->
buf„r_Àn
);

37 #ifde‡
AX_CONFIG_ALLOC


39 
r
 = 
	`wrôe
(
f
->
fd
, f->
buf
, f->
buf„r_Àn
);

42  
r
;

43 
	}
}

46 
	$__˛ór_buf„r
(
FILE
 *
f
)

48 
f
->
buf„r_Àn
 = 0;

49 
	}
}

51 
	$__fÊush
(
FILE
 *
f
)

53 
r
 = 
	`__wrôe_buf„r
(
f
);

54 
	`__˛ór_buf„r
(
f
);

55  
r
 >= 0 ? 0 :Ñ;

56 
	}
}

58 
	$out
(
FILE
 *
f
, c⁄° *
s
, 
size_t
 
l
)

60 
ªt
 = 0;

61 
size_t
 
i
 = 0; i < 
l
; i++) {

62 
c
 = 
s
[
i
];

63 
f
->
buf
[f->
buf„r_Àn
++] = 
c
;

64 i‡(
f
->
buf„r_Àn
 =
FILE_BUF_SIZE
 || 
c
 == '\n') {

65 
r
 = 
	`__wrôe_buf„r
(
f
);

66 
	`__˛ór_buf„r
(
f
);

67 i‡(
r
 < 0)

68  
r
;

69 i‡(
r
 < 
f
->
buf„r_Àn
)

70  
ªt
 + 
r
;

71 
ªt
 +
r
;

74  
ªt
;

75 
	}
}

87 
	$fÊush
(
FILE
 *
f
)

89  
	`__fÊush
(
f
);

90 
	}
}

92 
ölöe
 
	$do_putc
(
c
, 
FILE
 *
f
)

94 
byã
 = 
c
;

95  
	`out
(
f
, &
byã
, 1);

96 
	}
}

98 
	$Âutc
(
c
, 
FILE
 *
f
)

100  
	`do_putc
(
c
, 
f
);

101 
	}
}

103 
	$putc
(
c
, 
FILE
 *
f
)

105  
	`do_putc
(
c
, 
f
);

106 
	}
}

108 
	$putch¨
(
c
)

110  
	`do_putc
(
c
, 
°dout
);

111 
	}
}

113 
	$puts
(c⁄° *
s
)

115  
	`ax_¥öén_°r
(
s
, 
	`°æí
(s));

116 
	}
}

118 
	$≥º‹
(c⁄° *
msg
)

120 
FILE
 *
f
 = 
°dîr
;

121 *
îr°r
 = 
	`°ªº‹
(
î∫o
);

123 i‡(
msg
 && *msg) {

124 
	`out
(
f
, 
msg
, 
	`°æí
(msg));

125 
	`out
(
f
, ": ", 2);

127 
	`out
(
f
, 
îr°r
, 
	`°æí
(errstr));

128 
	`out
(
f
, "\n", 1);

129 
	}
}

131 
	$__out_wøµî
(
c
, *
¨g
)

133 
	`out
(
¨g
, &
c
, 1);

134 
	}
}

136 
	$¥ötf
(c⁄° *
ª°ri˘
 
fmt
, ...)

138 
ªt
;

139 
va_li°
 
≠
;

140 
	`va_°¨t
(
≠
, 
fmt
);

141 
ªt
 = 
	`vÂrötf
(
°dout
, 
fmt
, 
≠
);

142 
	`va_íd
(
≠
);

143  
ªt
;

144 
	}
}

146 
	$Ârötf
(
FILE
 *
ª°ri˘
 
f
, c⁄° *ª°ri˘ 
fmt
, ...)

148 
ªt
;

149 
va_li°
 
≠
;

150 
	`va_°¨t
(
≠
, 
fmt
);

151 
ªt
 = 
	`vÂrötf
(
f
, 
fmt
, 
≠
);

152 
	`va_íd
(
≠
);

153  
ªt
;

154 
	}
}

156 
	$vÂrötf
(
FILE
 *
ª°ri˘
 
f
, c⁄° *ª°ri˘ 
fmt
, 
va_li°
 
≠
)

158  
	`vf˘¥ötf
(
__out_wøµî
, 
f
, 
fmt
, 
≠
);

159 
	}
}

161 #i‡
deföed
(
AX_CONFIG_ALLOC
Ë&& deföed(
AX_CONFIG_FS
)

163 
	$__fmodeÊags
(c⁄° *
mode
)

165 
Êags
;

166 i‡(
	`°rchr
(
mode
, '+'))

167 
Êags
 = 
O_RDWR
;

168 i‡(*
mode
 == 'r')

169 
Êags
 = 
O_RDONLY
;

171 
Êags
 = 
O_WRONLY
;

172 i‡(
	`°rchr
(
mode
, 'x'))

173 
Êags
 |
O_EXCL
;

174 i‡(
	`°rchr
(
mode
, 'e'))

175 
Êags
 |
O_CLOEXEC
;

176 i‡(*
mode
 != 'r')

177 
Êags
 |
O_CREAT
;

178 i‡(*
mode
 == 'w')

179 
Êags
 |
O_TRUNC
;

180 i‡(*
mode
 == 'a')

181 
Êags
 |
O_APPEND
;

182  
Êags
;

183 
	}
}

185 
FILE
 *
	$f›í
(c⁄° *
fûíame
, c⁄° *
mode
)

187 
FILE
 *
f
;

188 
Êags
;

190 i‡(!
	`°rchr
("rwa", *
mode
)) {

191 
î∫o
 = 
EINVAL
;

195 
f
 = (
FILE
 *)
	`mÆloc
((FILE));

197 
Êags
 = 
	`__fmodeÊags
(
mode
);

199 
fd
 = 
	`ax_›í
(
fûíame
, 
Êags
, 0666);

200 i‡(
fd
 < 0)

201  
NULL
;

202 
f
->
fd
 = fd;

204  
f
;

205 
	}
}

207 *
	$fgës
(*
ª°ri˘
 
s
, 
n
, 
FILE
 *ª°ri˘ 
f
)

209 i‡(
n
 == 0)

210  
NULL
;

211 i‡(
n
 == 1) {

212 *
s
 = '\0';

213  
s
;

216 
˙t
 = 0;

217 
˙t
 < 
n
 - 1) {

218 
c
;

219 i‡(
	`ax_ªad
(
f
->
fd
, (*)&
c
, 1) > 0) {

220 i‡(
c
 != '\n')

221 
s
[
˙t
++] = 
c
;

227 
s
[
˙t
] = '\0';

228  
s
;

229 
	}
}

	@ulib/c_libax/src/stdlib.c

1 
	~<˘y≥.h
>

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

4 
	~<°döt.h
>

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

10 
	~<libax.h
>

12 
	#__DECONST
(
ty≥
, 
v¨
Ë(—y≥)(
uöçå_t
)(c⁄° *)(v¨))

	)

14 
	$§™d
(
s
)

16 
	`ax_§™d
(
s
);

17 
	}
}

19 
	$ønd
()

21  
	`ax_ønd_u32
();

22 
	}
}

24 #ifde‡
AX_CONFIG_ALLOC


26 *
	$mÆloc
(
size_t
 
size
)

28  
	`ax_mÆloc
(
size
);

29 
	}
}

31 *
	$ˇŒoc
(
size_t
 
m
, size_à
n
)

33 *
mem
 = 
	`ax_mÆloc
(
m
 * 
n
);

35  
	`mem£t
(
mem
, 0, 
n
 * 
m
);

36 
	}
}

38 *
	$ªÆloc
(*
memblock
, 
size_t
 
size
)

40 i‡(!
memblock
)

41  
	`mÆloc
(
size
);

43 
size_t
 
o_size
 = *(size_à*)(
memblock
 - 8);

45 *
mem
 = 
	`ax_mÆloc
(
size
);

47 
i
 = 0; i < (
o_size
 < 
size
 ? o_size : size); i++)

48 ((*)
mem
)[
i
] = ((*)
memblock
)[i];

50 
	`ax_‰ì
(
memblock
);

51  
mem
;

52 
	}
}

54 
	$‰ì
(*
addr
)

56 i‡(!
addr
)

58  
	`ax_‰ì
(
addr
);

59 
	}
}

63 
_N‹ëu∫
 
	$ab‹t
()

65 
	`ax_∑nic
();

66 
	`__buûtö_uƒóchabÀ
();

67 
	}
}

70 
	$__˛zdi2
(
a
)

73 
	}
}

75 
	$°πﬁ
(c⁄° *
ª°ri˘
 
≈å
, **ª°ri˘ 
íd±r
, 
ba£
)

77 c⁄° *
s
;

78 
acc
;

79 
c
;

80 
qba£
, 
cutoff
;

81 
√g
, 
™y
, 
cuéim
;

83 
s
 = 
≈å
;

84 i‡(
ba£
 < 0 || base == 1 || base > 36) {

85 
î∫o
 = 
EINVAL
;

86 
™y
 = 0;

87 
acc
 = 0;

88 
exô
;

92 
c
 = *
s
++;

93 } 
	`is•a˚
(
c
));

94 i‡(
c
 == '-') {

95 
√g
 = 1;

96 
c
 = *
s
++;

98 
√g
 = 0;

99 i‡(
c
 == '+')

100 
c
 = *
s
++;

102 i‡((
ba£
 =0 || ba£ =16Ë&& 
c
 ='0' && (*
s
 == 'x' || *s == 'X')) {

103 
c
 = 
s
[1];

104 
s
 += 2;

105 
ba£
 = 16;

107 i‡(
ba£
 == 0)

108 
ba£
 = 
c
 == '0' ? 8 : 10;

110 
qba£
 = ()
ba£
;

111 
cutoff
 = 
√g
 ? ()
LONG_MAX
 - ()(
LONG_MIN
 + LONG_MAX) : LONG_MAX;

112 
cuéim
 = 
cutoff
 % 
qba£
;

113 
cutoff
 /
qba£
;

114 
acc
 = 0, 
™y
 = 0;; 
c
 = *
s
++) {

115 i‡(!
	`ißscii
(
c
))

117 i‡(
	`isdigô
(
c
))

118 
c
 -= '0';

119 i‡(
	`ißÕha
(
c
))

120 
c
 -
	`isuµî
(c) ? 'A' - 10 : 'a' - 10;

123 i‡(
c
 >
ba£
)

125 i‡(
™y
 < 0 || 
acc
 > 
cutoff
 || (ac¯=cutof‡&& 
c
 > 
cuéim
))

126 
™y
 = -1;

128 
™y
 = 1;

129 
acc
 *
qba£
;

130 
acc
 +
c
;

134 i‡(
™y
 < 0) {

135 
acc
 = 
√g
 ? 
LONG_MIN
 : 
LONG_MAX
;

136 
î∫o
 = 
ERANGE
;

137 } i‡(
√g
)

138 
acc
 = -acc;

140 
exô
:

141 i‡(
íd±r
 != 0)

142 *
íd±r
 = 
	`__DECONST
(*, 
™y
 ? 
s
 - 1 : 
≈å
);

143  
acc
;

144 
	}
}

146 
	$°πoul
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

148 c⁄° *
s
 = 
≈å
;

149 
acc
;

150 
c
;

151 
cutoff
;

152 
√g
 = 0, 
™y
, 
cuéim
;

154 i‡(
ba£
 < 0 || base == 1 || base > 36) {

155 
î∫o
 = 
EINVAL
;

156 
™y
 = 0;

157 
acc
 = 0;

158 
exô
;

162 
c
 = *
s
++;

163 } 
	`is•a˚
(
c
));

164 i‡(
c
 == '-') {

165 
√g
 = 1;

166 
c
 = *
s
++;

167 } i‡(
c
 == '+')

168 
c
 = *
s
++;

169 i‡((
ba£
 =0 || ba£ =16Ë&& 
c
 ='0' && (*
s
 == 'x' || *s == 'X')) {

170 
c
 = 
s
[1];

171 
s
 += 2;

172 
ba£
 = 16;

174 i‡(
ba£
 == 0)

175 
ba£
 = 
c
 == '0' ? 8 : 10;

176 
cutoff
 = ()
ULONG_MAX
 / ()
ba£
;

177 
cuéim
 = ()
ULONG_MAX
 % ()
ba£
;

179 
acc
 = 0, 
™y
 = 0;; 
c
 = *
s
++) {

180 i‡(!
	`ißscii
(
c
))

182 i‡(
	`isdigô
(
c
))

183 
c
 -= '0';

184 i‡(
	`ißÕha
(
c
))

185 
c
 -
	`isuµî
(c) ? 'A' - 10 : 'a' - 10;

188 i‡(
c
 >
ba£
)

190 i‡(
™y
 < 0 || 
acc
 > 
cutoff
 || (ac¯=cutof‡&& 
c
 > 
cuéim
))

191 
™y
 = -1;

193 
™y
 = 1;

194 
acc
 *
ba£
;

195 
acc
 +
c
;

198 i‡(
™y
 < 0) {

199 
acc
 = 
ULONG_MAX
;

200 
î∫o
 = 
ERANGE
;

201 } i‡(
√g
)

202 
acc
 = -acc;

203 
exô
:

204 i‡(
íd±r
 != 0)

205 *
íd±r
 = 
	`__DECONST
(*, 
™y
 ? 
s
 - 1 : 
≈å
);

206  
acc
;

207 
	}
}

209 
	$°πﬁl
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

211 c⁄° *
s
;

212 
acc
;

213 
c
;

214 
qba£
, 
cutoff
;

215 
√g
, 
™y
, 
cuéim
;

217 
s
 = 
≈å
;

218 i‡(
ba£
 < 0 || base == 1 || base > 36) {

219 
î∫o
 = 
EINVAL
;

220 
™y
 = 0;

221 
acc
 = 0;

222 
exô
;

226 
c
 = *
s
++;

227 } 
	`is•a˚
(
c
));

228 i‡(
c
 == '-') {

229 
√g
 = 1;

230 
c
 = *
s
++;

232 
√g
 = 0;

233 i‡(
c
 == '+')

234 
c
 = *
s
++;

236 i‡((
ba£
 =0 || ba£ =16Ë&& 
c
 ='0' && (*
s
 == 'x' || *s == 'X')) {

237 
c
 = 
s
[1];

238 
s
 += 2;

239 
ba£
 = 16;

241 i‡(
ba£
 == 0)

242 
ba£
 = 
c
 == '0' ? 8 : 10;

244 
qba£
 = ()
ba£
;

245 
cutoff
 = 
√g
 ? ()
LLONG_MAX
 - ()(
LLONG_MIN
 + LLONG_MAX)

246 : 
LLONG_MAX
;

247 
cuéim
 = 
cutoff
 % 
qba£
;

248 
cutoff
 /
qba£
;

249 
acc
 = 0, 
™y
 = 0;; 
c
 = *
s
++) {

250 i‡(!
	`ißscii
(
c
))

252 i‡(
	`isdigô
(
c
))

253 
c
 -= '0';

254 i‡(
	`ißÕha
(
c
))

255 
c
 -
	`isuµî
(c) ? 'A' - 10 : 'a' - 10;

258 i‡(
c
 >
ba£
)

260 i‡(
™y
 < 0 || 
acc
 > 
cutoff
 || (ac¯=cutof‡&& 
c
 > 
cuéim
))

261 
™y
 = -1;

263 
™y
 = 1;

264 
acc
 *
qba£
;

265 
acc
 +
c
;

269 i‡(
™y
 < 0) {

270 
î∫o
 = 
ERANGE
;

271 
acc
 = 
√g
 ? 
LLONG_MIN
 : 
LLONG_MAX
;

272 } i‡(
√g
)

273 
acc
 = -acc;

275 
exô
:

276 i‡(
íd±r
 != 0)

277 *
íd±r
 = 
	`__DECONST
(*, 
™y
 ? 
s
 - 1 : 
≈å
);

278  
acc
;

279 
	}
}

281 
	$°πouŒ
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

283 c⁄° *
s
 = 
≈å
;

284 
acc
;

285 
c
;

286 
qba£
, 
cutoff
;

287 
√g
, 
™y
, 
cuéim
;

289 i‡(
ba£
 < 0 || base == 1 || base > 36) {

290 
î∫o
 = 
EINVAL
;

291 
™y
 = 0;

292 
acc
 = 0;

293 
exô
;

297 
c
 = *
s
++;

298 } 
	`is•a˚
(
c
));

299 i‡(
c
 == '-') {

300 
√g
 = 1;

301 
c
 = *
s
++;

303 
√g
 = 0;

304 i‡(
c
 == '+')

305 
c
 = *
s
++;

307 i‡((
ba£
 =0 || ba£ =16Ë&& 
c
 ='0' && (*
s
 == 'x' || *s == 'X')) {

308 
c
 = 
s
[1];

309 
s
 += 2;

310 
ba£
 = 16;

312 i‡(
ba£
 == 0)

313 
ba£
 = 
c
 == '0' ? 8 : 10;

315 
qba£
 = ()
ba£
;

316 
cutoff
 = ()
ULLONG_MAX
 / 
qba£
;

317 
cuéim
 = ()
ULLONG_MAX
 % 
qba£
;

318 
acc
 = 0, 
™y
 = 0;; 
c
 = *
s
++) {

319 i‡(!
	`ißscii
(
c
))

321 i‡(
	`isdigô
(
c
))

322 
c
 -= '0';

323 i‡(
	`ißÕha
(
c
))

324 
c
 -
	`isuµî
(c) ? 'A' - 10 : 'a' - 10;

327 i‡(
c
 >
ba£
)

329 i‡(
™y
 < 0 || 
acc
 > 
cutoff
 || (ac¯=cutof‡&& 
c
 > 
cuéim
))

330 
™y
 = -1;

332 
™y
 = 1;

333 
acc
 *
qba£
;

334 
acc
 +
c
;

337 i‡(
™y
 < 0) {

338 
î∫o
 = 
ERANGE
;

339 
acc
 = 
ULLONG_MAX
;

340 } i‡(
√g
)

341 
acc
 = -acc;

343 
exô
:

344 i‡(
íd±r
 != 0)

345 *
íd±r
 = 
	`__DECONST
(*, 
™y
 ? 
s
 - 1 : 
≈å
);

346  
acc
;

347 
	}
}

349 
	$exô
(
°©us
)

351 
	`ax_exô
(
°©us
);

352 
	}
}

354 
	$Œabs
(
a
)

356  
a
 > 0 ?á : -a;

357 
	}
}

359 
	$abs
(
a
)

361  
a
 > 0 ?á : -a;

362 
	}
}

364 
	$©ﬁl
(c⁄° *
s
)

366 
n
 = 0;

367 
√g
 = 0;

368 
	`is•a˚
(*
s
)) s++;

369 *
s
) {

371 
√g
 = 1;

373 
s
++;

376 
	`isdigô
(*
s
)Ë
n
 = 10 *Ç - (*s++ - '0');

377  
√g
 ? 
n
 : -n;

378 
	}
}

380 #ifde‡
AX_CONFIG_FP_SIMD


381 
	$°πof
(c⁄° *
ª°ri˘
 
s
, **ª°ri˘ 
p
)

383  
	`ax_°πof
(
s
, 
p
);

384 
	}
}

386 
	$°πod
(c⁄° *
ª°ri˘
 
s
, **ª°ri˘ 
p
)

388  
	`ax_°πod
(
s
, 
p
);

389 
	}
}

	@ulib/c_libax/src/string.c

1 
	~<˘y≥.h
>

2 
	~<°ddef.h
>

3 
	~<°döt.h
>

4 
	~<°rög.h
>

6 
	~<libax.h
>

8 
size_t
 
	$°æí
(c⁄° *
s
)

10 c⁄° *
a
 = 
s
;

11 ; *
s
; s++)

13  
s
 - 
a
;

14 
	}
}

16 
size_t
 
	$°∫Àn
(c⁄° *
s
, 
size_t
 
n
)

18 c⁄° *
p
 = 
	`memchr
(
s
, 0, 
n
);

19  
p
 ?Ö - 
s
 : 
n
;

20 
	}
}

22 
	$©oi
(c⁄° *
s
)

24 
n
 = 0, 
√g
 = 0;

25 
	`is•a˚
(*
s
)) s++;

26 *
s
) {

28 
√g
 = 1;

30 
s
++;

33 
	`isdigô
(*
s
)Ë
n
 = 10 *Ç - (*s++ - '0');

34  
√g
 ? 
n
 : -n;

35 
	}
}

37 *
	$memchr
(c⁄° *
§c
, 
c
, 
size_t
 
n
)

39 c⁄° *
s
 = 
§c
;

40 
c
 = ()c;

41 ; 
n
 && *
s
 !
c
; s++,Ç--)

43  
n
 ? (*)
s
 : 0;

44 
	}
}

46 *
	$mem£t
(*
de°
, 
c
, 
size_t
 
n
)

48 *
s
 = 
de°
;

49 
size_t
 
k
;

55 i‡(!
n
)

56  
de°
;

57 
s
[0] = 
c
;

58 
s
[
n
 - 1] = 
c
;

59 i‡(
n
 <= 2)

60  
de°
;

61 
s
[1] = 
c
;

62 
s
[2] = 
c
;

63 
s
[
n
 - 2] = 
c
;

64 
s
[
n
 - 3] = 
c
;

65 i‡(
n
 <= 6)

66  
de°
;

67 
s
[3] = 
c
;

68 
s
[
n
 - 4] = 
c
;

69 i‡(
n
 <= 8)

70  
de°
;

77 
k
 = -(
uöçå_t
)
s
 & 3;

78 
s
 +
k
;

79 
n
 -
k
;

80 
n
 &= -4;

83 ; 
n
;Ç--, 
s
++Ë*†
c
;

85  
de°
;

86 
	}
}

88 *
	$°r˝y
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
)

90 ; (*
d
 = *
s
); s++, d++)

92  
d
;

93 
	}
}

95 *
	$°∫˝y
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
, 
size_t
 
n
)

97 ; 
n
 && (*
d
 = *
s
);Ç--, s++, d++)

99  
d
;

100 
	}
}

102 *
	$°rˇt
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
)

104 
	`°r˝y
(
d
 + 
	`°æí
(d), 
s
);

105  
d
;

106 
	}
}

108 *
	$°∫ˇt
(*
ª°ri˘
 
d
, c⁄° *ª°ri˘ 
s
, 
size_t
 
n
)

110 *
a
 = 
d
;

111 
d
 +
	`°æí
(d);

112 
n
 && *
s
Ën--, *
d
++ = *s++;

113 *
d
++ = 0;

114  
a
;

115 
	}
}

117 
	$°rcmp
(c⁄° *
l
, c⁄° *
r
)

119 ; *
l
 =*
r
 && *l;Ü++,Ñ++)

121  *(*)
l
 - *(*)
r
;

122 
	}
}

124 
	$°∫cmp
(c⁄° *
_l
, c⁄° *
_r
, 
size_t
 
n
)

126 c⁄° *
l
 = (*)
_l
, *
r
 = (*)
_r
;

127 i‡(!
n
--)

129 ; *
l
 && *
r
 && 
n
 && *l == *r;Ü++,Ñ++,Ç--)

131  *
l
 - *
r
;

132 
	}
}

134 
	$°rcﬁl
(c⁄° *
l
, c⁄° *
r
)

136  
	`°rcmp
(
l
, 
r
);

137 
	}
}

139 
	#BITOP
(
a
, 
b
, 
›
) \

140 ((
a
)[(
size_t
)(
b
Ë/ (8 *  *◊))] 
	`›
(size_tË1 << ((size_t)(bË% (8 *  *◊))))

	)

141 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

142 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

144 
size_t
 
	$°rc•n
(c⁄° *
s1
, c⁄° *
s2
)

146 c⁄° *
a
 = 
s1
;

147 
size_t
 
byã£t
[32 / (size_t)];

149 i‡(!
s2
[0] || !s2[1]) {

150 ; *
s1
 !*
s2
; s1++Ë s1 - 
a
;

152 
	`mem£t
(
byã£t
, 0,  byteset);

154 ; *
s2
 !'\0'; s2++Ë
	`BITOP
(
byã£t
, *(*)s2, |=);

155 ; *
s1
 && !(
	`BITOP
(
byã£t
, *(*)s1, &)); s1++)

158  
s1
 - 
a
;

159 
	}
}

161 
size_t
 
	$°r•n
(c⁄° *
s
, c⁄° *
c
)

163 c⁄° *
a
 = 
s
;

164 
size_t
 
byã£t
[32 / (size_t)] = {0};

166 i‡(!
c
[0])

168 i‡(!
c
[1]) {

169 ; *
s
 =*
c
; s++)

171  
s
 - 
a
;

174 ; *
c
 && 
	`BITOP
(
byã£t
, *(*)c, |=); c++)

176 ; *
s
 && 
	`BITOP
(
byã£t
, *(*)s, &); s++)

178  
s
 - 
a
;

179 
	}
}

181 *
	$°Ωbrk
(c⁄° *
s
, c⁄° *
b
)

183 
s
 +
	`°rc•n
(s, 
b
);

184  *
s
 ? (*)s : 0;

185 
	}
}

187 *
	$°rch∫ul
(c⁄° *
s
, 
c
)

189 
c
 = ()c;

190 i‡(!
c
)

191  (*)
s
 + 
	`°æí
(s);

193 ; *
s
 && *(*)†!
c
; s++)

195  (*)
s
;

196 
	}
}

198 *
	$°rchr
(c⁄° *
s
, 
c
)

200 *
s
 !
c
 && *s != '\0') s++;

202 i‡(*
s
 =
c
) {

203  (*)
s
;

205  
NULL
;

207 
	}
}

209 *
	$°ºchr
(c⁄° *
s
, 
c
)

211 *
isCh¨Föd
 = 
NULL
;

212 i‡(
s
 !
NULL
) {

214 i‡(*
s
 =()
c
) {

215 
isCh¨Föd
 = (*)
s
;

217 } *
s
++);

219  
isCh¨Föd
;

220 
	}
}

222 *
	$°ªº‹
(
e
)

224  
	`ax_î∫o_°rög
(
e
);

225 
	}
}

227 *
	$mem˝y
(*
ª°ri˘
 
de°
, c⁄° *ª°ri˘ 
§c
, 
size_t
 
n
)

229 *
d
 = 
de°
;

230 c⁄° *
s
 = 
§c
;

231 ; 
n
;Ç--Ë*
d
++ = *
s
++;

232  
de°
;

233 
	}
}

235 *
	$memmove
(*
de°
, c⁄° *
§c
, 
size_t
 
n
)

237 *
d
 = 
de°
;

238 c⁄° *
s
 = 
§c
;

240 i‡(
d
 =
s
)

241  
d
;

242 i‡((
uöçå_t
)
s
 - (uöçå_t)
d
 - 
n
 <= -2 *Ç)

243  
	`mem˝y
(
d
, 
s
, 
n
);

245 i‡(
d
 < 
s
) {

246 ; 
n
;Ç--Ë*
d
++ = *
s
++;

248 
n
Ën--, 
d
[n] = 
s
[n];

251  
de°
;

252 
	}
}

254 
	$memcmp
(c⁄° *
vl
, c⁄° *
vr
, 
size_t
 
n
)

256 c⁄° *
l
 = 
vl
, *
r
 = 
vr
;

257 ; 
n
 && *
l
 =*
r
;Ç--,Ü++,Ñ++)

259  
n
 ? *
l
 - *
r
 : 0;

260 
	}
}

262 
	$°rˇ£cmp
(c⁄° *
_l
, c⁄° *
_r
)

264 c⁄° *
l
 = (*)
_l
, *
r
 = (*)
_r
;

265 ; *
l
 && *
r
 && (*»=*∏|| 
	`tﬁowî
(*l) ==Åolower(*r));Ü++,Ñ++)

267  
	`tﬁowî
(*
l
Ë-Åﬁowî(*
r
);

268 
	}
}

270 
	$°∫ˇ£cmp
(c⁄° *
_l
, c⁄° *
_r
, 
size_t
 
n
)

272 c⁄° *
l
 = (*)
_l
, *
r
 = (*)
_r
;

273 i‡(!
n
--)

275 ; *
l
 && *
r
 && 
n
 && (*»=*∏|| 
	`tﬁowî
(*l) ==Åolower(*r));Ü++,Ñ++,Ç--)

277  
	`tﬁowî
(*
l
Ë-Åﬁowî(*
r
);

278 
	}
}

281 *
	$twobyã_°r°r
(c⁄° *
h
, c⁄° *
n
)

283 
uöt16_t
 
nw
 = 
n
[0] << 8 |Ç[1], 
hw
 = 
h
[0] << 8 | h[1];

284 
h
++; *h && 
hw
 !
nw
; hw = hw << 8 | *++h)

286  *
h
 ? (*)h - 1 : 0;

287 
	}
}

290 *
	$thªebyã_°r°r
(c⁄° *
h
, c⁄° *
n
)

292 
uöt32_t
 
nw
 = (uöt32_t)
n
[0] << 24 |Ç[1] << 16 |Ç[2] << 8;

293 
uöt32_t
 
hw
 = (uöt32_t)
h
[0] << 24 | h[1] << 16 | h[2] << 8;

294 
h
 +2; *h && 
hw
 !
nw
; hw = (hw | *++h) << 8)

296  *
h
 ? (*)h - 2 : 0;

297 
	}
}

300 *
	$fourbyã_°r°r
(c⁄° *
h
, c⁄° *
n
)

302 
uöt32_t
 
nw
 = (uöt32_t)
n
[0] << 24 |Ç[1] << 16 |Ç[2] << 8 |Ç[3];

303 
uöt32_t
 
hw
 = (uöt32_t)
h
[0] << 24 | h[1] << 16 | h[2] << 8 | h[3];

304 
h
 +3; *h && 
hw
 !
nw
; hw = hw << 8 | *++h)

306  *
h
 ? (*)h - 3 : 0;

307 
	}
}

310 *
	$twoway_°r°r
(c⁄° *
h
, c⁄° *
n
)

312 c⁄° *
z
;

313 
size_t
 
l
, 
ù
, 
jp
, 
k
, 
p
, 
ms
, 
p0
, 
mem
, 
mem0
;

314 
size_t
 
byã£t
[32 / (size_t)] = {0};

315 
size_t
 
shi·
[256];

318 
l
 = 0; 
n
[l] && 
h
[l];Ü++Ë
	`BITOP
(
byã£t
,Ç[l], |=), 
shi·
[n[l]] =Ü + 1;

319 i‡(
n
[
l
])

323 
ù
 = -1;

324 
jp
 = 0;

325 
k
 = 
p
 = 1;

326 
jp
 + 
k
 < 
l
) {

327 i‡(
n
[
ù
 + 
k
] =n[
jp
 + k]) {

328 i‡(
k
 =
p
) {

329 
jp
 +
p
;

330 
k
 = 1;

332 
k
++;

333 } i‡(
n
[
ù
 + 
k
] >Ç[
jp
 + k]) {

334 
jp
 +
k
;

335 
k
 = 1;

336 
p
 = 
jp
 - 
ù
;

338 
ù
 = 
jp
++;

339 
k
 = 
p
 = 1;

342 
ms
 = 
ù
;

343 
p0
 = 
p
;

346 
ù
 = -1;

347 
jp
 = 0;

348 
k
 = 
p
 = 1;

349 
jp
 + 
k
 < 
l
) {

350 i‡(
n
[
ù
 + 
k
] =n[
jp
 + k]) {

351 i‡(
k
 =
p
) {

352 
jp
 +
p
;

353 
k
 = 1;

355 
k
++;

356 } i‡(
n
[
ù
 + 
k
] <Ç[
jp
 + k]) {

357 
jp
 +
k
;

358 
k
 = 1;

359 
p
 = 
jp
 - 
ù
;

361 
ù
 = 
jp
++;

362 
k
 = 
p
 = 1;

365 i‡(
ù
 + 1 > 
ms
 + 1)

366 
ms
 = 
ù
;

368 
p
 = 
p0
;

371 i‡(
	`memcmp
(
n
,Ç + 
p
, 
ms
 + 1)) {

372 
mem0
 = 0;

373 
p
 = 
	`MAX
(
ms
, 
l
 - ms - 1) + 1;

375 
mem0
 = 
l
 - 
p
;

376 
mem
 = 0;

379 
z
 = 
h
;

384 i‡(
z
 - 
h
 < 
l
) {

386 
size_t
 
grow
 = 
l
 | 63;

387 c⁄° *
z2
 = 
	`memchr
(
z
, 0, 
grow
);

388 i‡(
z2
) {

389 
z
 = 
z2
;

390 i‡(
z
 - 
h
 < 
l
)

393 
z
 +
grow
;

397 i‡(
	`BITOP
(
byã£t
, 
h
[
l
 - 1], &)) {

398 
k
 = 
l
 - 
shi·
[
h
[l - 1]];

399 i‡(
k
) {

400 i‡(
k
 < 
mem
)

401 
k
 = 
mem
;

402 
h
 +
k
;

403 
mem
 = 0;

407 
h
 +
l
;

408 
mem
 = 0;

413 
k
 = 
	`MAX
(
ms
 + 1, 
mem
); 
n
[k] &&Ç[k] =
h
[k]; k++)

415 i‡(
n
[
k
]) {

416 
h
 +
k
 - 
ms
;

417 
mem
 = 0;

421 
k
 = 
ms
 + 1; k > 
mem
 && 
n
[k - 1] =
h
[k - 1]; k--)

423 i‡(
k
 <
mem
)

424  (*)
h
;

425 
h
 +
p
;

426 
mem
 = 
mem0
;

428 
	}
}

430 *
	$°r°r
(c⁄° *
h
, c⁄° *
n
)

433 i‡(!
n
[0])

434  (*)
h
;

437 
h
 = 
	`°rchr
(h, *
n
);

438 i‡(!
h
 || !
n
[1])

439  (*)
h
;

440 i‡(!
h
[1])

442 i‡(!
n
[2])

443  
	`twobyã_°r°r
((*)
h
, (*)
n
);

444 i‡(!
h
[2])

446 i‡(!
n
[3])

447  
	`thªebyã_°r°r
((*)
h
, (*)
n
);

448 i‡(!
h
[3])

450 i‡(!
n
[4])

451  
	`fourbyã_°r°r
((*)
h
, (*)
n
);

453  
	`twoway_°r°r
((*)
h
, (*)
n
);

454 
	}
}

456 #ifde‡
AX_CONFIG_ALLOC


457 
	~<°dlib.h
>

458 *
	$°rdup
(c⁄° *
s
)

460 
size_t
 
l
 = 
	`°æí
(
s
);

461 *
d
 = 
	`mÆloc
(
l
 + 1);

462 i‡(!
d
)

463  
NULL
;

464  
	`mem˝y
(
d
, 
s
, 
l
 + 1);

465 
	}
}

	@ulib/c_libax/src/time.c

1 
	~<î∫o.h
>

2 
	~<limôs.h
>

3 
	~<°ddef.h
>

4 
	~<°dio.h
>

5 
	~<sys/time.h
>

6 
	~<time.h
>

8 
	~<libax.h
>

10 c⁄° 
	gSEC_PER_MIN
 = 60;

11 c⁄° 
	gSEC_PER_HOUR
 = 3600;

12 c⁄° 
	gMIN_PER_HOUR
 = 60;

13 c⁄° 
	gHOUR_PER_DAY
 = 24;

16 
	#LEAPOCH
 (946684800LL + 86400 * (31 + 29))

	)

17 
	#DAYS_PER_400Y
 (365 * 400 + 97)

	)

18 
	#DAYS_PER_100Y
 (365 * 100 + 24)

	)

19 
	#DAYS_PER_4Y
 (365 * 4 + 1)

	)

22 
size_t
 
	$°r·ime
(*
__ª°ri˘__
 
_Buf
, 
size_t
 
_SizeInByãs
, c⁄° *__ª°ri˘__ 
_F‹m©
,

23 c⁄° 
tm
 *
__ª°ri˘__
 
_Tm
)

25 
	`unim∂emíãd
();

27 
	}
}

29 
	$__£cs_to_tm
(
t
, 
tm
 *tm)

31 
days
, 
£cs
, 
yórs
;

32 
ªmdays
, 
ªm£cs
, 
ªmyórs
;

33 
qc_cy˛es
, 
c_cy˛es
, 
q_cy˛es
;

34 
m⁄ths
;

35 
wday
, 
yday
, 
À≠
;

36 c⁄° 
days_ö_m⁄th
[] = {31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29};

39 i‡(
t
 < 
INT_MIN
 * 31622400LL ||Å > 
INT_MAX
 * 31622400LL)

42 
£cs
 = 
t
 - 
LEAPOCH
;

43 
days
 = 
£cs
 / 86400;

44 
ªm£cs
 = 
£cs
 % 86400;

45 i‡(
ªm£cs
 < 0) {

46 
ªm£cs
 += 86400;

47 
days
--;

50 
wday
 = (3 + 
days
) % 7;

51 i‡(
wday
 < 0)

52 
wday
 += 7;

54 
qc_cy˛es
 = 
days
 / 
DAYS_PER_400Y
;

55 
ªmdays
 = 
days
 % 
DAYS_PER_400Y
;

56 i‡(
ªmdays
 < 0) {

57 
ªmdays
 +
DAYS_PER_400Y
;

58 
qc_cy˛es
--;

61 
c_cy˛es
 = 
ªmdays
 / 
DAYS_PER_100Y
;

62 i‡(
c_cy˛es
 == 4)

63 
c_cy˛es
--;

64 
ªmdays
 -
c_cy˛es
 * 
DAYS_PER_100Y
;

66 
q_cy˛es
 = 
ªmdays
 / 
DAYS_PER_4Y
;

67 i‡(
q_cy˛es
 == 25)

68 
q_cy˛es
--;

69 
ªmdays
 -
q_cy˛es
 * 
DAYS_PER_4Y
;

71 
ªmyórs
 = 
ªmdays
 / 365;

72 i‡(
ªmyórs
 == 4)

73 
ªmyórs
--;

74 
ªmdays
 -
ªmyórs
 * 365;

76 
À≠
 = !
ªmyórs
 && (
q_cy˛es
 || !
c_cy˛es
);

77 
yday
 = 
ªmdays
 + 31 + 28 + 
À≠
;

78 i‡(
yday
 >365 + 
À≠
)

79 
yday
 -365 + 
À≠
;

81 
yórs
 = 
ªmyórs
 + 4 * 
q_cy˛es
 + 100 * 
c_cy˛es
 + 400LL * 
qc_cy˛es
;

83 
m⁄ths
 = 0; 
days_ö_m⁄th
[m⁄ths] <
ªmdays
; months++)Ñemdays -= days_in_month[months];

85 i‡(
m⁄ths
 >= 10) {

86 
m⁄ths
 -= 12;

87 
yórs
++;

90 i‡(
yórs
 + 100 > 
INT_MAX
 || yór†+ 100 < 
INT_MIN
)

93 
tm
->
tm_yór
 = 
yórs
 + 100;

94 
tm
->
tm_m⁄
 = 
m⁄ths
 + 2;

95 
tm
->
tm_mday
 = 
ªmdays
 + 1;

96 
tm
->
tm_wday
 = 
wday
;

97 
tm
->
tm_yday
 = 
yday
;

99 
tm
->
tm_hour
 = 
ªm£cs
 / 3600;

100 
tm
->
tm_mö
 = 
ªm£cs
 / 60 % 60;

101 
tm
->
tm_£c
 = 
ªm£cs
 % 60;

104 
	}
}

106 
tm
 *
	$__gmtime_r
(c⁄° 
time_t
 *
ª°ri˘
 
t
, 
tm
 *restrictÅm)

108 i‡(
	`__£cs_to_tm
(*
t
, 
tm
) < 0) {

109 
î∫o
 = 
EOVERFLOW
;

112 
tm
->
tm_isd°
 = 0;

113 
tm
->
__tm_gmtoff
 = 0;

116  
tm
;

117 
	}
}

119 
tm
 *
	$gmtime
(c⁄° 
time_t
 *
timî
)

121 
tm
Åm;

122  
	`__gmtime_r
(
timî
, &
tm
);

123 
	}
}

126 
tm
 *
	$loˇ…ime_r
(c⁄° 
time_t
 *
ª°ri˘
 
t
, 
tm
 *restrictÅm)

128 
time_t
 
£c
 = *
t
;

129 
tm
->
tm_£c
 = 
£c
 % 
SEC_PER_MIN
;

130 
tm
->
tm_mö
 = (
£c
 / 
SEC_PER_MIN
Ë% 
MIN_PER_HOUR
;

131 
tm
->
tm_hour
 = (
£c
 / 
SEC_PER_HOUR
Ë% 
HOUR_PER_DAY
;

133  
tm
;

134 
	}
}

136 
tm
 *
	$loˇ…ime
(c⁄° 
time_t
 *
timï
)

138 
tm
Åm;

139  
	`loˇ…ime_r
(
timï
, &
tm
);

140 
	}
}

142 
time_t
 
	$time
(
time_t
 *
t
)

144 
time•ec
 
ts
;

145 
	`ax_˛ock_gëtime
(&
ts
);

146 
time_t
 
ªt
 = 
ts
.
tv_£c
;

147 i‡(
t
)

148 *
t
 = 
ªt
;

149  
ªt
;

150 
	}
}

152 
	$gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
)

154 
time•ec
 
ts
;

155 i‡(!
tv
)

157 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
ts
);

158 
tv
->
tv_£c
 = 
ts
.tv_sec;

159 
tv
->
tv_u£c
 = ()
ts
.
tv_n£c
 / 1000;

161 
	}
}

164 
	$utimes
(c⁄° *
fûíame
, c⁄° 
timevÆ
 
times
[2])

166 
	`unim∂emíãd
();

168 
	}
}

171 
	$˛ock_gëtime
(
˛ockid_t
 
_˛k
, 
time•ec
 *
ts
)

173  
	`ax_˛ock_gëtime
(
ts
);

174 
	}
}

176 
	$«no¶ìp
(c⁄° 
time•ec
 *
ªq
, time•e¯*
ªm
)

178  
	`ax_«no¶ìp
(
ªq
, 
ªm
);

179 
	}
}

181 #ifde‡
AX_CONFIG_FP_SIMD


182 
	$dif·ime
(
time_t
 
t1
,Åime_à
t0
)

184  
t1
 - 
t0
;

185 
	}
}

	@ulib/c_libax/src/unistd.c

1 
	~<î∫o.h
>

2 
	~<f˙é.h
>

3 
	~<libax.h
>

4 
	~<°dio.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<time.h
>

7 
	~<uni°d.h
>

10 
uid_t
 
	$gëeuid
()

12 
	`unim∂emíãd
();

14 
	}
}

16 
pid_t
 
	$gëpid
()

18 #ifde‡
AX_CONFIG_MULTITASK


19  
	`ax_gëpid
();

24 
	}
}

26 
	$¶ìp
(
£c⁄ds
)

28 
time•ec
 
ts
;

30 
ts
.
tv_£c
 = 
£c⁄ds
;

31 
ts
.
tv_n£c
 = 0;

32 i‡(
	`«no¶ìp
(&
ts
, &ts))

33  
ts
.
tv_£c
;

36 
	}
}

38 
	$u¶ìp
(
u£c⁄ds
)

40 
time•ec
 
tv
 = {.
tv_£c
 = 
u£c⁄ds
 / 1000000, .
tv_n£c
 = (useconds % 1000000) * 1000};

41  
	`«no¶ìp
(&
tv
, &tv);

42 
	}
}

44 
	$sysc⁄f
(
«me
)

46  
	`ax_sysc⁄f
(
«me
);

47 
	}
}

48 #ifde‡
AX_CONFIG_ALLOC


49 
	$˛o£
(
fd
)

51  
	`ax_˛o£
(
fd
);

52 
	}
}

54 
	$f°©
(
fd
, 
°©
 *
buf
)

56  
	`ax_f°©
(
fd
, 
buf
);

57 
	}
}

59 
ssize_t
 
	$ªad
(
fd
, *
buf
, 
size_t
 
cou¡
)

61  
	`ax_ªad
(
fd
, 
buf
, 
cou¡
);

62 
	}
}

64 
ssize_t
 
	$wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
)

66  
	`ax_wrôe
(
fd
, 
buf
, 
cou¡
);

67 
	}
}

70 #ifde‡
AX_CONFIG_FS


72 
	$ac˚ss
(c⁄° *
∑th«me
, 
mode
)

74 
	`unim∂emíãd
();

76 
	}
}

78 *
	$gëcwd
(*
buf
, 
size_t
 
size
)

80  
	`ax_gëcwd
(
buf
, 
size
);

81 
	}
}

83 
	$l°©
(c⁄° *
∑th
, 
°©
 *
buf
)

85  
	`ax_l°©
(
∑th
, 
buf
);

86 
	}
}

88 
	$°©
(c⁄° *
∑th
, 
°©
 *
buf
)

90  
	`ax_°©
(
∑th
, 
buf
);

91 
	}
}

94 
ssize_t
 
	$ªadlök
(c⁄° *
∑th
, *
buf
, 
size_t
 
bufsiz
)

96 
	`unim∂emíãd
();

98 
	}
}

101 
	$u∆ök
(c⁄° *
∑th«me
)

103 
	`unim∂emíãd
();

105 
	}
}

108 
	$rmdú
(c⁄° *
∑th«me
)

110 
	`unim∂emíãd
();

112 
	}
}

114 
off_t
 
	$l£ek
(
fd
, 
off_t
 
off£t
, 
whí˚
)

116  
	`ax_l£ek
(
fd
, 
off£t
, 
whí˚
);

117 
	}
}

120 
	$fsync
(
fd
)

122 
	`unim∂emíãd
();

124 
	}
}

127 
	$fchown
(
fd
, 
uid_t
 
ow√r
, 
gid_t
 
group
)

129 
	`unim∂emíãd
("ow√r: %x group: %x", 
ow√r
, 
group
);

131 
	}
}

134 
	$·runˇã
(
fd
, 
off_t
 
Àngth
)

136 
	`unim∂emíãd
();

138 
	}
}

142 #ifde‡
AX_CONFIG_PIPE


143 
	$pùe
(
fd
[2])

145  
	`ax_pùe
(&
fd
[0], &fd[1]);

146 
	}
}

148 
	$pùe2
(
fd
[2], 
Êag
)

150 i‡(!
Êag
)

151  
	`pùe
(
fd
);

152 i‡(
Êag
 & ~(
O_CLOEXEC
 | 
O_NONBLOCK
))

153  -
EINVAL
;

155 
ªs
 = 
	`pùe
(
fd
);

156 i‡(
ªs
 != 0)

157  
ªs
;

159 i‡(
Êag
 & 
O_CLOEXEC
) {

160 
	`f˙é
(
fd
[0], 
F_SETFD
, 
FD_CLOEXEC
);

161 
	`f˙é
(
fd
[1], 
F_SETFD
, 
FD_CLOEXEC
);

163 i‡(
Êag
 & 
O_NONBLOCK
) {

164 
	`f˙é
(
fd
[0], 
F_SETFL
, 
O_NONBLOCK
);

165 
	`f˙é
(
fd
[1], 
F_SETFL
, 
O_NONBLOCK
);

169 
	}
}

172 #ifde‡
AX_CONFIG_ALLOC


173 
	$dup
(
fd
)

175  
	`ax_dup
(
fd
);

176 
	}
}

178 
	$dup2
(
ﬁd
, 
√w
)

180 
r
;

181 i‡(
ﬁd
 =
√w
) {

182 
r
 = 
	`f˙é
(
ﬁd
, 
F_GETFD
);

183 i‡(
r
 >= 0)

184  
ﬁd
;

186  
r
;

188  
	`ax_dup3
(
ﬁd
, 
√w
, 0);

189 
	}
}

191 
	$dup3
(
ﬁd
, 
√w
, 
Êags
)

193  
	`ax_dup3
(
ﬁd
, 
√w
, 
Êags
);

194 
	}
}

	@ulib/libax/ctypes.h

1 
	~<f˙é.h
>

2 
	~<√tdb.h
>

3 
	~<√töë/ö.h
>

4 
	~<±hªad.h
>

5 
	~<£tjmp.h
>

6 
	~<°ddef.h
>

7 
	~<°dio.h
>

8 
	~<sys/ïﬁl.h
>

9 
	~<sys/£À˘.h
>

10 
	~<sys/sockë.h
>

11 
	~<sys/°©.h
>

12 
	~<sys/time.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<uni°d.h
>

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<bôs/ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

108 
__ex˘y≥
 (
iß um
);

109 
__ex˘y≥
 (
ißÕha
);

110 
__ex˘y≥
 (
is˙ål
);

111 
__ex˘y≥
 (
isdigô
);

112 
__ex˘y≥
 (
i¶owî
);

113 
__ex˘y≥
 (
isgøph
);

114 
__ex˘y≥
 (
i•röt
);

115 
__ex˘y≥
 (
i•un˘
);

116 
__ex˘y≥
 (
is•a˚
);

117 
__ex˘y≥
 (
isuµî
);

118 
__ex˘y≥
 (
isxdigô
);

122 
	$tﬁowî
 (
__c
Ë
__THROW
;

125 
	$touµî
 (
__c
Ë
__THROW
;

129 #ifdef 
__USE_ISOC99


130 
	`__ex˘y≥
 (
isbœnk
);

133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE


173 #ifde‡
__is˘y≥_f


174 
	$__is˘y≥_f
 (
Ænum
)

175 
	$__is˘y≥_f
 (
Æpha
)

176 
	$__is˘y≥_f
 (
˙ål
)

177 
	$__is˘y≥_f
 (
digô
)

178 
	$__is˘y≥_f
 (
lowî
)

179 
	$__is˘y≥_f
 (
gøph
)

180 
	$__is˘y≥_f
 (
¥öt
)

181 
	$__is˘y≥_f
 (
pun˘
)

182 
	$__is˘y≥_f
 (
•a˚
)

183 
	$__is˘y≥_f
 (
uµî
)

184 
	$__is˘y≥_f
 (
xdigô
)

185 #ifde‡
__USE_ISOC99


186 
	$__is˘y≥_f
 (
bœnk
)

188 #ñi‡
deföed
 
__is˘y≥


189 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

190 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

191 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

192 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

193 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

194 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

195 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

196 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

197 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

198 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

199 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

200 #ifde‡
__USE_ISOC99


201 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

205 #ifde‡
__USE_EXTERN_INLINES


206 
__exã∫_ölöe
 

207 
	`__NTH
 (
	$tﬁowî
 (
__c
))

209  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

210 
	}
}

212 
__exã∫_ölöe
 

213 
__NTH
 (
	$touµî
 (
__c
))

215  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

216 
	}
}

219 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


220 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

221 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

224 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


225 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

226 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

228 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

229 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

235 #ifde‡
__USE_XOPEN2K8


237 
	~<bôs/ty≥s/loˇÀ_t.h
>

241 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

242 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

244 
	#__ex˘y≥_l
(
«me
) \

245 
	`«me
 (, 
loˇÀ_t
Ë
__THROW


	)

251 
__ex˘y≥_l
 (
iß um_l
);

252 
__ex˘y≥_l
 (
ißÕha_l
);

253 
__ex˘y≥_l
 (
is˙ål_l
);

254 
__ex˘y≥_l
 (
isdigô_l
);

255 
__ex˘y≥_l
 (
i¶owî_l
);

256 
__ex˘y≥_l
 (
isgøph_l
);

257 
__ex˘y≥_l
 (
i•röt_l
);

258 
__ex˘y≥_l
 (
i•un˘_l
);

259 
__ex˘y≥_l
 (
is•a˚_l
);

260 
__ex˘y≥_l
 (
isuµî_l
);

261 
__ex˘y≥_l
 (
isxdigô_l
);

263 
__ex˘y≥_l
 (
isbœnk_l
);

267 
	$__tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

271 
	$__touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

272 
	$touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

274 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


275 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

276 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

277 
	#__touµî_l
(
c
, 
loˇÀ
) \

278 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

279 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

280 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

284 #i‚de‡
__NO_CTYPE


285 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

286 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

287 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

288 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

289 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

290 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

291 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

292 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

293 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

294 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

295 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

297 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

299 #ifde‡
__USE_MISC


300 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

301 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

304 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

305 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

306 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

307 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

308 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

309 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

310 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

311 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

312 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

313 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

314 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

316 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

318 #ifde‡
__USE_MISC


319 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

320 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

327 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name \

90 : 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
)

194 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #ifde‡
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #ifde‡
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


404 
	~<bôs/dúít_ext.h
>

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

147 #i‚de‡
__USE_FILE_OFFSET64


148 
f˙é
 (
__fd
, 
__cmd
, ...);

150 #ifde‡
__REDIRECT


151 
__REDIRECT
 (
f˙é
, (
__fd
, 
__cmd
, ...), 
f˙é64
);

153 
	#f˙é
 
f˙é64


	)

156 #ifde‡
__USE_LARGEFILE64


157 
f˙é64
 (
__fd
, 
__cmd
, ...);

167 #i‚de‡
__USE_FILE_OFFSET64


168 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

170 #ifde‡
__REDIRECT


171 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

172 
	`__n⁄nuŒ
 ((1));

174 
	#›í
 
›í64


	)

177 #ifde‡
__USE_LARGEFILE64


178 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

181 #ifde‡
__USE_ATFILE


191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

193 
	`__n⁄nuŒ
 ((2));

195 #ifde‡
__REDIRECT


196 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

197 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

199 
	#›í©
 
›í©64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

204 
	`__n⁄nuŒ
 ((2));

213 #i‚de‡
__USE_FILE_OFFSET64


214 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

216 #ifde‡
__REDIRECT


217 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

218 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

220 
	#¸ót
 
¸ót64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

227 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

228 && !
deföed
 
__USE_POSIX
))

237 
	#F_ULOCK
 0

	)

238 
	#F_LOCK
 1

	)

239 
	#F_TLOCK
 2

	)

240 
	#F_TEST
 3

	)

242 #i‚de‡
__USE_FILE_OFFSET64


243 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

245 #ifde‡
__REDIRECT


246 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

248 
	#lockf
 
lockf64


	)

251 #ifde‡
__USE_LARGEFILE64


252 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

256 #ifde‡
__USE_XOPEN2K


259 #i‚de‡
__USE_FILE_OFFSET64


260 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

261 
__advi£
Ë
__THROW
;

263 #ifde‡
__REDIRECT_NTH


264 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

265 
__off64_t
 
__Àn
, 
__advi£
),

266 
posix_Ádvi£64
);

268 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

273 
__advi£
Ë
__THROW
;

281 #i‚de‡
__USE_FILE_OFFSET64


282 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

284 #ifde‡
__REDIRECT


285 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

286 
__off64_t
 
__Àn
),

287 
posix_ÁŒoˇã64
);

289 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

292 #ifde‡
__USE_LARGEFILE64


293 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

299 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

300 && 
deföed
 
__va_¨g_∑ck_Àn


301 
	~<bôs/f˙é2.h
>

304 
__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

488 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

489 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

490 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

491 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

492 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

493 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

494 
ªdú
)

	)

495 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

496 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

498 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

500 
	#_Mªt_
 

	)

501 
	#_M¨g_
 

	)

502 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

503 
	~<bôs/m©hˇŒs-«ºow.h
>

504 #unde‡
_Mªt_


505 #unde‡
_M¨g_


506 #unde‡
__MATHCALL_NAME


508 
	#_Mªt_
 

	)

509 
	#_M¨g_
 

	)

510 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

511 #ifde‡
__LDBL_COMPAT


512 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

513 #unde‡
__MATHCALL_NARROW


514 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

515 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

517 
	~<bôs/m©hˇŒs-«ºow.h
>

518 #unde‡
_Mªt_


519 #unde‡
_M¨g_


520 #unde‡
__MATHCALL_NAME


521 #ifde‡
__LDBL_COMPAT


522 #unde‡
__MATHCALL_REDIR_NAME


523 #unde‡
__MATHCALL_NARROW


524 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

525 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

528 
	#_Mªt_
 

	)

529 
	#_M¨g_
 

	)

530 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

531 #ifde‡
__LDBL_COMPAT


532 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

533 #unde‡
__MATHCALL_NARROW


534 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

535 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

537 
	~<bôs/m©hˇŒs-«ºow.h
>

538 #unde‡
_Mªt_


539 #unde‡
_M¨g_


540 #unde‡
__MATHCALL_NAME


541 #ifde‡
__LDBL_COMPAT


542 #unde‡
__MATHCALL_REDIR_NAME


543 #unde‡
__MATHCALL_NARROW


544 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

545 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

550 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

552 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


553 
	#_Mªt_
 
_Flﬂt16


	)

554 
	#_M¨g_
 
_Flﬂt32


	)

555 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

556 
	~<bôs/m©hˇŒs-«ºow.h
>

557 #unde‡
_Mªt_


558 #unde‡
_M¨g_


559 #unde‡
__MATHCALL_NAME


562 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


563 
	#_Mªt_
 
_Flﬂt16


	)

564 
	#_M¨g_
 
_Flﬂt32x


	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


572 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


573 
	#_Mªt_
 
_Flﬂt16


	)

574 
	#_M¨g_
 
_Flﬂt64


	)

575 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

576 
	~<bôs/m©hˇŒs-«ºow.h
>

577 #unde‡
_Mªt_


578 #unde‡
_M¨g_


579 #unde‡
__MATHCALL_NAME


582 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


583 
	#_Mªt_
 
_Flﬂt16


	)

584 
	#_M¨g_
 
_Flﬂt64x


	)

585 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

586 
	~<bôs/m©hˇŒs-«ºow.h
>

587 #unde‡
_Mªt_


588 #unde‡
_M¨g_


589 #unde‡
__MATHCALL_NAME


592 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


593 
	#_Mªt_
 
_Flﬂt16


	)

594 
	#_M¨g_
 
_Flﬂt128


	)

595 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

596 
	~<bôs/m©hˇŒs-«ºow.h
>

597 #unde‡
_Mªt_


598 #unde‡
_M¨g_


599 #unde‡
__MATHCALL_NAME


602 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


603 
	#_Mªt_
 
_Flﬂt16


	)

604 
	#_M¨g_
 
_Flﬂt128x


	)

605 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

606 
	~<bôs/m©hˇŒs-«ºow.h
>

607 #unde‡
_Mªt_


608 #unde‡
_M¨g_


609 #unde‡
__MATHCALL_NAME


612 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


613 
	#_Mªt_
 
_Flﬂt32


	)

614 
	#_M¨g_
 
_Flﬂt32x


	)

615 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


622 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


623 
	#_Mªt_
 
_Flﬂt32


	)

624 
	#_M¨g_
 
_Flﬂt64


	)

625 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

626 
	~<bôs/m©hˇŒs-«ºow.h
>

627 #unde‡
_Mªt_


628 #unde‡
_M¨g_


629 #unde‡
__MATHCALL_NAME


632 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


633 
	#_Mªt_
 
_Flﬂt32


	)

634 
	#_M¨g_
 
_Flﬂt64x


	)

635 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

636 
	~<bôs/m©hˇŒs-«ºow.h
>

637 #unde‡
_Mªt_


638 #unde‡
_M¨g_


639 #unde‡
__MATHCALL_NAME


642 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


643 
	#_Mªt_
 
_Flﬂt32


	)

644 
	#_M¨g_
 
_Flﬂt128


	)

645 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

646 
	~<bôs/m©hˇŒs-«ºow.h
>

647 #unde‡
_Mªt_


648 #unde‡
_M¨g_


649 #unde‡
__MATHCALL_NAME


652 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


653 
	#_Mªt_
 
_Flﬂt32


	)

654 
	#_M¨g_
 
_Flﬂt128x


	)

655 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

656 
	~<bôs/m©hˇŒs-«ºow.h
>

657 #unde‡
_Mªt_


658 #unde‡
_M¨g_


659 #unde‡
__MATHCALL_NAME


662 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


663 
	#_Mªt_
 
_Flﬂt32x


	)

664 
	#_M¨g_
 
_Flﬂt64


	)

665 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

666 
	~<bôs/m©hˇŒs-«ºow.h
>

667 #unde‡
_Mªt_


668 #unde‡
_M¨g_


669 #unde‡
__MATHCALL_NAME


672 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


673 
	#_Mªt_
 
_Flﬂt32x


	)

674 
	#_M¨g_
 
_Flﬂt64x


	)

675 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

676 
	~<bôs/m©hˇŒs-«ºow.h
>

677 #unde‡
_Mªt_


678 #unde‡
_M¨g_


679 #unde‡
__MATHCALL_NAME


682 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


683 
	#_Mªt_
 
_Flﬂt32x


	)

684 
	#_M¨g_
 
_Flﬂt128


	)

685 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

686 
	~<bôs/m©hˇŒs-«ºow.h
>

687 #unde‡
_Mªt_


688 #unde‡
_M¨g_


689 #unde‡
__MATHCALL_NAME


692 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


693 
	#_Mªt_
 
_Flﬂt32x


	)

694 
	#_M¨g_
 
_Flﬂt128x


	)

695 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

696 
	~<bôs/m©hˇŒs-«ºow.h
>

697 #unde‡
_Mªt_


698 #unde‡
_M¨g_


699 #unde‡
__MATHCALL_NAME


702 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


703 
	#_Mªt_
 
_Flﬂt64


	)

704 
	#_M¨g_
 
_Flﬂt64x


	)

705 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

706 
	~<bôs/m©hˇŒs-«ºow.h
>

707 #unde‡
_Mªt_


708 #unde‡
_M¨g_


709 #unde‡
__MATHCALL_NAME


712 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


713 
	#_Mªt_
 
_Flﬂt64


	)

714 
	#_M¨g_
 
_Flﬂt128


	)

715 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

716 
	~<bôs/m©hˇŒs-«ºow.h
>

717 #unde‡
_Mªt_


718 #unde‡
_M¨g_


719 #unde‡
__MATHCALL_NAME


722 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


723 
	#_Mªt_
 
_Flﬂt64


	)

724 
	#_M¨g_
 
_Flﬂt128x


	)

725 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

726 
	~<bôs/m©hˇŒs-«ºow.h
>

727 #unde‡
_Mªt_


728 #unde‡
_M¨g_


729 #unde‡
__MATHCALL_NAME


732 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


733 
	#_Mªt_
 
_Flﬂt64x


	)

734 
	#_M¨g_
 
_Flﬂt128


	)

735 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

736 
	~<bôs/m©hˇŒs-«ºow.h
>

737 #unde‡
_Mªt_


738 #unde‡
_M¨g_


739 #unde‡
__MATHCALL_NAME


742 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


743 
	#_Mªt_
 
_Flﬂt64x


	)

744 
	#_M¨g_
 
_Flﬂt128x


	)

745 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

746 
	~<bôs/m©hˇŒs-«ºow.h
>

747 #unde‡
_Mªt_


748 #unde‡
_M¨g_


749 #unde‡
__MATHCALL_NAME


752 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


753 
	#_Mªt_
 
_Flﬂt128


	)

754 
	#_M¨g_
 
_Flﬂt128x


	)

755 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

756 
	~<bôs/m©hˇŒs-«ºow.h
>

757 #unde‡
_Mªt_


758 #unde‡
_M¨g_


759 #unde‡
__MATHCALL_NAME


764 #unde‡
__MATHCALL_NARROW_ARGS_1


765 #unde‡
__MATHCALL_NARROW_ARGS_2


766 #unde‡
__MATHCALL_NARROW_ARGS_3


767 #unde‡
__MATHCALL_NARROW_NORMAL


768 #unde‡
__MATHCALL_NARROW_REDIR


769 #unde‡
__MATHCALL_NARROW


771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


773 
signgam
;

776 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

777 || 
__HAVE_DISTINCT_FLOAT32
 \

778 || 
__HAVE_DISTINCT_FLOAT64
 \

779 || 
__HAVE_DISTINCT_FLOAT32X
 \

780 || 
__HAVE_DISTINCT_FLOAT64X
 \

781 || 
__HAVE_DISTINCT_FLOAT128X
)

794 #ifde‡
__NO_LONG_DOUBLE_MATH


795 #i‡
__HAVE_DISTINCT_FLOAT128


798 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

799 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

800 #ñi‡
__HAVE_DISTINCT_FLOAT128


801 #i‡
__HAVE_GENERIC_SELECTION


802 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


803 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

805 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

807 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


808 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


809 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

811 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

814 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

816 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

817 
	`_Gíîic
 ((
TG_ARG
), \

818 : 
FUNC
 ## 
f
 
ARGS
, \

819 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

820 : 
FUNC
 
ARGS
, \

821 : 
FUNC
 ## 
l
 
ARGS
, \

822 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

823 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

825 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


828 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

829 
__buûtö_choo£_ex¥
 \

830 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

831 
FUNC
 ## 
f
 
ARGS
, \

832 
__buûtö_choo£_ex¥
 \

833 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

834 
FUNC
 
ARGS
, \

835 
__buûtö_choo£_ex¥
 \

836 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

837 
FUNC
 ## 
l
 
ARGS
, \

838 
FUNC
 ## 
f128
 
ARGS
)))

	)

841 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

842 ( (
TG_ARG
) ==  () \

843 ? 
FUNC
 ## 
f
 
ARGS
 \

844 :  (
TG_ARG
) ==  () \

845 ? 
FUNC
 
ARGS
 \

846 : 
FUNC
 ## 
l
 
ARGS
)

	)

850 #ifde‡
__USE_ISOC99


855 
FP_NAN
 =

856 
	#FP_NAN
 0

	)

857 
FP_NAN
,

858 
FP_INFINITE
 =

859 
	#FP_INFINITE
 1

	)

860 
FP_INFINITE
,

861 
FP_ZERO
 =

862 
	#FP_ZERO
 2

	)

863 
FP_ZERO
,

864 
FP_SUBNORMAL
 =

865 
	#FP_SUBNORMAL
 3

	)

866 
FP_SUBNORMAL
,

867 
FP_NORMAL
 =

868 
	#FP_NORMAL
 4

	)

869 
FP_NORMAL


877 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

878 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

879 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

886 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

887 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

889 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

893 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

894 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

895 #ñi‡
deföed
 
__˝lu•lus


903 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

904 #ñi‡
	`__GNUC_PREREQ
 (4,0)

905 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

907 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

911 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

912 || 
	$__glibc_˛™g_¥îeq
 (2,8)

913 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

915 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

919 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

920 || 
	$__glibc_˛™g_¥îeq
 (2,8)

921 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

923 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

928 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

929 || 
	$__glibc_˛™g_¥îeq
 (2,8)

930 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

932 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

936 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

937 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


943 
	#isöf
(
x
) \

944 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

945 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

946 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

947 || 
	$__glibc_˛™g_¥îeq
 (3,7)

948 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

950 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

954 
	#MATH_ERRNO
 1

	)

955 
	#MATH_ERREXCEPT
 2

	)

962 #ifde‡
__FAST_MATH__


963 
	#m©h_îrh™dlög
 0

	)

964 #ñi‡
deföed
 
__NO_MATH_ERRNO__


965 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

967 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

972 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

973 
	~<bôs/isˇn⁄iˇl.h
>

976 #i‚de‡
__˝lu•lus


977 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

986 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

987 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

988 
ölöe
 

989 
	`issig«lög
 (
__vÆ
)

991 #ifde‡
__NO_LONG_DOUBLE_MATH


992  
	`__issig«lög
 (
__vÆ
);

994  
	`__issig«lögl
 (
__vÆ
);

997 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1000 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1002 
	}
}

1006 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1009 #i‚de‡
__˝lu•lus


1010 #ifde‡
__SUPPORT_SNAN__


1011 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1013 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1017 #ifde‡
__SUPPORT_SNAN__


1018 
ölöe
 

1019 
iszîo
 (
__vÆ
)

1021  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1023 
ölöe
 

1024 
iszîo
 (
__vÆ
)

1026  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1028 
ölöe
 

1029 
iszîo
 (
__vÆ
)

1031 #ifde‡
__NO_LONG_DOUBLE_MATH


1032  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1034  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1037 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1040 
ölöe
 

1041 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1043  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1047 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1048 
iszîo
 (
__T
 
__vÆ
)

1050  
__vÆ
 == 0;

1057 #ifde‡
__USE_XOPEN


1059 
	#MAXFLOAT
 3.40282347e+38F

	)

1064 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1065 
	#M_E
 2.7182818284590452354

	)

1066 
	#M_LOG2E
 1.4426950408889634074

	)

1067 
	#M_LOG10E
 0.43429448190325182765

	)

1068 
	#M_LN2
 0.69314718055994530942

	)

1069 
	#M_LN10
 2.30258509299404568402

	)

1070 
	#M_PI
 3.14159265358979323846

	)

1071 
	#M_PI_2
 1.57079632679489661923

	)

1072 
	#M_PI_4
 0.78539816339744830962

	)

1073 
	#M_1_PI
 0.31830988618379067154

	)

1074 
	#M_2_PI
 0.63661977236758134308

	)

1075 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1076 
	#M_SQRT2
 1.41421356237309504880

	)

1077 
	#M_SQRT1_2
 0.70710678118654752440

	)

1083 #ifde‡
__USE_GNU


1084 
	#M_El
 2.718281828459045235360287471352662498L

	)

1085 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1086 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1087 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1088 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1089 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1090 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1091 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1092 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1093 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1094 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1095 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1096 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1099 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1100 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1101 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1102 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1103 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1104 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1105 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1106 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1107 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1108 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1109 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1110 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1111 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1112 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1115 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1116 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1117 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1118 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1119 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1120 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1121 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1122 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1123 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1124 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1125 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1126 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1127 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1128 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1131 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1132 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1133 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1134 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1135 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1136 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1137 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1138 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1139 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1140 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1141 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1142 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1143 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1144 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1147 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1148 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1149 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1150 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1151 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1152 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1153 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1154 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1155 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1156 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1157 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1158 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1159 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1160 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1163 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1164 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1165 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1166 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1167 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1168 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1169 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1170 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1171 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1172 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1173 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1174 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1175 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1176 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1179 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1180 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1181 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1182 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1183 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1184 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1185 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1186 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1187 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1188 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1189 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1190 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1191 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1192 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1195 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1202 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


1203 
	#__NO_MATH_INLINES
 1

	)

1206 #ifde‡
__USE_ISOC99


1207 #i‡
__GNUC_PREREQ
 (3, 1)

1214 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1215 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1216 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1217 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1218 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1219 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1221 
	#isgª©î
(
x
, 
y
) \

1222 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1223 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1224 
	#isgª©îequÆ
(
x
, 
y
) \

1225 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1226 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1227 
	#i¶ess
(
x
, 
y
) \

1228 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1229 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1230 
	#i¶es£quÆ
(
x
, 
y
) \

1231 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1232 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1233 
	#i¶essgª©î
(
x
, 
y
) \

1234 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1235 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1237 
	#isun‹dîed
(
x
, 
y
) \

1238 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1239 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1244 #ifde‡
__USE_EXTERN_INLINES


1245 
	~<bôs/m©hölöe.h
>

1249 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1252 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1253 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1254 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1255 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1256 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1257 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1259 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1264 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1265 
	#i£qsig
(
x
, 
y
) \

1266 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1279 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1281 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1283 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1285  
__i£qsigf
 (
__x
, 
__y
);

1289 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1291 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1293  
__i£qsig
 (
__x
, 
__y
);

1297 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1299 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1301 #i‚de‡
__NO_LONG_DOUBLE_MATH


1302  
__i£qsigl
 (
__x
, 
__y
);

1304  
__i£qsig
 (
__x
, 
__y
);

1309 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1312 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1314 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1316  
__i£qsigf128
 (
__x
, 
__y
);

1321 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1322 
ölöe
 

1323 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1325 #i‡
__˝lu•lus
 >= 201103L

1326 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1328 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1330  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1338 
__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<bôs/°döt-uöä.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	~<bôs/ty≥s/sigevít_t.h
>

37 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

40 
	~<bôs/√tdb.h
>

43 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

44 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

45 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

46 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

47 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

48 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

51 
	g__BEGIN_DECLS


53 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


56 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

59 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

63 
	#HOST_NOT_FOUND
 1

	)

64 
	#TRY_AGAIN
 2

	)

66 
	#NO_RECOVERY
 3

	)

68 
	#NO_DATA
 4

	)

71 #ifde‡
__USE_MISC


72 
	#NETDB_INTERNAL
 -1

	)

73 
	#NETDB_SUCCESS
 0

	)

74 
	#NO_ADDRESS
 
NO_DATA


	)

77 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


79 
	#IPPORT_RESERVED
 1024

	)

82 #ifde‡
__USE_GNU


84 
	#SCOPE_DELIMITER
 '%'

	)

87 #ifde‡
__USE_MISC


90 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

93 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

98 
	sho°ít


100 *
h_«me
;

101 **
h_Æü£s
;

102 
h_addπy≥
;

103 
h_Àngth
;

104 **
h_addr_li°
;

105 #ifde‡
__USE_MISC


106 
	#h_addr
 
h_addr_li°
[0]

	)

115 
	`£tho°ít
 (
__°ay_›í
);

121 
	`ídho°ít
 ();

128 
ho°ít
 *
	`gëho°ít
 ();

135 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

136 
__ty≥
);

142 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

144 #ifde‡
__USE_MISC


153 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

165 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

167 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

168 *
__ª°ri˘
 
__h_î∫›
);

170 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

171 
__ty≥
,

172 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

173 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

174 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

175 *
__ª°ri˘
 
__h_î∫›
);

177 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

178 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

179 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

180 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

181 *
__ª°ri˘
 
__h_î∫›
);

183 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

184 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

185 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

186 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

187 *
__ª°ri˘
 
__h_î∫›
);

196 
	`£äëít
 (
__°ay_›í
);

202 
	`íd√ã¡
 ();

209 
√ã¡
 *
	`gë√ã¡
 ();

216 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

222 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

224 #ifdef 
__USE_MISC


235 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

236 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

237 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

238 *
__ª°ri˘
 
__h_î∫›
);

240 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

241 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

242 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

243 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

244 *
__ª°ri˘
 
__h_î∫›
);

246 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

247 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

248 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

249 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

250 *
__ª°ri˘
 
__h_î∫›
);

255 
	s£rvít


257 *
s_«me
;

258 **
s_Æü£s
;

259 
s_p‹t
;

260 *
s_¥Ÿo
;

268 
	`£t£rvít
 (
__°ay_›í
);

274 
	`íd£rvít
 ();

281 
£rvít
 *
	`gë£rvít
 ();

288 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

295 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

298 #ifdef 
__USE_MISC


306 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

307 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

308 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

310 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

311 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

312 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

313 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

314 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

316 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

317 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

318 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

319 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

324 
	s¥Ÿ€¡


326 *
p_«me
;

327 **
p_Æü£s
;

328 
p_¥Ÿo
;

336 
	`£çrŸ€¡
 (
__°ay_›í
);

342 
	`íd¥Ÿ€¡
 ();

349 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

355 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

361 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

364 #ifdef 
__USE_MISC


372 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

373 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

374 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

376 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

377 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

378 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

379 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

381 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

382 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

383 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

384 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

393 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

401 
	`íd√tgª¡
 ();

410 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

411 **
__ª°ri˘
 
__u£Ω
,

412 **
__ª°ri˘
 
__domaöp
);

421 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

422 c⁄° *
__u£r
, c⁄° *
__domaö
);

430 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

431 **
__ª°ri˘
 
__u£Ω
,

432 **
__ª°ri˘
 
__domaöp
,

433 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

437 #ifde‡
__USE_MISC


449 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

450 c⁄° *
__ª°ri˘
 
__locu£r
,

451 c⁄° *
__ª°ri˘
 
__ªmu£r
,

452 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

461 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

462 c⁄° *
__ª°ri˘
 
__locu£r
,

463 c⁄° *
__ª°ri˘
 
__ªmu£r
,

464 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

465 
ß_Ámûy_t
 
__af
);

477 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

478 c⁄° *
__ª°ri˘
 
__«me
,

479 c⁄° *
__ª°ri˘
 
__∑ss
,

480 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

489 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

490 c⁄° *
__ª°ri˘
 
__«me
,

491 c⁄° *
__ª°ri˘
 
__∑ss
,

492 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

493 
ß_Ámûy_t
 
__af
);

503 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

504 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

513 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

514 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

515 
ß_Ámûy_t
 
__af
);

526 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

527 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

537 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

538 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

539 
ß_Ámûy_t
 
__af
);

549 
	`ºesvp‹t
 (*
__Æp‹t
);

558 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

563 #ifde‡
__USE_XOPEN2K


565 
	saddröfo


567 
ai_Êags
;

568 
ai_Ámûy
;

569 
ai_sockty≥
;

570 
ai_¥Ÿocﬁ
;

571 
sockÀn_t
 
ai_addæí
;

572 
sockaddr
 *
ai_addr
;

573 *
ai_ˇn⁄«me
;

574 
addröfo
 *
ai_√xt
;

577 #ifde‡
__USE_GNU


579 
	sgaicb


581 c⁄° *
¨_«me
;

582 c⁄° *
¨_£rvi˚
;

583 c⁄° 
addröfo
 *
¨_ªque°
;

584 
addröfo
 *
¨_ªsu…
;

586 
__ªtu∫
;

587 
__glibc_ª£rved
[5];

591 
	#GAI_WAIT
 0

	)

592 
	#GAI_NOWAIT
 1

	)

596 
	#AI_PASSIVE
 0x0001

	)

597 
	#AI_CANONNAME
 0x0002

	)

598 
	#AI_NUMERICHOST
 0x0004

	)

599 
	#AI_V4MAPPED
 0x0008

	)

600 
	#AI_ALL
 0x0010

	)

601 
	#AI_ADDRCONFIG
 0x0020

	)

603 #ifde‡
__USE_GNU


604 
	#AI_IDN
 0x0040

	)

607 
	#AI_CANONIDN
 0x0080

	)

608 
	#AI_IDN_ALLOW_UNASSIGNED
 \

609 
	`__glibc_ma¸o_w¨nög
 ("AI_IDN_ALLOW_UNASSIGNED i†dïªˇãd"Ë0x0100

	)

610 
	#AI_IDN_USE_STD3_ASCII_RULES
 \

611 
	`__glibc_ma¸o_w¨nög
 ("AI_IDN_USE_STD3_ASCII_RULES i†dïªˇãd"Ë0x0200

	)

613 
	#AI_NUMERICSERV
 0x0400

	)

616 
	#EAI_BADFLAGS
 -1

	)

617 
	#EAI_NONAME
 -2

	)

618 
	#EAI_AGAIN
 -3

	)

619 
	#EAI_FAIL
 -4

	)

620 
	#EAI_FAMILY
 -6

	)

621 
	#EAI_SOCKTYPE
 -7

	)

622 
	#EAI_SERVICE
 -8

	)

623 
	#EAI_MEMORY
 -10

	)

624 
	#EAI_SYSTEM
 -11

	)

625 
	#EAI_OVERFLOW
 -12

	)

626 #ifde‡
__USE_GNU


627 
	#EAI_NODATA
 -5

	)

628 
	#EAI_ADDRFAMILY
 -9

	)

629 
	#EAI_INPROGRESS
 -100

	)

630 
	#EAI_CANCELED
 -101

	)

631 
	#EAI_NOTCANCELED
 -102

	)

632 
	#EAI_ALLDONE
 -103

	)

633 
	#EAI_INTR
 -104

	)

634 
	#EAI_IDN_ENCODE
 -105

	)

637 #ifde‡
__USE_MISC


638 
	#NI_MAXHOST
 1025

	)

639 
	#NI_MAXSERV
 32

	)

642 
	#NI_NUMERICHOST
 1

	)

643 
	#NI_NUMERICSERV
 2

	)

644 
	#NI_NOFQDN
 4

	)

645 
	#NI_NAMEREQD
 8

	)

646 
	#NI_DGRAM
 16

	)

647 #ifde‡
__USE_GNU


648 
	#NI_IDN
 32

	)

649 
	#NI_IDN_ALLOW_UNASSIGNED
 \

650 
	`__glibc_ma¸o_w¨nög
 ("NI_IDN_ALLOW_UNASSIGNED i†dïªˇãd"Ë64

	)

651 
	#NI_IDN_USE_STD3_ASCII_RULES
 \

652 
	`__glibc_ma¸o_w¨nög
 ("NI_IDN_USE_STD3_ASCII_RULES i†dïªˇãd"Ë128

	)

660 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

661 c⁄° *
__ª°ri˘
 
__£rvi˚
,

662 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

663 
addröfo
 **
__ª°ri˘
 
__∑i
);

666 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

669 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

675 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

676 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

677 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

678 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

681 #ifde‡
__USE_GNU


690 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

691 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

701 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

702 c⁄° 
time•ec
 *
__timeout
);

705 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

708 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

711 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/°döt-uöä.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‡!
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_ALLSNOOPERS_GROUP
 ((
ö_addr_t
Ë0xe000006aË

	)

208 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

210 #i‡!
__USE_KERNEL_IPV6_DEFS


212 
	sö6_addr


216 
uöt8_t
 
	m__u6_addr8
[16];

217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

219 } 
	m__ö6_u
;

220 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

221 #ifde‡
__USE_MISC


222 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

223 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

228 c⁄° 
ö6_addr
 
ö6addr_™y
;

229 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

230 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

231 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

233 
	#INET_ADDRSTRLEN
 16

	)

234 
	#INET6_ADDRSTRLEN
 46

	)

238 
	ssockaddr_ö


240 
__SOCKADDR_COMMON
 (
sö_
);

241 
ö_p‹t_t
 
	msö_p‹t
;

242 
ö_addr
 
	msö_addr
;

245 
	msö_zîo
[ (
sockaddr
)

246 - 
__SOCKADDR_COMMON_SIZE


247 -  (
ö_p‹t_t
)

248 -  (
ö_addr
)];

251 #i‡!
__USE_KERNEL_IPV6_DEFS


253 
	ssockaddr_ö6


255 
__SOCKADDR_COMMON
 (
sö6_
);

256 
ö_p‹t_t
 
	msö6_p‹t
;

257 
uöt32_t
 
	msö6_Êowöfo
;

258 
ö6_addr
 
	msö6_addr
;

259 
uöt32_t
 
	msö6_sc›e_id
;

263 #ifde‡
__USE_MISC


265 
	sù_mªq


268 
ö_addr
 
	mimr_mu…üddr
;

271 
ö_addr
 
	mimr_öãrÁ˚
;

274 
	sù_mªq_sour˚


277 
ö_addr
 
	mimr_mu…üddr
;

280 
ö_addr
 
	mimr_öãrÁ˚
;

283 
ö_addr
 
	mimr_sour˚addr
;

287 #i‡!
__USE_KERNEL_IPV6_DEFS


289 
	sùv6_mªq


292 
ö6_addr
 
	mùv6mr_mu…üddr
;

295 
	mùv6mr_öãrÁ˚
;

299 #ifde‡
__USE_MISC


301 
	sgroup_ªq


304 
uöt32_t
 
	mgr_öãrÁ˚
;

307 
sockaddr_°‹age
 
	mgr_group
;

310 
	sgroup_sour˚_ªq


313 
uöt32_t
 
	mg§_öãrÁ˚
;

316 
sockaddr_°‹age
 
	mg§_group
;

319 
sockaddr_°‹age
 
	mg§_sour˚
;

324 
	sù_msfûãr


327 
ö_addr
 
	mimsf_mu…üddr
;

330 
ö_addr
 
	mimsf_öãrÁ˚
;

333 
uöt32_t
 
	mimsf_fmode
;

336 
uöt32_t
 
	mimsf_num§c
;

338 
ö_addr
 
	mimsf_¶i°
[1];

341 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

342 -  (
ö_addr
) \

343 + (
num§c
Ë*  (
ö_addr
))

	)

345 
	sgroup_fûãr


348 
uöt32_t
 
	mgf_öãrÁ˚
;

351 
sockaddr_°‹age
 
	mgf_group
;

354 
uöt32_t
 
	mgf_fmode
;

357 
uöt32_t
 
	mgf_num§c
;

359 
sockaddr_°‹age
 
	mgf_¶i°
[1];

362 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

363 -  (
sockaddr_°‹age
) \

364 + ((
num§c
) \

365 *  (
sockaddr_°‹age
)))

	)

375 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

376 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

377 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

378 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

379 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

380 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

381 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

383 
	~<ídün.h
>

386 
	~<bôs/byãsw≠.h
>

387 
	~<bôs/uöä-idítôy.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

397 
	#¡ohs
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

398 
	#ht⁄l
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

399 
	#ht⁄s
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

415 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

416 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

417 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

423 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

424 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

425 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

441 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

442 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

448 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

449 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
__ö6_u
.
__u6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
__ö6_u
.
__u6_addr32
[0] =
__b
->__in6_u.__u6_addr32[0] \

457 && 
__a
->
__ö6_u
.
__u6_addr32
[1] =
__b
->__in6_u.__u6_addr32[1] \

458 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
__b
->__in6_u.__u6_addr32[2] \

459 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
__b
->__ö6_u.__u6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‡!
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/printf.h

18 #i‚def 
_PRINTF_H


20 
	#_PRINTF_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


25 
	~<bôs/ty≥s/FILE.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_wch¨_t


	)

29 
	~<°ddef.h
>

31 
	~<°d¨g.h
>

34 
	s¥ötf_öfo


36 
	m¥ec
;

37 
	mwidth
;

38 
wch¨_t
 
	m•ec
;

39 
	mis_l⁄g_doubÀ
:1;

40 
	mis_sh‹t
:1;

41 
	mis_l⁄g
:1;

42 
	mÆt
:1;

43 
	m•a˚
:1;

44 
	mÀ·
:1;

45 
	mshowsign
:1;

46 
	mgroup
:1;

47 
	mexåa
:1;

48 
	mis_ch¨
:1;

49 
	mwide
:1;

50 
	mi18n
:1;

51 
	mis_bö¨y128
:1;

53 
	m__∑d
:3;

54 
	mu£r
;

55 
wch¨_t
 
	m∑d
;

69 
	t¥ötf_fun˘i⁄
 (
	tFILE
 *
	t__°ªam
,

70 c⁄° 
	t¥ötf_öfo
 *
	t__öfo
,

71 c⁄° *c⁄° *
	t__¨gs
);

81 
	t¥ötf_¨göfo_size_fun˘i⁄
 (c⁄° 
	t¥ötf_öfo
 *
	t__öfo
,

82 
	tsize_t
 
	t__n
, *
	t__¨gty≥s
,

83 *
	t__size
);

87 
	t¥ötf_¨göfo_fun˘i⁄
 (c⁄° 
	t¥ötf_öfo
 *
	t__öfo
,

88 
	tsize_t
 
	t__n
, *
	t__¨gty≥s
);

92 
	t¥ötf_va_¨g_fun˘i⁄
 (*
	t__mem
, 
	tva_li°
 *
	t__≠
);

99 
	$ªgi°î_¥ötf_•ecifõr
 (
__•ec
, 
¥ötf_fun˘i⁄
 
__func
,

100 
¥ötf_¨göfo_size_fun˘i⁄
 
__¨göfo
)

101 
__THROW
;

108 
	$ªgi°î_¥ötf_fun˘i⁄
 (
__•ec
, 
¥ötf_fun˘i⁄
 
__func
,

109 
¥ötf_¨göfo_fun˘i⁄
 
__¨göfo
)

110 
__THROW
 
__©åibuã_dïªˇãd__
;

117 
	$ªgi°î_¥ötf_modifõr
 (c⁄° 
wch¨_t
 *
__°r
Ë
__THROW
 
__wur
;

123 
	$ªgi°î_¥ötf_ty≥
 (
¥ötf_va_¨g_fun˘i⁄
 
__f˘
Ë
__THROW
 
__wur
;

137 
size_t
 
	$∑r£_¥ötf_f‹m©
 (c⁄° *
__ª°ri˘
 
__fmt
, 
size_t
 
__n
,

138 *
__ª°ri˘
 
__¨gty≥s
Ë
__THROW
;

149 
PA_INT
,

150 
PA_CHAR
,

151 
PA_WCHAR
,

152 
PA_STRING
,

153 
PA_WSTRING
,

154 
PA_POINTER
,

155 
PA_FLOAT
,

156 
PA_DOUBLE
,

157 
PA_LAST


161 
	#PA_FLAG_MASK
 0xff00

	)

162 
	#PA_FLAG_LONG_LONG
 (1 << 8)

	)

163 
	#PA_FLAG_LONG_DOUBLE
 
PA_FLAG_LONG_LONG


	)

164 
	#PA_FLAG_LONG
 (1 << 9)

	)

165 
	#PA_FLAG_SHORT
 (1 << 10)

	)

166 
	#PA_FLAG_PTR
 (1 << 11)

	)

176 
	$¥ötf_size
 (
FILE
 *
__ª°ri˘
 
__Â
,

177 c⁄° 
¥ötf_öfo
 *
__öfo
,

178 c⁄° *c⁄° *
__ª°ri˘
 
__¨gs
Ë
__THROW
;

181 
	$¥ötf_size_öfo
 (c⁄° 
¥ötf_öfo
 *
__ª°ri˘


182 
__öfo
, 
size_t
 
__n
, *
__ª°ri˘
 
__¨gty≥s
)

183 
__THROW
;

185 #ifde‡
__LDBL_COMPAT


186 
	~<bôs/¥ötf-ldbl.h
>

189 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sched.h
>

23 
	~<time.h
>

25 
	~<bôs/ídün.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

29 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

35 
	mPTHREAD_CREATE_JOINABLE
,

36 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

37 
	mPTHREAD_CREATE_DETACHED


38 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

45 
	mPTHREAD_MUTEX_TIMED_NP
,

46 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

47 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

48 
	mPTHREAD_MUTEX_ADAPTIVE_NP


49 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


51 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

52 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

53 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

54 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


56 #ifde‡
__USE_GNU


58 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


63 #ifde‡
__USE_XOPEN2K


67 
	mPTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_ROBUST
,

70 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


75 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


79 
	mPTHREAD_PRIO_NONE
,

80 
	mPTHREAD_PRIO_INHERIT
,

81 
	mPTHREAD_PRIO_PROTECT


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_TIMED_NP
Ë} }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_RECURSIVE_NP
Ë} }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ERRORCHECK_NP
Ë} }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ADAPTIVE_NP
Ë} }

	)

99 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


102 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

103 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

104 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

105 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


110 
	#PTHREAD_RWLOCK_INITIALIZER
 \

111 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_DEFAULT_NP
Ë} }

	)

112 #ifde‡
__USE_GNU


113 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

114 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
Ë} }

	)

122 
	mPTHREAD_INHERIT_SCHED
,

123 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

124 
	mPTHREAD_EXPLICIT_SCHED


125 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

132 
	mPTHREAD_SCOPE_SYSTEM
,

133 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

134 
	mPTHREAD_SCOPE_PROCESS


135 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

142 
	mPTHREAD_PROCESS_PRIVATE
,

143 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

144 
	mPTHREAD_PROCESS_SHARED


145 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

151 
	#PTHREAD_COND_INITIALIZER
 { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }

	)

155 
	s_±hªad_˛ónup_buf„r


157 (*
	m__routöe
) (*);

158 *
	m__¨g
;

159 
	m__ˇn˚…y≥
;

160 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

166 
	mPTHREAD_CANCEL_ENABLE
,

167 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

168 
	mPTHREAD_CANCEL_DISABLE


169 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

173 
	mPTHREAD_CANCEL_DEFERRED
,

174 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

175 
	mPTHREAD_CANCEL_ASYNCHRONOUS


176 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

178 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

182 
	#PTHREAD_ONCE_INIT
 0

	)

185 #ifde‡
__USE_XOPEN2K


189 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

193 
__BEGIN_DECLS


198 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

199 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

200 *(*
__°¨t_routöe
) (*),

201 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

207 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

215 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

217 #ifde‡
__USE_GNU


220 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

228 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

229 c⁄° 
time•ec
 *
__ab°ime
);

238 
	`±hªad_˛ockjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

239 
˛ockid_t
 
__˛ockid
,

240 c⁄° 
time•ec
 *
__ab°ime
);

247 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

251 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

254 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

255 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

263 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

266 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

271 *
__dëach°©e
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

275 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

276 
__dëach°©e
)

277 
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

282 
size_t
 *
__gu¨dsize
)

283 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

287 
size_t
 
__gu¨dsize
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

293 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

297 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

298 c⁄° 
sched_∑øm
 *
__ª°ri˘


299 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


303 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

304 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

307 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

308 
__THROW
 
	`__n⁄nuŒ
 ((1));

311 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


312 
__©å
, *
__ª°ri˘
 
__öhîô
)

313 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

316 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

317 
__öhîô
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1));

322 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

323 *
__ª°ri˘
 
__sc›e
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

327 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1));

331 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


332 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

339 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

340 *
__°ackaddr
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

344 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


345 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

352 
size_t
 
__°acksize
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_XOPEN2K


357 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 **
__ª°ri˘
 
__°ackaddr
,

359 
size_t
 *
__ª°ri˘
 
__°acksize
)

360 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

365 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

366 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

369 #ifde‡
__USE_GNU


372 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

373 
size_t
 
__˝u£tsize
,

374 c⁄° 
˝u_£t_t
 *
__˝u£t
)

375 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

379 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

380 
size_t
 
__˝u£tsize
,

381 
˝u_£t_t
 *
__˝u£t
)

382 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

385 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1));

396 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

397 
__THROW
 
	`__n⁄nuŒ
 ((2));

405 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

406 c⁄° 
sched_∑øm
 *
__∑øm
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3));

410 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

411 *
__ª°ri˘
 
__pﬁicy
,

412 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

413 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

416 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

417 
__THROW
;

420 #ifde‡
__USE_GNU


422 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

423 
size_t
 
__buÊí
)

424 
__THROW
 
	`__n⁄nuŒ
 ((2));

427 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

432 #ifde‡
__USE_UNIX98


434 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

437 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

440 #ifde‡
__USE_GNU


445 
	$±hªad_yõld
 (Ë
__THROW
;

450 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

451 c⁄° 
˝u_£t_t
 *
__˝u£t
)

452 
__THROW
 
	`__n⁄nuŒ
 ((3));

455 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

456 
˝u_£t_t
 *
__˝u£t
)

457 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

471 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

482 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

486 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

489 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

494 
	`±hªad_ã°ˇn˚l
 ();

503 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

504 
__mask_was_ßved
;

505 } 
__ˇn˚l_jmp_buf
[1];

506 *
__∑d
[4];

507 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

510 #i‚de‡
__˛ónup_f˘_©åibuã


511 
	#__˛ónup_f˘_©åibuã


	)

516 
	s__±hªad_˛ónup_‰ame


518 (*
__ˇn˚l_routöe
) (*);

519 *
__ˇn˚l_¨g
;

520 
__do_ô
;

521 
__ˇn˚l_ty≥
;

524 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


525 #ifde‡
__˝lu•lus


527 ˛as†
	c__±hªad_˛ónup_˛ass


529 (*
__ˇn˚l_routöe
) (*);

530 *
__ˇn˚l_¨g
;

531 
__do_ô
;

532 
__ˇn˚l_ty≥
;

534 
public
:

535 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

536 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

537 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

538 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

539 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

540 &
__ˇn˚l_ty≥
); 
	}
}

541 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

551 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

553 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

557 
	#±hªad_˛ónup_p›
(
execuã
) \

558 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

559 } 0)

	)

561 #ifde‡
__USE_GNU


565 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

567 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

568 
__˛‰ame
.
	`__de„r
 ()

	)

573 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

574 
__˛‰ame
.
	`__ª°‹e
 (); \

575 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

576 } 0)

	)

583 
__exã∫_ölöe
 

584 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

586 i‡(
__‰ame
->
__do_ô
)

587 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

588 
	}
}

597 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

599 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

600 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

601 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

602 .
__do_ô
 = 1 };

	)

606 
	#±hªad_˛ónup_p›
(
execuã
) \

607 
__˛‰ame
.
__do_ô
 = (
execuã
); \

608 } 0)

	)

610 #ifde‡
__USE_GNU


614 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

616 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

617 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

618 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

619 .
__do_ô
 = 1 }; \

620 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

621 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

626 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

627 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

628 
__˛‰ame
.
__do_ô
 = (
execuã
); \

629 } 0)

	)

640 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

642 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

643 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

644 *
__ˇn˚l_¨g
 = (
¨g
); \

645 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

646 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

647 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

649 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

650 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

654 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

655 dÿ{

	)

656 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

657 
__˛ónup_f˘_©åibuã
;

661 
	#±hªad_˛ónup_p›
(
execuã
) \

664 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

665 i‡(
execuã
) \

666 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

667 } 0)

	)

668 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

669 
__˛ónup_f˘_©åibuã
;

671 #ifde‡
__USE_GNU


675 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

697 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

700 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

701 i‡(
execuã
) \

702 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

703 
	}
} 0)

	)

704 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

705 
__˛ónup_f˘_©åibuã
;

709 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

710 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

711 #i‚de‡
SHARED


712 
	`__©åibuã__
 ((
__wók__
))

718 
__jmp_buf_èg
;

719 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

725 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

726 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

727 
__THROW
 
	`__n⁄nuŒ
 ((1));

730 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

731 
__THROW
 
	`__n⁄nuŒ
 ((1));

734 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

735 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

741 #ifde‡
__USE_XOPEN2K


743 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

744 c⁄° 
time•ec
 *
__ª°ri˘


745 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

748 #ifde‡
__USE_GNU


749 
	$±hªad_muãx_˛ocklock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

750 
˛ockid_t
 
__˛ockid
,

751 c⁄° 
time•ec
 *
__ª°ri˘


752 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

756 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

757 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

761 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

762 
__ª°ri˘
 
__muãx
,

763 *
__ª°ri˘
 
__¥io˚ûög
)

764 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

768 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

769 
__¥io˚ûög
,

770 *
__ª°ri˘
 
__ﬁd_˚ûög
)

771 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

774 #ifde‡
__USE_XOPEN2K8


776 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1));

778 #ifde‡
__USE_GNU


779 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

780 
__THROW
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1));

793 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

798 
__ª°ri˘
 
__©å
,

799 *
__ª°ri˘
 
__psh¨ed
)

800 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

803 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

804 
__psh¨ed
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

807 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


809 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


810 
__©å
, *
__ª°ri˘
 
__köd
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

816 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

822 
__ª°ri˘
 
__©å
,

823 *
__ª°ri˘
 
__¥Ÿocﬁ
)

824 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

828 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

829 
__¥Ÿocﬁ
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1));

833 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

834 
__ª°ri˘
 
__©å
,

835 *
__ª°ri˘
 
__¥io˚ûög
)

836 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

839 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

840 
__¥io˚ûög
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1));

843 #ifde‡
__USE_XOPEN2K


845 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

846 *
__robu°√ss
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 #ifde‡
__USE_GNU


849 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

850 *
__robu°√ss
)

851 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

855 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

856 
__robu°√ss
)

857 
__THROW
 
	`__n⁄nuŒ
 ((1));

858 #ifde‡
__USE_GNU


859 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

860 
__robu°√ss
)

861 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


871 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

872 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


873 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

876 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

877 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

881 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

887 #ifde‡
__USE_XOPEN2K


889 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

890 c⁄° 
time•ec
 *
__ª°ri˘


891 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

894 #ifde‡
__USE_GNU


895 
	$±hªad_rwlock_˛ockrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

896 
˛ockid_t
 
__˛ockid
,

897 c⁄° 
time•ec
 *
__ª°ri˘


898 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

902 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

903 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

906 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

907 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

909 #ifde‡
__USE_XOPEN2K


911 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

912 c⁄° 
time•ec
 *
__ª°ri˘


913 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

916 #ifde‡
__USE_GNU


917 
	$±hªad_rwlock_˛ockwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 
˛ockid_t
 
__˛ockid
,

919 c⁄° 
time•ec
 *
__ª°ri˘


920 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

924 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

925 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

931 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

939 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

940 
__ª°ri˘
 
__©å
,

941 *
__ª°ri˘
 
__psh¨ed
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

945 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

946 
__psh¨ed
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1));

950 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

951 
__ª°ri˘
 
__©å
,

952 *
__ª°ri˘
 
__¥ef
)

953 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

956 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

957 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

971 
__THROW
 
	`__n⁄nuŒ
 ((1));

974 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

975 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

978 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

979 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

986 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

987 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

988 
	`__n⁄nuŒ
 ((1, 2));

997 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

998 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

999 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1000 
	`__n⁄nuŒ
 ((1, 2, 3));

1002 #ifde‡
__USE_GNU


1010 
	$±hªad_c⁄d_˛ockwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1011 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1012 
__˛ockid_t
 
__˛ock_id
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 4));

1020 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1029 
__ª°ri˘
 
__©å
,

1030 *
__ª°ri˘
 
__psh¨ed
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1034 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1035 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1037 #ifde‡
__USE_XOPEN2K


1039 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1040 
__ª°ri˘
 
__©å
,

1041 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1042 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1045 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1046 
__˛ockid_t
 
__˛ock_id
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1051 #ifde‡
__USE_XOPEN2K


1056 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1057 
__THROW
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROW
 
	`__n⁄nuŒ
 ((1));

1064 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1065 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1069 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1072 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1073 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1080 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1081 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1082 
__©å
, 
__cou¡
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1086 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1087 
__THROW
 
	`__n⁄nuŒ
 ((1));

1090 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1091 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1095 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1096 
__THROW
 
	`__n⁄nuŒ
 ((1));

1099 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1100 
__THROW
 
	`__n⁄nuŒ
 ((1));

1103 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1104 
__ª°ri˘
 
__©å
,

1105 *
__ª°ri˘
 
__psh¨ed
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1109 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1110 
__psh¨ed
)

1111 
__THROW
 
	`__n⁄nuŒ
 ((1));

1123 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1124 (*
__de°r_fun˘i⁄
) (*))

1125 
__THROW
 
	`__n⁄nuŒ
 ((1));

1128 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1131 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1134 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1135 c⁄° *
__poöãr
Ë
__THROW
 ;

1138 #ifde‡
__USE_XOPEN2K


1140 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1141 
__˛ockid_t
 *
__˛ock_id
)

1142 
__THROW
 
	`__n⁄nuŒ
 ((2));

1157 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1158 (*
__∑ª¡
) (),

1159 (*
__chûd
Ë()Ë
__THROW
;

1162 #ifde‡
__USE_EXTERN_INLINES


1164 
__exã∫_ölöe
 

1165 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1167  
__thªad1
 =
__thªad2
;

1168 
	}
}

1171 
	g__END_DECLS


	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/ty≥s/__sig£t_t.h
>

33 
	s__jmp_buf_èg


39 
__jmp_buf
 
	m__jmpbuf
;

40 
	m__mask_was_ßved
;

41 
__sig£t_t
 
	m__ßved_mask
;

45 
__jmp_buf_èg
 
	tjmp_buf
[1];

49 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

58 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

62 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

67 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

68 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

70 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


74 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

75 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

79 #ifdef 
__USE_POSIX


83 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

87 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

93 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

94 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

99 #i‡
__USE_FORTIFY_LEVEL
 > 0

100 
	~<bôs/£tjmp2.h
>

103 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


23 
	#_SIGNAL_H


	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 
	~<bôs/signum.h
>

32 
	~<bôs/ty≥s/sig_©omic_t.h
>

34 #i‡
deföed
 
__USE_POSIX


35 
	~<bôs/ty≥s/sig£t_t.h
>

38 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


39 #i‚de‡
__pid_t_deföed


40 
__pid_t
 
	tpid_t
;

41 
	#__pid_t_deföed


	)

43 #ifde‡
__USE_XOPEN


45 #i‚de‡
__uid_t_deföed


46 
__uid_t
 
	tuid_t
;

47 
	#__uid_t_deföed


	)

51 #ifde‡
__USE_POSIX199309


53 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

56 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


57 
	~<bôs/ty≥s/sigöfo_t.h
>

58 
	~<bôs/sigöfo-c⁄°s.h
>

61 #ifde‡
__USE_MISC


62 
	~<bôs/ty≥s/sigvÆ_t.h
>

65 #ifde‡
__USE_POSIX199309


66 
	~<bôs/ty≥s/sigevít_t.h
>

67 
	~<bôs/sigevít-c⁄°s.h
>

72 (*
	t__sigh™dÀr_t
) ();

77 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

78 
__THROW
;

79 #ifde‡
__USE_GNU


80 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

87 #ifde‡
__USE_MISC


88 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

89 
__THROW
;

92 #ifde‡
__REDIRECT_NTH


93 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

94 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

95 
__sysv_sig«l
);

97 
	#sig«l
 
__sysv_sig«l


	)

101 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


104 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

105 
__THROW
;

111 #ifde‡
__USE_POSIX


112 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

115 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


119 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

123 
	$øi£
 (
__sig
Ë
__THROW
;

125 #ifde‡
__USE_MISC


127 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

128 
__THROW
;

129 
	$gsig«l
 (
__sig
Ë
__THROW
;

132 #ifde‡
__USE_XOPEN2K8


134 
	`psig«l
 (
__sig
, c⁄° *
__s
);

137 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

149 #ifde‡
__USE_XOPEN_EXTENDED


150 #ifde‡
__GNUC__


151 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

160 #ifde‡
__USE_MISC


167 
	#sigmask
(
sig
Ë(()(1u << ((sigË- 1)))

	)

170 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

173 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

180 #ifde‡
__USE_MISC


181 
	#NSIG
 
_NSIG


	)

184 #ifde‡
__USE_GNU


185 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

189 #ifde‡
__USE_MISC


190 
__sigh™dÀr_t
 
	tsig_t
;

193 #ifde‡
__USE_POSIX


196 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

202 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

208 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

209 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__USE_GNU


213 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

217 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

220 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

221 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

226 
	~<bôs/siga˘i⁄.h
>

229 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

230 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

237 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

240 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

241 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

244 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__USE_POSIX199506


252 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

253 
	`__n⁄nuŒ
 ((1, 2));

256 #ifde‡
__USE_POSIX199309


261 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

262 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

269 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

270 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

271 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

272 
	`__n⁄nuŒ
 ((1));

276 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

277 
__THROW
;

282 #ifde‡
__USE_MISC


286 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

287 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

291 
	~<bôs/sigc⁄ãxt.h
>

294 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

299 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


300 
	#__√ed_size_t


	)

301 
	~<°ddef.h
>

303 
	~<bôs/ty≥s/°ack_t.h
>

304 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


306 
	~<sys/uc⁄ãxt.h
>

310 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


314 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

316 
	~<bôs/sig°ack.h
>

317 
	~<bôs/ss_Êags.h
>

321 
	$sigÆt°ack
 (c⁄° 
°ack_t
 *
__ª°ri˘
 
__ss
,

322 
°ack_t
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

325 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

326 || 
deföed
 
__USE_MISC
)

327 
	~<bôs/ty≥s/°ru˘_sig°ack.h
>

330 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

331 || 
deföed
 
__USE_MISC
)

335 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

336 
__THROW
 
__©åibuã_dïªˇãd__
;

339 #ifde‡
__USE_XOPEN_EXTENDED


343 
	$sighﬁd
 (
__sig
Ë
__THROW
;

346 
	$sigªl£
 (
__sig
Ë
__THROW
;

349 
	$sigign‹e
 (
__sig
Ë
__THROW
;

352 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

355 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


358 
	~<bôs/±hªadty≥s.h
>

359 
	~<bôs/sigthªad.h
>

366 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

368 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

370 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

371 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

374 
	~<bôs/sig«l_ext.h
>

376 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

405 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT


406 #ifde‡
__REDIRECT


407 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

409 
__isoc99_fsˇnf
Ë
__wur
;

410 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_sˇnf
Ë
__wur
;

412 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

413 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_ssˇnf
);

416 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

417 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

418 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

419 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

421 
	#fsˇnf
 
__isoc99_fsˇnf


	)

422 
	#sˇnf
 
__isoc99_sˇnf


	)

423 
	#ssˇnf
 
__isoc99_ssˇnf


	)

427 #ifdef 
__USE_ISOC99


432 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

433 
__gnuc_va_li°
 
__¨g
)

434 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

440 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

441 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

444 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

446 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

449 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

450 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT


451 
	`__REDIRECT
 (
vfsˇnf
,

452 (
FILE
 *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

454 
__isoc99_vfsˇnf
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

456 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

457 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

459 
	`__REDIRECT_NTH
 (
vssˇnf
,

460 (c⁄° *
__ª°ri˘
 
__s
,

461 c⁄° *
__ª°ri˘
 
__f‹m©
,

462 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

463 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

464 #ñi‡!
deföed
 
__REDIRECT


465 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

466 c⁄° *
__ª°ri˘
 
__f‹m©
,

467 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

468 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

469 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

470 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

471 c⁄° *
__ª°ri˘
 
__f‹m©
,

472 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

473 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

474 
	#vsˇnf
 
__isoc99_vsˇnf


	)

475 
	#vssˇnf
 
__isoc99_vssˇnf


	)

485 
	`fgëc
 (
FILE
 *
__°ªam
);

486 
	`gëc
 (
FILE
 *
__°ªam
);

492 
	`gëch¨
 ();

494 #ifde‡
__USE_POSIX199506


499 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

500 
	`gëch¨_u∆ocked
 ();

503 #ifde‡
__USE_MISC


510 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

521 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

522 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putch¨
 (
__c
);

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
__gnuc_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 
	`__uÊow
 (
FILE
 *);

859 
	`__ovîÊow
 (
FILE
 *, );

863 #ifde‡
__USE_EXTERN_INLINES


864 
	~<bôs/°dio.h
>

866 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


867 
	~<bôs/°dio2.h
>

869 #ifde‡
__LDBL_COMPAT


870 
	~<bôs/°dio-ldbl.h
>

873 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


540 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

542 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

543 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

550 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

551 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

553 #ifde‡
__USE_MISC


559 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

560 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


561 
	`__©åibuã_Æloc_size__
 ((2, 3));

565 
	$‰ì
 (*
__±r
Ë
__THROW
;

567 #ifde‡
__USE_MISC


568 
	~<Æloˇ.h
>

571 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

572 || 
deföed
 
__USE_MISC


574 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


575 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

578 #ifde‡
__USE_XOPEN2K


580 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

584 #ifde‡
__USE_ISOC11


586 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

591 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

595 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

597 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


599 #ifde‡
__˝lu•lus


600 "C++" 
	$©_quick_exô
 ((*
__func
) ())

601 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

603 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

607 #ifdef 
__USE_MISC


610 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

611 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

619 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


623 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #ifde‡
__USE_ISOC99


629 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

634 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_GNU


639 *
	$£cuª_gëív
 (c⁄° *
__«me
)

640 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


647 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

650 #ifde‡
__USE_XOPEN2K


653 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

654 
__THROW
 
	`__n⁄nuŒ
 ((2));

657 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

660 #ifdef 
__USE_MISC


664 
	$˛óªnv
 (Ë
__THROW
;

668 #i‡
deföed
 
__USE_MISC
 \

669 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

675 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

678 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


687 #i‚de‡
__USE_FILE_OFFSET64


688 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

690 #ifde‡
__REDIRECT


691 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

692 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

694 
	#mk°emp
 
mk°emp64


	)

697 #ifde‡
__USE_LARGEFILE64


698 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 #ifde‡
__USE_MISC


709 #i‚de‡
__USE_FILE_OFFSET64


710 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

714 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

716 
	#mk°emps
 
mk°emps64


	)

719 #ifde‡
__USE_LARGEFILE64


720 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

721 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

725 #ifde‡
__USE_XOPEN2K8


731 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

734 #ifde‡
__USE_GNU


741 #i‚de‡
__USE_FILE_OFFSET64


742 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

746 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

748 
	#mko°emp
 
mko°emp64


	)

751 #ifde‡
__USE_LARGEFILE64


752 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

763 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

765 #ifde‡
__REDIRECT


766 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

767 
__Êags
), 
mko°emps64
)

768 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

770 
	#mko°emps
 
mko°emps64


	)

773 #ifde‡
__USE_LARGEFILE64


774 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

784 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

787 #ifdef 
__USE_GNU


790 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

794 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


800 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

801 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

806 #i‚de‡
__COMPAR_FN_T


807 
	#__COMPAR_FN_T


	)

808 (*
	t__com∑r_‚_t
) (const *, const *);

810 #ifdef 
__USE_GNU


811 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

814 #ifde‡
__USE_GNU


815 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

820 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

821 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

822 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

824 #ifde‡
__USE_EXTERN_INLINES


825 
	~<bôs/°dlib-b£¨ch.h
>

830 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

832 #ifde‡
__USE_GNU


833 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

834 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

835 
	`__n⁄nuŒ
 ((1, 4));

840 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

841 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

843 #ifde‡
__USE_ISOC99


844 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

845 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

852 
div_t
 
	$div
 (
__numî
, 
__díom
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

855 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

857 #ifde‡
__USE_ISOC99


858 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

859 
__díom
)

860 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

865 || 
deföed
 
__USE_MISC


872 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

873 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

878 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

879 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

884 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

885 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

888 #ifde‡
__USE_MISC


890 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

894 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

895 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

896 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

897 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

902 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

905 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

906 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

907 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

909 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

910 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

911 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

914 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

915 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

922 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

925 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

926 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

929 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

933 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

936 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

937 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

938 
__THROW
;

941 #ifde‡
__USE_MISC


946 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


957 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

958 *c⁄° *
__ª°ri˘
 
__tokís
,

959 **
__ª°ri˘
 
__vÆuï
)

960 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

966 #ifde‡
__USE_XOPEN2KXSI


968 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

971 #ifde‡
__USE_XOPEN_EXTENDED


976 
	$gø¡±
 (
__fd
Ë
__THROW
;

980 
	$u∆ock±
 (
__fd
Ë
__THROW
;

985 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

988 #ifde‡
__USE_GNU


992 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

993 
__THROW
 
	`__n⁄nuŒ
 ((2));

996 
	`gë±
 ();

999 #ifde‡
__USE_MISC


1003 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1010 
	$ây¶Ÿ
 (Ë
__THROW
;

1013 
	~<bôs/°dlib-Êﬂt.h
>

1016 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1017 
	~<bôs/°dlib.h
>

1019 #ifde‡
__LDBL_COMPAT


1020 
	~<bôs/°dlib-ldbl.h
>

1023 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

68 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


71 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__OPTIMIZE__


77 
__exã∫_Æways_ölöe
 *

78 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


80  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

83 
__exã∫_Æways_ölöe
 const *

84 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


86  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

89 
	}
}

91 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

92 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 #ifde‡
__USE_GNU


98 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


99 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

100 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


110 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

111 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

112 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

122 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

125 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

126 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

138 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

148 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
 
	`__n⁄nuŒ
 ((2));

151 #ifde‡
__USE_XOPEN2K8


153 
	~<bôs/ty≥s/loˇÀ_t.h
>

156 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

160 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

161 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

164 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

165 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

167 *
	$°rdup
 (c⁄° *
__s
)

168 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

174 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

175 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


181 
	#°rdu∑
(
s
) \

182 (
__exãnsi⁄__
 \

184 c⁄° *
__ﬁd
 = (
s
); \

185 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

186 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

187 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

188 
	}
}))

	)

191 
	#°∫du∑
(
s
, 
n
) \

192 (
__exãnsi⁄__
 \

194 c⁄° *
__ﬁd
 = (
s
); \

195 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

196 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

197 
__√w
[
__Àn
] = '\0'; \

198 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

199 }))

	)

203 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


206 *
°rchr
 (*
__s
, 
__c
)

207 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

208 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

209 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

211 #ifde‡
__OPTIMIZE__


212 
__exã∫_Æways_ölöe
 *

213 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


215  
__buûtö_°rchr
 (
__s
, 
__c
);

218 
__exã∫_Æways_ölöe
 const *

219 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

226 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


233 *
	`°ºchr
 (*
__s
, 
__c
)

234 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__OPTIMIZE__


239 
__exã∫_Æways_ölöe
 *

240 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


242  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

245 
__exã∫_Æways_ölöe
 const *

246 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
	}
}

253 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

254 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

257 #ifde‡
__USE_GNU


260 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


261 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

262 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

267 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

277 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


283 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

284 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__OPTIMIZE__


289 
__exã∫_Æways_ölöe
 *

290 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


292  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

295 
__exã∫_Æways_ölöe
 const *

296 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


298  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

301 
	}
}

303 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


310 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

311 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

312 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

313 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__OPTIMIZE__


316 
__exã∫_Æways_ölöe
 *

317 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


319  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

322 
__exã∫_Æways_ölöe
 const *

323 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


325  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

328 
	}
}

330 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

337 
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

342 c⁄° *
__ª°ri˘
 
__dñim
,

343 **
__ª°ri˘
 
__ßve_±r
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

345 #ifde‡
__USE_POSIX


346 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

347 **
__ª°ri˘
 
__ßve_±r
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

351 #ifde‡
__USE_GNU


353 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


354 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

355 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

357 c⁄° *
__√edÀ
)

358 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

360 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

361 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 #ifde‡
__USE_GNU


369 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

370 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

371 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

375 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

376 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

379 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

385 
size_t
 
	$°æí
 (c⁄° *
__s
)

386 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

388 #ifdef 
__USE_XOPEN2K8


391 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

392 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

398 #ifde‡
__USE_XOPEN2K


406 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

411 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

412 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

414 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

415 
__THROW
 
	`__n⁄nuŒ
 ((2));

416 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

421 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

426 #ifde‡
__USE_XOPEN2K8


428 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

431 #ifde‡
__USE_MISC


432 
	~<°rögs.h
>

436 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

440 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

441 c⁄° *
__ª°ri˘
 
__dñim
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

445 #ifdef 
__USE_XOPEN2K8


447 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

450 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

452 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

458 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

459 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

460 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

461 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

462 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifdef 
__USE_GNU


467 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

468 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

471 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

474 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

476 #i‚de‡
ba£«me


481 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


482 "C++" *
	$ba£«me
 (*
__fûíame
)

483 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

484 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

485 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

487 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

492 #i‡
	`__GNUC_PREREQ
 (3,4)

493 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


495 
	~<bôs/°rög_f‹tifõd.h
>

499 
__END_DECLS


	@/usr/include/sys/epoll.h

18 #i‚def 
_SYS_EPOLL_H


19 
	#_SYS_EPOLL_H
 1

	)

21 
	~<°döt.h
>

22 
	~<sys/ty≥s.h
>

24 
	~<bôs/ty≥s/sig£t_t.h
>

27 
	~<bôs/ïﬁl.h
>

29 #i‚de‡
__EPOLL_PACKED


30 
	#__EPOLL_PACKED


	)

34 
	eEPOLL_EVENTS


36 
	mEPOLLIN
 = 0x001,

37 
	#EPOLLIN
 
EPOLLIN


	)

38 
	mEPOLLPRI
 = 0x002,

39 
	#EPOLLPRI
 
EPOLLPRI


	)

40 
	mEPOLLOUT
 = 0x004,

41 
	#EPOLLOUT
 
EPOLLOUT


	)

42 
	mEPOLLRDNORM
 = 0x040,

43 
	#EPOLLRDNORM
 
EPOLLRDNORM


	)

44 
	mEPOLLRDBAND
 = 0x080,

45 
	#EPOLLRDBAND
 
EPOLLRDBAND


	)

46 
	mEPOLLWRNORM
 = 0x100,

47 
	#EPOLLWRNORM
 
EPOLLWRNORM


	)

48 
	mEPOLLWRBAND
 = 0x200,

49 
	#EPOLLWRBAND
 
EPOLLWRBAND


	)

50 
	mEPOLLMSG
 = 0x400,

51 
	#EPOLLMSG
 
EPOLLMSG


	)

52 
	mEPOLLERR
 = 0x008,

53 
	#EPOLLERR
 
EPOLLERR


	)

54 
	mEPOLLHUP
 = 0x010,

55 
	#EPOLLHUP
 
EPOLLHUP


	)

56 
	mEPOLLRDHUP
 = 0x2000,

57 
	#EPOLLRDHUP
 
EPOLLRDHUP


	)

58 
	mEPOLLEXCLUSIVE
 = 1u << 28,

59 
	#EPOLLEXCLUSIVE
 
EPOLLEXCLUSIVE


	)

60 
	mEPOLLWAKEUP
 = 1u << 29,

61 
	#EPOLLWAKEUP
 
EPOLLWAKEUP


	)

62 
	mEPOLLONESHOT
 = 1u << 30,

63 
	#EPOLLONESHOT
 
EPOLLONESHOT


	)

64 
	mEPOLLET
 = 1u << 31

65 
	#EPOLLET
 
EPOLLET


	)

70 
	#EPOLL_CTL_ADD
 1

	)

71 
	#EPOLL_CTL_DEL
 2

	)

72 
	#EPOLL_CTL_MOD
 3

	)

75 
	uïﬁl_d©a


77 *
	m±r
;

78 
	mfd
;

79 
uöt32_t
 
	mu32
;

80 
uöt64_t
 
	mu64
;

81 } 
	tïﬁl_d©a_t
;

83 
	sïﬁl_evít


85 
uöt32_t
 
	mevíts
;

86 
ïﬁl_d©a_t
 
	md©a
;

87 } 
	g__EPOLL_PACKED
;

90 
__BEGIN_DECLS


96 
	$ïﬁl_¸óã
 (
__size
Ë
__THROW
;

100 
	$ïﬁl_¸óã1
 (
__Êags
Ë
__THROW
;

109 
	$ïﬁl_˘l
 (
__ïfd
, 
__›
, 
__fd
,

110 
ïﬁl_evít
 *
__evít
Ë
__THROW
;

123 
	`ïﬁl_waô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

124 
__maxevíts
, 
__timeout
);

132 
	`ïﬁl_pwaô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

133 
__maxevíts
, 
__timeout
,

134 c⁄° 
__sig£t_t
 *
__ss
);

136 
__END_DECLS


	@/usr/include/sys/resource.h

18 #i‚def 
_SYS_RESOURCE_H


19 
	#_SYS_RESOURCE_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ªsour˚.h
>

26 #i‚de‡
__id_t_deföed


27 
__id_t
 
	tid_t
;

28 
	#__id_t_deföed


	)

31 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


38 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

39 
__rußge_who
 
	t__rußge_who_t
;

40 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

42 
	t__æimô_ªsour˚_t
;

43 
	t__rußge_who_t
;

44 
	t__¥i‹ôy_which_t
;

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

51 
æimô
 *
__æimôs
Ë
__THROW
;

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

55 
æimô
 *
__æimôs
), 
gëæimô64
);

57 
	#gëæimô
 
gëæimô64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

62 
æimô64
 *
__æimôs
Ë
__THROW
;

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

70 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

72 #ifde‡
__REDIRECT_NTH


73 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

74 c⁄° 
æimô
 *
__æimôs
),

75 
£ålimô64
);

77 
	#£ålimô
 
£ålimô64


	)

80 #ifde‡
__USE_LARGEFILE64


81 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

82 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

87 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

93 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

97 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

98 
__THROW
;

100 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<bôs/ty≥s/°ru˘_iovec.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

33 
	~<bôs/sockë.h
>

35 #ifde‡
__USE_MISC


36 
	~<bôs/ty≥s/°ru˘_osockaddr.h
>

43 
	mSHUT_RD
 = 0,

44 
	#SHUT_RD
 
SHUT_RD


	)

45 
	mSHUT_WR
,

46 
	#SHUT_WR
 
SHUT_WR


	)

47 
	mSHUT_RDWR


48 
	#SHUT_RDWR
 
SHUT_RDWR


	)

57 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


58 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

59 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

63 
	#__SOCKADDR_ALLTYPES
 \

64 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

65 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

66 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

67 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

68 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

69 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

70 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

71 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

78 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

79 uni⁄ { 
	m__SOCKADDR_ALLTYPES


80 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

81 #unde‡
__SOCKADDR_ONETYPE


82 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

83 uni⁄ { 
	m__SOCKADDR_ALLTYPES


84 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

85 #unde‡
__SOCKADDR_ONETYPE


88 #ifde‡
__USE_GNU


90 
	smmsghdr


92 
msghdr
 
	mmsg_hdr
;

93 
	mmsg_Àn
;

102 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

108 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

109 
__fds
[2]Ë
__THROW
;

112 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

113 
__THROW
;

116 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

117 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

126 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

130 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

131 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

138 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

145 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

152 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

153 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

154 
sockÀn_t
 
__addr_Àn
);

163 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

173 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

174 
__Êags
);

176 #ifde‡
__USE_GNU


182 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

183 
__vÀn
, 
__Êags
);

191 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

193 #ifde‡
__USE_GNU


199 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

200 
__vÀn
, 
__Êags
,

201 
time•ec
 *
__tmo
);

208 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

209 *
__ª°ri˘
 
__›tvÆ
,

210 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

215 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

216 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

222 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

232 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

233 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

235 #ifde‡
__USE_GNU


240 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

241 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

250 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

253 #ifde‡
__USE_XOPEN2K


255 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

259 #ifde‡
__USE_MISC


263 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

268 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


269 
	~<bôs/sockë2.h
>

272 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #ifde‡
__USE_XOPEN2K8


30 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 
	~<bôs/ty≥s/time_t.h
>

39 #i‚de‡
__dev_t_deföed


40 
__dev_t
 
	tdev_t
;

41 
	#__dev_t_deföed


	)

44 #i‚de‡
__gid_t_deföed


45 
__gid_t
 
	tgid_t
;

46 
	#__gid_t_deföed


	)

49 #i‚de‡
__öo_t_deföed


50 #i‚de‡
__USE_FILE_OFFSET64


51 
__öo_t
 
	töo_t
;

53 
__öo64_t
 
	töo_t
;

55 
	#__öo_t_deföed


	)

58 #i‚de‡
__mode_t_deföed


59 
__mode_t
 
	tmode_t
;

60 
	#__mode_t_deföed


	)

63 #i‚de‡
__∆ök_t_deföed


64 
__∆ök_t
 
	t∆ök_t
;

65 
	#__∆ök_t_deföed


	)

68 #i‚de‡
__off_t_deföed


69 #i‚de‡
__USE_FILE_OFFSET64


70 
__off_t
 
	toff_t
;

72 
__off64_t
 
	toff_t
;

74 
	#__off_t_deföed


	)

77 #i‚de‡
__uid_t_deföed


78 
__uid_t
 
	tuid_t
;

79 
	#__uid_t_deföed


	)

83 #ifde‡
__USE_UNIX98


84 #i‚de‡
__blk˙t_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__blk˙t_t
 
	tblk˙t_t
;

88 
__blk˙t64_t
 
	tblk˙t_t
;

90 
	#__blk˙t_t_deföed


	)

93 #i‚de‡
__blksize_t_deföed


94 
__blksize_t
 
	tblksize_t
;

95 
	#__blksize_t_deföed


	)

99 
	g__BEGIN_DECLS


101 
	~<bôs/°©.h
>

103 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


104 
	#S_IFMT
 
__S_IFMT


	)

105 
	#S_IFDIR
 
__S_IFDIR


	)

106 
	#S_IFCHR
 
__S_IFCHR


	)

107 
	#S_IFBLK
 
__S_IFBLK


	)

108 
	#S_IFREG
 
__S_IFREG


	)

109 #ifde‡
__S_IFIFO


110 
	#S_IFIFO
 
__S_IFIFO


	)

112 #ifde‡
__S_IFLNK


113 
	#S_IFLNK
 
__S_IFLNK


	)

115 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
) \

116 && 
deföed
 
	g__S_IFSOCK


117 
	#S_IFSOCK
 
__S_IFSOCK


	)

123 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

125 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

126 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

127 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

128 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

129 #ifde‡
__S_IFIFO


130 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

132 #ifde‡
__S_IFLNK


133 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

136 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë0

	)

140 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K
) \

141 && 
deföed
 
	g__S_IFSOCK


142 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

143 #ñi‡
deföed
 
__USE_XOPEN2K


144 
	#S_ISSOCK
(
mode
Ë0

	)

151 #ifdef 
__USE_POSIX199309


152 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

153 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

154 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

160 
	#S_ISUID
 
__S_ISUID


	)

161 
	#S_ISGID
 
__S_ISGID


	)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


165 
	#S_ISVTX
 
__S_ISVTX


	)

168 
	#S_IRUSR
 
__S_IREAD


	)

169 
	#S_IWUSR
 
__S_IWRITE


	)

170 
	#S_IXUSR
 
__S_IEXEC


	)

172 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

174 #ifde‡
__USE_MISC


175 
	#S_IREAD
 
S_IRUSR


	)

176 
	#S_IWRITE
 
S_IWUSR


	)

177 
	#S_IEXEC
 
S_IXUSR


	)

180 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

181 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

182 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

184 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

186 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

187 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

188 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

190 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

193 #ifdef 
__USE_MISC


195 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

196 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

197 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

199 
	#S_BLKSIZE
 512

	)

203 #i‚de‡
__USE_FILE_OFFSET64


205 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

206 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

210 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

212 #ifde‡
__REDIRECT_NTH


213 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

214 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

215 
	`__n⁄nuŒ
 ((1, 2));

216 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

217 
	`__n⁄nuŒ
 ((2));

219 
	#°©
 
°©64


	)

220 
	#f°©
 
f°©64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

225 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

226 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

229 #ifde‡
__USE_ATFILE


233 #i‚de‡
__USE_FILE_OFFSET64


234 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

235 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

236 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

238 #ifde‡
__REDIRECT_NTH


239 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
,

241 
__Êag
),

242 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

244 
	#f°©©
 
f°©©64


	)

248 #ifde‡
__USE_LARGEFILE64


249 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

250 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

251 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_MISC


287 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

300 
__Êag
)

301 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

308 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

310 #ifdef 
__USE_GNU


313 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

317 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1));

320 #ifde‡
__USE_ATFILE


324 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

325 
__THROW
 
	`__n⁄nuŒ
 ((2));

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


332 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 #ifde‡
__USE_ATFILE


353 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

354 
__THROW
 
	`__n⁄nuŒ
 ((2));

357 #ifde‡
__USE_ATFILE


360 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

361 c⁄° 
time•ec
 
__times
[2],

362 
__Êags
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 #ifde‡
__USE_XOPEN2K8


368 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

386 #i‚de‡
_STAT_VER


387 
	#_STAT_VER
 0

	)

389 #i‚de‡
_MKNOD_VER


390 
	#_MKNOD_VER
 0

	)

394 #i‚de‡
__USE_FILE_OFFSET64


395 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

396 
__THROW
 
	`__n⁄nuŒ
 ((3));

397 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

398 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

399 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

400 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

401 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
)

403 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

405 #ifde‡
__REDIRECT_NTH


406 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

407 
°©
 *
__°©_buf
), 
__fx°©64
)

408 
	`__n⁄nuŒ
 ((3));

409 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

410 
°©
 *
__°©_buf
), 
__x°©64
)

411 
	`__n⁄nuŒ
 ((2, 3));

412 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__lx°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

416 c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
, 
__Êag
),

418 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

421 
	#__fx°©
 
__fx°©64


	)

422 
	#__x°©
 
__x°©64


	)

423 
	#__lx°©
 
__lx°©64


	)

427 #ifde‡
__USE_LARGEFILE64


428 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

429 
__THROW
 
	`__n⁄nuŒ
 ((3));

430 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

431 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

432 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

433 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
, 
__Êag
)

436 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

438 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

439 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

441 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

442 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

443 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

445 #ifde‡
__USE_GNU


446 
	~<bôs/°©x.h
>

449 #ifde‡
__USE_EXTERN_INLINES


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #ifde‡
__USE_MISC


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/time_t.h
>

25 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

27 #i‚de‡
__su£c⁄ds_t_deföed


28 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

29 
	#__su£c⁄ds_t_deföed


	)

32 
	~<sys/£À˘.h
>

34 
	g__BEGIN_DECLS


36 #ifde‡
__USE_GNU


38 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

39 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

40 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

41 }

	)

42 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

43 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

44 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

45 }

	)

49 #ifde‡
__USE_MISC


52 
	stimez⁄e


54 
	mtz_möuãswe°
;

55 
	mtz_d°time
;

66 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

67 *
__ª°ri˘
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 #ifde‡
__USE_MISC


75 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

76 c⁄° 
timez⁄e
 *
__tz
)

77 
__THROW
;

83 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

84 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

89 
	e__ôimî_which


92 
ITIMER_REAL
 = 0,

93 
	#ITIMER_REAL
 
ITIMER_REAL


	)

95 
ITIMER_VIRTUAL
 = 1,

96 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

99 
ITIMER_PROF
 = 2

100 
	#ITIMER_PROF
 
ITIMER_PROF


	)

105 
	sôimîvÆ


108 
timevÆ
 
ô_öãrvÆ
;

110 
timevÆ
 
ô_vÆue
;

113 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


116 
__ôimî_which
 
	t__ôimî_which_t
;

118 
	t__ôimî_which_t
;

123 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

124 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

129 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

130 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

131 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

136 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #ifde‡
__USE_MISC


141 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

148 #ifde‡
__USE_GNU


152 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

153 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

157 #ifde‡
__USE_MISC


160 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

161 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

162 
	#timîcmp
(
a
, 
b
, 
CMP
) \

163 (((
a
)->
tv_£c
 =(
b
)->tv_sec) \

164 ? ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) \

165 : ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

166 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

168 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

169 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

170 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

172 ++(
ªsu…
)->
tv_£c
; \

173 (
ªsu…
)->
tv_u£c
 -= 1000000; \

175 
	}
} 0)

	)

176 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

178 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

179 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

180 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

181 --(
ªsu…
)->
tv_£c
; \

182 (
ªsu…
)->
tv_u£c
 += 1000000; \

184 } 0)

	)

187 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

181 
	#__i¶óp
(
yór
) \

182 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

185 #ifde‡
__USE_MISC


190 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

193 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

196 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

200 #ifde‡
__USE_POSIX199309


205 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

206 
time•ec
 *
__ªmaöög
);

210 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

213 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

216 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

217 
__THROW
;

219 #ifde‡
__USE_XOPEN2K


224 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

225 c⁄° 
time•ec
 *
__ªq
,

226 
time•ec
 *
__ªm
);

229 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

234 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

235 
sigevít
 *
__ª°ri˘
 
__evp
,

236 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

239 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

242 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

243 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

244 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

247 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

248 
__THROW
;

251 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

255 #ifde‡
__USE_ISOC11


257 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1));

262 #ifde‡
__USE_XOPEN_EXTENDED


274 
gëd©e_îr
;

283 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

286 #ifde‡
__USE_GNU


297 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

298 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

301 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #ifde‡
__USE_MISC


784 
	$ây¶Ÿ
 (Ë
__THROW
;

789 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


795 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

796 c⁄° *
__to
, 
__Êags
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

800 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


802 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

808 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

809 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

813 #ifde‡
__USE_ATFILE


815 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

816 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

819 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

820 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

825 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_ATFILE


829 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

830 
__THROW
 
	`__n⁄nuŒ
 ((2));

834 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

841 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

848 *
	`gëlogö
 ();

849 #ifde‡
__USE_POSIX199506


856 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

859 #ifdef 
__USE_MISC


861 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

865 #ifdef 
__USE_POSIX2


869 
	~<bôs/gë›t_posix.h
>

873 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


877 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
deföed
 
__USE_MISC


884 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

895 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 
	$vh™gup
 (Ë
__THROW
;

907 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

916 
size_t
 
__off£t
, 
__sˇÀ
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1));

923 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

927 *
	$gëu£rshñl
 (Ë
__THROW
;

928 
	$ídu£rshñl
 (Ë
__THROW
;

929 
	$£tu£rshñl
 (Ë
__THROW
;

935 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

939 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

942 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

946 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

954 
	`fsync
 (
__fd
);

957 #ifde‡
__USE_GNU


960 
	$syncfs
 (
__fd
Ë
__THROW
;

964 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


967 
	`gëho°id
 ();

970 
	$sync
 (Ë
__THROW
;

973 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


976 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

981 
	$gëdèbÀsize
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


990 #i‚de‡
__USE_FILE_OFFSET64


991 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

994 #ifde‡
__REDIRECT_NTH


995 
	`__REDIRECT_NTH
 (
åunˇã
,

996 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

997 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 
	#åunˇã
 
åunˇã64


	)

1002 #ifde‡
__USE_LARGEFILE64


1003 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1009 #i‡
deföed
 
__USE_POSIX199309
 \

1010 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1013 #i‚de‡
__USE_FILE_OFFSET64


1014 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1016 #ifde‡
__REDIRECT_NTH


1017 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1018 
·runˇã64
Ë
__wur
;

1020 
	#·runˇã
 
·runˇã64


	)

1023 #ifde‡
__USE_LARGEFILE64


1024 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1031 || 
deföed
 
__USE_MISC


1035 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1041 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1045 #ifde‡
__USE_MISC


1056 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1061 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1073 
	#F_ULOCK
 0

	)

1074 
	#F_LOCK
 1

	)

1075 
	#F_TLOCK
 2

	)

1076 
	#F_TEST
 3

	)

1078 #i‚de‡
__USE_FILE_OFFSET64


1079 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1081 #ifde‡
__REDIRECT


1082 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1083 
lockf64
Ë
__wur
;

1085 
	#lockf
 
lockf64


	)

1088 #ifde‡
__USE_LARGEFILE64


1089 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1094 #ifde‡
__USE_GNU


1099 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1100 (
__exãnsi⁄__
 \

1101 ({ 
__ªsu…
; \

1102 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1103 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1104 
__ªsu…
; 
	}
}))

	)

1107 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1108 
__outfd
, 
__off64_t
 *
__poutoff
,

1109 
size_t
 
__Àngth
, 
__Êags
);

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1118 #ifde‡
__USE_MISC


1124 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1125 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 #ifdef 
__USE_XOPEN


1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1141 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1143 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1146 *
	`cu£rid
 (*
__s
);

1152 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1153 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1154 (*
__∑ª¡
) (),

1155 (*
__chûd
Ë()Ë
__THROW
;

1158 #ifde‡
__USE_MISC


1161 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1165 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1166 
	~<bôs/uni°d.h
>

1170 
	~<bôs/uni°d_ext.h
>

1172 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

58 
	#_DIRENT_MATCHES_DIRENT64
 0

	)

	@/usr/include/bits/dirent_ext.h

19 #i‚de‡
_DIRENT_H


23 
	g__BEGIN_DECLS


25 #ifde‡
__USE_GNU


29 
__ssize_t
 
	$gëdíts64
 (
__fd
, *
__buf„r
, 
size_t
 
__Àngth
)

30 
__THROW
 
	`__n⁄nuŒ
 ((2));

33 
__END_DECLS


	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/epoll.h

18 #i‚def 
_SYS_EPOLL_H


25 
	mEPOLL_CLOEXEC
 = 02000000

26 
	#EPOLL_CLOEXEC
 
EPOLL_CLOEXEC


	)

29 
	#__EPOLL_PACKED
 
	`__©åibuã__
 ((
__∑cked__
))

	)

	@/usr/include/bits/errno.h

19 #i‚de‡
_BITS_ERRNO_H


20 
	#_BITS_ERRNO_H
 1

	)

22 #i‡!
deföed
 
_ERRNO_H


26 
	~<löux/î∫o.h
>

29 #i‚de‡
ENOTSUP


30 
	#ENOTSUP
 
EOPNOTSUPP


	)

33 #i‚de‡
ECANCELED


34 
	#ECANCELED
 125

	)

37 #i‚de‡
EOWNERDEAD


38 
	#EOWNERDEAD
 130

	)

41 #i‚de‡
ENOTRECOVERABLE


42 
	#ENOTRECOVERABLE
 131

	)

45 #i‚de‡
ERFKILL


46 
	#ERFKILL
 132

	)

49 #i‚de‡
EHWPOISON


50 
	#EHWPOISON
 133

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	`__GNUC_PREREQ
 (4, 4))) \

32 && !
	$deföed
(
__CUDACC__
)

33 
	#__HAVE_FLOAT128
 1

	)

35 
	#__HAVE_FLOAT128
 0

	)

40 #i‡
__HAVE_FLOAT128


41 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

43 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

49 
	#__HAVE_FLOAT64X
 1

	)

55 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

57 #i‚de‡
__ASSEMBLER__


61 #i‡
__HAVE_FLOAT128


62 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


64 
	#__f128
(
x
Ëx##
q


	)

66 
	#__f128
(
x
Ëx##
f128


	)

71 #i‡
__HAVE_FLOAT128


72 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


75 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

76 
	#__CFLOAT128
 
__cÊﬂt128


	)

78 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

83 #i‡
__HAVE_FLOAT128


86 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


87 
__Êﬂt128
 
	t_Flﬂt128
;

91 #i‡!
	`__GNUC_PREREQ
 (7, 0)

92 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

100 #i‡!
	`__GNUC_PREREQ
 (7, 0)

101 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

102 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

103 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

104 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

105 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

112 #i‡!
	`__GNUC_PREREQ
 (6, 0)

113 
	#__buûtö_signbôf128
 
__signbôf128


	)

120 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/flt-eval-method.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__FLT_EVAL_METHOD__


24 #i‡
__FLT_EVAL_METHOD__
 == -1

25 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

27 
	#__GLIBC_FLT_EVAL_METHOD
 
__FLT_EVAL_METHOD__


	)

29 #ñi‡
deföed
 
__x86_64__


30 
	#__GLIBC_FLT_EVAL_METHOD
 0

	)

32 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

	@/usr/include/bits/fp-fast.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__USE_ISOC99


27 #ifde‡
__FP_FAST_FMA


28 
	#FP_FAST_FMA
 1

	)

31 #ifde‡
__FP_FAST_FMAF


32 
	#FP_FAST_FMAF
 1

	)

35 #ifde‡
__FP_FAST_FMAL


36 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/fp-logb.h

19 #i‚de‡
_MATH_H


23 
	#__FP_LOGB0_IS_MIN
 1

	)

24 
	#__FP_LOGBNAN_IS_MIN
 1

	)

	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


32 #i‡
deföed
 
_UAPI_LINUX_IN6_H
 \

33 || 
deföed
 
	g_UAPI_IPV6_H
 \

34 || 
deföed
 
	g_LINUX_IN6_H
 \

35 || 
deföed
 
	g_IPV6_H


39 
	#__USE_KERNEL_IPV6_DEFS
 1

	)

41 
	#__USE_KERNEL_IPV6_DEFS
 0

	)

47 
	#IP_OPTIONS
 4

	)

48 
	#IP_HDRINCL
 3

	)

49 
	#IP_TOS
 1

	)

50 
	#IP_TTL
 2

	)

51 
	#IP_RECVOPTS
 6

	)

53 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

54 
	#IP_RETOPTS
 7

	)

55 
	#IP_MULTICAST_IF
 32

	)

56 
	#IP_MULTICAST_TTL
 33

	)

57 
	#IP_MULTICAST_LOOP
 34

	)

58 
	#IP_ADD_MEMBERSHIP
 35

	)

59 
	#IP_DROP_MEMBERSHIP
 36

	)

60 
	#IP_UNBLOCK_SOURCE
 37

	)

61 
	#IP_BLOCK_SOURCE
 38

	)

62 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

63 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

64 
	#IP_MSFILTER
 41

	)

65 #ifde‡
__USE_MISC


66 
	#MCAST_JOIN_GROUP
 42

	)

67 
	#MCAST_BLOCK_SOURCE
 43

	)

68 
	#MCAST_UNBLOCK_SOURCE
 44

	)

69 
	#MCAST_LEAVE_GROUP
 45

	)

70 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

71 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

72 
	#MCAST_MSFILTER
 48

	)

73 
	#IP_MULTICAST_ALL
 49

	)

74 
	#IP_UNICAST_IF
 50

	)

76 
	#MCAST_EXCLUDE
 0

	)

77 
	#MCAST_INCLUDE
 1

	)

80 
	#IP_ROUTER_ALERT
 5

	)

81 
	#IP_PKTINFO
 8

	)

82 
	#IP_PKTOPTIONS
 9

	)

83 
	#IP_PMTUDISC
 10

	)

84 
	#IP_MTU_DISCOVER
 10

	)

85 
	#IP_RECVERR
 11

	)

86 
	#IP_RECVTTL
 12

	)

87 
	#IP_RECVTOS
 13

	)

88 
	#IP_MTU
 14

	)

89 
	#IP_FREEBIND
 15

	)

90 
	#IP_IPSEC_POLICY
 16

	)

91 
	#IP_XFRM_POLICY
 17

	)

92 
	#IP_PASSSEC
 18

	)

93 
	#IP_TRANSPARENT
 19

	)

94 
	#IP_MULTICAST_ALL
 49

	)

97 
	#IP_ORIGDSTADDR
 20

	)

98 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

100 
	#IP_MINTTL
 21

	)

101 
	#IP_NODEFRAG
 22

	)

102 
	#IP_CHECKSUM
 23

	)

103 
	#IP_BIND_ADDRESS_NO_PORT
 24

	)

104 
	#IP_RECVFRAGSIZE
 25

	)

107 
	#IP_PMTUDISC_DONT
 0

	)

108 
	#IP_PMTUDISC_WANT
 1

	)

109 
	#IP_PMTUDISC_DO
 2

	)

110 
	#IP_PMTUDISC_PROBE
 3

	)

114 
	#IP_PMTUDISC_INTERFACE
 4

	)

116 
	#IP_PMTUDISC_OMIT
 5

	)

118 
	#IP_MULTICAST_IF
 32

	)

119 
	#IP_MULTICAST_TTL
 33

	)

120 
	#IP_MULTICAST_LOOP
 34

	)

121 
	#IP_ADD_MEMBERSHIP
 35

	)

122 
	#IP_DROP_MEMBERSHIP
 36

	)

123 
	#IP_UNBLOCK_SOURCE
 37

	)

124 
	#IP_BLOCK_SOURCE
 38

	)

125 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

126 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

127 
	#IP_MSFILTER
 41

	)

128 
	#IP_MULTICAST_ALL
 49

	)

129 
	#IP_UNICAST_IF
 50

	)

132 
	#SOL_IP
 0

	)

134 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

135 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

136 
	#IP_MAX_MEMBERSHIPS
 20

	)

138 #ifde‡
__USE_MISC


142 
	sù_›ts


144 
ö_addr
 
	mù_d°
;

145 
	mù_›ts
[40];

149 
	sù_mªqn


151 
ö_addr
 
	mimr_mu…üddr
;

152 
ö_addr
 
	mimr_addªss
;

153 
	mimr_ifödex
;

157 
	sö_pktöfo


159 
	mùi_ifödex
;

160 
ö_addr
 
	mùi_•ec_d°
;

161 
ö_addr
 
	mùi_addr
;

168 
	#IPV6_ADDRFORM
 1

	)

169 
	#IPV6_2292PKTINFO
 2

	)

170 
	#IPV6_2292HOPOPTS
 3

	)

171 
	#IPV6_2292DSTOPTS
 4

	)

172 
	#IPV6_2292RTHDR
 5

	)

173 
	#IPV6_2292PKTOPTIONS
 6

	)

174 
	#IPV6_CHECKSUM
 7

	)

175 
	#IPV6_2292HOPLIMIT
 8

	)

177 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

179 
	#IPV6_NEXTHOP
 9

	)

180 
	#IPV6_AUTHHDR
 10

	)

181 
	#IPV6_UNICAST_HOPS
 16

	)

182 
	#IPV6_MULTICAST_IF
 17

	)

183 
	#IPV6_MULTICAST_HOPS
 18

	)

184 
	#IPV6_MULTICAST_LOOP
 19

	)

185 
	#IPV6_JOIN_GROUP
 20

	)

186 
	#IPV6_LEAVE_GROUP
 21

	)

187 
	#IPV6_ROUTER_ALERT
 22

	)

188 
	#IPV6_MTU_DISCOVER
 23

	)

189 
	#IPV6_MTU
 24

	)

190 
	#IPV6_RECVERR
 25

	)

191 
	#IPV6_V6ONLY
 26

	)

192 
	#IPV6_JOIN_ANYCAST
 27

	)

193 
	#IPV6_LEAVE_ANYCAST
 28

	)

194 
	#IPV6_MULTICAST_ALL
 29

	)

195 
	#IPV6_ROUTER_ALERT_ISOLATE
 30

	)

196 
	#IPV6_IPSEC_POLICY
 34

	)

197 
	#IPV6_XFRM_POLICY
 35

	)

198 
	#IPV6_HDRINCL
 36

	)

201 
	#IPV6_RECVPKTINFO
 49

	)

202 
	#IPV6_PKTINFO
 50

	)

203 
	#IPV6_RECVHOPLIMIT
 51

	)

204 
	#IPV6_HOPLIMIT
 52

	)

205 
	#IPV6_RECVHOPOPTS
 53

	)

206 
	#IPV6_HOPOPTS
 54

	)

207 
	#IPV6_RTHDRDSTOPTS
 55

	)

208 
	#IPV6_RECVRTHDR
 56

	)

209 
	#IPV6_RTHDR
 57

	)

210 
	#IPV6_RECVDSTOPTS
 58

	)

211 
	#IPV6_DSTOPTS
 59

	)

212 
	#IPV6_RECVPATHMTU
 60

	)

213 
	#IPV6_PATHMTU
 61

	)

214 
	#IPV6_DONTFRAG
 62

	)

217 
	#IPV6_RECVTCLASS
 66

	)

218 
	#IPV6_TCLASS
 67

	)

220 
	#IPV6_AUTOFLOWLABEL
 70

	)

223 
	#IPV6_ADDR_PREFERENCES
 72

	)

226 
	#IPV6_MINHOPCOUNT
 73

	)

228 
	#IPV6_ORIGDSTADDR
 74

	)

229 
	#IPV6_RECVORIGDSTADDR
 
IPV6_ORIGDSTADDR


	)

230 
	#IPV6_TRANSPARENT
 75

	)

231 
	#IPV6_UNICAST_IF
 76

	)

232 
	#IPV6_RECVFRAGSIZE
 77

	)

233 
	#IPV6_FREEBIND
 78

	)

236 #i‡!
__USE_KERNEL_IPV6_DEFS


237 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

238 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

240 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

241 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

244 
	#IPV6_PMTUDISC_DONT
 0

	)

245 
	#IPV6_PMTUDISC_WANT
 1

	)

246 
	#IPV6_PMTUDISC_DO
 2

	)

247 
	#IPV6_PMTUDISC_PROBE
 3

	)

248 
	#IPV6_PMTUDISC_INTERFACE
 4

	)

249 
	#IPV6_PMTUDISC_OMIT
 5

	)

252 
	#SOL_IPV6
 41

	)

253 
	#SOL_ICMPV6
 58

	)

256 
	#IPV6_RTHDR_LOOSE
 0

	)

257 
	#IPV6_RTHDR_STRICT
 1

	)

259 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/iscanonical.h

19 #i‚de‡
_MATH_H


23 
	$__isˇn⁄iˇŒ
 (
__x
)

24 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

25 
	#__isˇn⁄iˇlf
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

26 
	#__isˇn⁄iˇl
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

27 #i‡
__HAVE_DISTINCT_FLOAT128


28 
	#__isˇn⁄iˇlf128
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

37 #i‚de‡
__˝lu•lus


38 
	#isˇn⁄iˇl
(
x
Ë
	`__MATH_TG
 ((x), 
__isˇn⁄iˇl
, (x))

	)

47 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇlf
 (__val); }

48 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇl
 (__val); }

49 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇŒ
 (__val); }

50 #i‡
__HAVE_DISTINCT_FLOAT128


51 
ölöe
 
	`isˇn⁄iˇl
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__isˇn⁄iˇlf128
 (__val); }

53 
	}
}

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

49 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


50 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

53 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

55 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C2X


56 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

57 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 1

	)

59 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 0

	)

66 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


68 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

70 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

72 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X


73 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

74 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 1

	)

76 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 0

	)

81 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


82 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


83 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

85 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls-helper-functions.h

21 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

22 
__©åibuã__
 ((
__c⁄°__
));

25 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

26 
__©åibuã__
 ((
__c⁄°__
));

30 
__MATHDECL_1
 (, 
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

33 
__MATHDECL_1
 (, 
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

36 
__MATHDECL_1
 (, 
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

39 
__MATHDECL_1
 (, 
__i£qsig
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

42 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

43 
__©åibuã__
 ((
__c⁄°__
));

	@/usr/include/bits/mathcalls-narrow.h

19 #i‚de‡
_MATH_H


24 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
add
), 
__MATHCALL_REDIR_NAME
 (add), 2);

27 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
div
), 
__MATHCALL_REDIR_NAME
 (div), 2);

30 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
mul
), 
__MATHCALL_REDIR_NAME
 (mul), 2);

33 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
sub
), 
__MATHCALL_REDIR_NAME
 (sub), 2);

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


53 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

55 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

62 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

64 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

71 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 #ifde‡
__USE_GNU


79 
__MATHDECL_VEC
 (,
söcos
,,

80 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

83 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


85 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

87 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

89 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

95 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

98 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

101 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

104 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

107 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

110 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

112 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT_C2X
)

114 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

117 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


119 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

125 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

128 #ifde‡
__USE_ISOC99


130 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

140 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

143 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

145 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


147 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

150 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

159 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

162 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

165 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

168 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

170 #ifde‡
__USE_MISC


171 #i‡((!
deföed
 
__˝lu•lus
 \

172 || 
	g__˝lu•lus
 < 201103L \

173 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

174 && !
__MATH_DECLARING_FLOATN


177 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

180 #i‡!
__MATH_DECLARING_FLOATN


182 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

185 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

189 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

194 #ifde‡
__USE_ISOC99


196 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

199 #ifde‡
__USE_ISOC99


201 
__MATHCALL
 (
«n
,, (c⁄° *
__ègb
));

205 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

206 #i‡((!
deföed
 
__˝lu•lus
 \

207 || 
	g__˝lu•lus
 < 201103L \

208 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

209 && !
__MATH_DECLARING_FLOATN


211 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

215 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

217 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

218 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

219 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

220 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

221 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

222 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

226 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


228 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

229 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

230 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

233 #ifde‡
__USE_ISOC99


235 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

238 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

239 #i‡!
__MATH_DECLARING_FLOATN


241 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

245 #ifde‡
__USE_MISC


249 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

253 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


256 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

259 
__MATHCALL
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

260 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT
 && !
__MATH_DECLARING_FLOATN


261 
__MATHCALL
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
));

264 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


266 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

268 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

272 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

274 #ifde‡
__USE_ISOC99


276 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

280 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

283 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


285 
__MATHDECL
 (, 
Œogb
,, (
_MdoubÀ_
 
__x
));

288 #ifde‡
__USE_ISOC99


290 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

294 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

298 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

302 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

307 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

314 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

315 
__exãnsi⁄__


316 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

320 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

321 
__exãnsi⁄__


322 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

326 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

329 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

332 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

335 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

338 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


340 
__MATHCALLX
 (
roundeví
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

344 
__MATHDECL
 (
__ötmax_t
, 
‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

345 
__width
));

349 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

350 
__width
));

355 
__MATHDECL
 (
__ötmax_t
, 
‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

356 
__width
));

361 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

362 
__width
));

365 
__MATHCALLX
 (
fmaxmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

368 
__MATHCALLX
 (
fmömag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

371 
__MATHDECL_1
 (, 
ˇn⁄iˇlize
,, (
_MdoubÀ_
 *
__cx
, c⁄° _MdoubÀ_ *
__x
));

374 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


376 
__MATHDECL_1
 (, 
tŸÆ‹dî
,, (c⁄° 
_MdoubÀ_
 *
__x
,

377 c⁄° 
_MdoubÀ_
 *
__y
))

378 
	g__©åibuã_puª__
;

381 
__MATHDECL_1
 (, 
tŸÆ‹dîmag
,, (c⁄° 
_MdoubÀ_
 *
__x
,

382 c⁄° 
_MdoubÀ_
 *
__y
))

383 
	g__©åibuã_puª__
;

386 
__MATHCALL
 (
gë∑ylﬂd
,, (c⁄° 
_MdoubÀ_
 *
__x
));

389 
__MATHDECL_1
 (, 
£çaylﬂd
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

392 
__MATHDECL_1
 (, 
£çaylﬂdsig
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

395 #i‡(
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

396 && 
	g__MATH_DECLARING_DOUBLE
 \

397 && !
deföed
 
	g__USE_XOPEN2K8
)) \

398 && !
__MATH_DECLARING_FLOATN


400 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathinline.h

8 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

27 
	~<bôs/w‹dsize.h
>

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 #ifde‡
__USE_XOPEN2K


139 
	#_POSIX_TZNAME_MAX
 6

	)

141 
	#_POSIX_TZNAME_MAX
 3

	)

144 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


146 
	#_POSIX_QLIMIT
 1

	)

150 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

153 
	#_POSIX_UIO_MAXIOV
 16

	)

157 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

161 
	~<bôs/loˇl_lim.h
>

164 #i‚def 
SSIZE_MAX


168 #i‡
__WORDSIZE
 =64 || 
__WORDSIZE32_SIZE_ULONG


169 
	#SSIZE_MAX
 
LONG_MAX


	)

171 
	#SSIZE_MAX
 
INT_MAX


	)

179 #i‚def 
NGROUPS_MAX


180 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

32 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

35 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

38 
	#_POSIX_FSYNC
 200809L

	)

41 
	#_POSIX_MAPPED_FILES
 200809L

	)

44 
	#_POSIX_MEMLOCK
 200809L

	)

47 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

50 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

53 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

57 
	#_POSIX_VDISABLE
 '\0'

	)

60 
	#_POSIX_NO_TRUNC
 1

	)

63 
	#_XOPEN_REALTIME
 1

	)

66 
	#_XOPEN_REALTIME_THREADS
 1

	)

69 
	#_XOPEN_SHM
 1

	)

72 
	#_POSIX_THREADS
 200809L

	)

75 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

76 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

79 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

85 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

88 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

92 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

94 #ifde‡
__USE_XOPEN2K8


96 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

99 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

103 
	#_POSIX_SEMAPHORES
 200809L

	)

106 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

109 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

110 
	#_POSIX_ASYNC_IO
 1

	)

112 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

114 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

117 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

120 
	#_LFS_LARGEFILE
 1

	)

121 
	#_LFS64_LARGEFILE
 1

	)

122 
	#_LFS64_STDIO
 1

	)

125 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

128 
	#_POSIX_CPUTIME
 0

	)

131 
	#_POSIX_THREAD_CPUTIME
 0

	)

134 
	#_POSIX_REGEXP
 1

	)

137 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

140 
	#_POSIX_SHELL
 1

	)

143 
	#_POSIX_TIMEOUTS
 200809L

	)

146 
	#_POSIX_SPIN_LOCKS
 200809L

	)

149 
	#_POSIX_SPAWN
 200809L

	)

152 
	#_POSIX_TIMERS
 200809L

	)

155 
	#_POSIX_BARRIERS
 200809L

	)

158 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

161 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

164 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

167 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

170 
	#_POSIX_ADVISORY_INFO
 200809L

	)

173 
	#_POSIX_IPV6
 200809L

	)

176 
	#_POSIX_RAW_SOCKETS
 200809L

	)

179 
	#_POSIX2_CHAR_TERM
 200809L

	)

182 
	#_POSIX_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

186 
	#_POSIX_TRACE
 -1

	)

187 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

188 
	#_POSIX_TRACE_INHERIT
 -1

	)

189 
	#_POSIX_TRACE_LOG
 -1

	)

192 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/printf-ldbl.h

19 #i‚de‡
_PRINTF_H


23 
__LDBL_REDIR_DECL
 (
¥ötf_size
)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

179 
	~<bôs/ty≥s/°ru˘_rußge.h
>

182 
	#PRIO_MIN
 -20

	)

183 
	#PRIO_MAX
 20

	)

187 
	e__¥i‹ôy_which


189 
	mPRIO_PROCESS
 = 0,

190 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

191 
	mPRIO_PGRP
 = 1,

192 
	#PRIO_PGRP
 
PRIO_PGRP


	)

193 
	mPRIO_USER
 = 2

194 
	#PRIO_USER
 
PRIO_USER


	)

198 
	g__BEGIN_DECLS


200 #ifde‡
__USE_GNU


202 #i‚de‡
__USE_FILE_OFFSET64


203 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

204 c⁄° 
æimô
 *
__√w_limô
,

205 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

207 #ifde‡
__REDIRECT_NTH


208 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

209 
__æimô_ªsour˚
 
__ªsour˚
,

210 c⁄° 
æimô
 *
__√w_limô
,

211 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

213 
	#¥limô
 
¥limô64


	)

216 #ifde‡
__USE_LARGEFILE64


217 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

218 c⁄° 
æimô64
 *
__√w_limô
,

219 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

223 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

19 #i‚de‡
_SETJMP_H


24 #ifde‡
__REDIRECT_NTH


25 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

26 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

27 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

28 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

29 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

30 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

31 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

32 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

33 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

35 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

36 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

37 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

38 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_BITS_SIGACTION_H


20 
	#_BITS_SIGACTION_H
 1

	)

22 #i‚de‡
_SIGNAL_H


27 
	ssiga˘i⁄


30 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


34 
__sigh™dÀr_t
 
	mß_h™dÀr
;

36 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

38 
	m__siga˘i⁄_h™dÀr
;

39 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

40 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

42 
__sigh™dÀr_t
 
	mß_h™dÀr
;

46 
__sig£t_t
 
	mß_mask
;

49 
	mß_Êags
;

52 (*
	mß_ª°‹î
) ();

56 
	#SA_NOCLDSTOP
 1

	)

57 
	#SA_NOCLDWAIT
 2

	)

58 
	#SA_SIGINFO
 4

	)

60 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


61 
	#SA_ONSTACK
 0x08000000

	)

63 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


64 
	#SA_RESTART
 0x10000000

	)

65 
	#SA_NODEFER
 0x40000000

	)

67 
	#SA_RESETHAND
 0x80000000

	)

69 #ifde‡
__USE_MISC


70 
	#SA_INTERRUPT
 0x20000000

	)

73 
	#SA_NOMASK
 
SA_NODEFER


	)

74 
	#SA_ONESHOT
 
SA_RESETHAND


	)

75 
	#SA_STACK
 
SA_ONSTACK


	)

79 
	#SIG_BLOCK
 0

	)

80 
	#SIG_UNBLOCK
 1

	)

81 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	~<bôs/ty≥s.h
>

27 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

28 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

29 
	#FP_XSTATE_MAGIC2_SIZE
  (
FP_XSTATE_MAGIC2
)

	)

31 
	s_Âx_sw_byãs


33 
__uöt32_t
 
	mmagic1
;

34 
__uöt32_t
 
	mexãnded_size
;

35 
__uöt64_t
 
	mx°©e_bv
;

36 
__uöt32_t
 
	mx°©e_size
;

37 
__uöt32_t
 
	m__glibc_ª£rved1
[7];

40 
	s_Âªg


42 
	msignifiˇnd
[4];

43 
	mexp⁄ít
;

46 
	s_Âxªg


48 
	msignifiˇnd
[4];

49 
	mexp⁄ít
;

50 
	m__glibc_ª£rved1
[3];

53 
	s_xmmªg


55 
__uöt32_t
 
	mñemít
[4];

60 #i‚de‡
__x86_64__


62 
	s_Â°©e


65 
__uöt32_t
 
	mcw
;

66 
__uöt32_t
 
	msw
;

67 
__uöt32_t
 
	mèg
;

68 
__uöt32_t
 
	mùoff
;

69 
__uöt32_t
 
	mcs£l
;

70 
__uöt32_t
 
	md©aoff
;

71 
__uöt32_t
 
	md©a£l
;

72 
_Âªg
 
	m_°
[8];

73 
	m°©us
;

74 
	mmagic
;

77 
__uöt32_t
 
	m_fx§_ív
[6];

78 
__uöt32_t
 
	mmxc§
;

79 
__uöt32_t
 
	m__glibc_ª£rved1
;

80 
_Âxªg
 
	m_fx§_°
[8];

81 
_xmmªg
 
	m_xmm
[8];

82 
__uöt32_t
 
	m__glibc_ª£rved2
[56];

85 #i‚de‡
sigc⁄ãxt_°ru˘


90 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

93 
	#X86_FXSR_MAGIC
 0x0000

	)

95 
	ssigc⁄ãxt


97 
	mgs
, 
	m__gsh
;

98 
	mfs
, 
	m__fsh
;

99 
	mes
, 
	m__esh
;

100 
	mds
, 
	m__dsh
;

101 
	medi
;

102 
	mesi
;

103 
	mebp
;

104 
	me•
;

105 
	mebx
;

106 
	medx
;

107 
	mecx
;

108 
	móx
;

109 
	må≠no
;

110 
	mîr
;

111 
	meù
;

112 
	mcs
, 
	m__csh
;

113 
	meÊags
;

114 
	me•_©_sig«l
;

115 
	mss
, 
	m__ssh
;

116 
_Â°©e
 * 
	mÂ°©e
;

117 
	mﬁdmask
;

118 
	m¸2
;

123 
	s_Â°©e


126 
__uöt16_t
 
	mcwd
;

127 
__uöt16_t
 
	mswd
;

128 
__uöt16_t
 
	m·w
;

129 
__uöt16_t
 
	mf›
;

130 
__uöt64_t
 
	mrù
;

131 
__uöt64_t
 
	mrdp
;

132 
__uöt32_t
 
	mmxc§
;

133 
__uöt32_t
 
	mmx¸_mask
;

134 
_Âxªg
 
	m_°
[8];

135 
_xmmªg
 
	m_xmm
[16];

136 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

139 
	ssigc⁄ãxt


141 
__uöt64_t
 
	mr8
;

142 
__uöt64_t
 
	mr9
;

143 
__uöt64_t
 
	mr10
;

144 
__uöt64_t
 
	mr11
;

145 
__uöt64_t
 
	mr12
;

146 
__uöt64_t
 
	mr13
;

147 
__uöt64_t
 
	mr14
;

148 
__uöt64_t
 
	mr15
;

149 
__uöt64_t
 
	mrdi
;

150 
__uöt64_t
 
	mrsi
;

151 
__uöt64_t
 
	mrbp
;

152 
__uöt64_t
 
	mrbx
;

153 
__uöt64_t
 
	mrdx
;

154 
__uöt64_t
 
	møx
;

155 
__uöt64_t
 
	mrcx
;

156 
__uöt64_t
 
	mr•
;

157 
__uöt64_t
 
	mrù
;

158 
__uöt64_t
 
	meÊags
;

159 
	mcs
;

160 
	mgs
;

161 
	mfs
;

162 
	m__∑d0
;

163 
__uöt64_t
 
	mîr
;

164 
__uöt64_t
 
	må≠no
;

165 
__uöt64_t
 
	mﬁdmask
;

166 
__uöt64_t
 
	m¸2
;

167 
__exãnsi⁄__
 union

169 
_Â°©e
 * 
	mÂ°©e
;

170 
__uöt64_t
 
	m__Â°©e_w‹d
;

172 
__uöt64_t
 
	m__ª£rved1
 [8];

177 
	s_xßve_hdr


179 
__uöt64_t
 
	mx°©e_bv
;

180 
__uöt64_t
 
	m__glibc_ª£rved1
[2];

181 
__uöt64_t
 
	m__glibc_ª£rved2
[5];

184 
	s_ymmh_°©e


186 
__uöt32_t
 
	mymmh_•a˚
[64];

189 
	s_x°©e


191 
_Â°©e
 
	mÂ°©e
;

192 
_xßve_hdr
 
	mx°©e_hdr
;

193 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/sigevent-consts.h

19 #i‚de‡
_BITS_SIGEVENT_CONSTS_H


20 
	#_BITS_SIGEVENT_CONSTS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_AIO_H


29 
	mSIGEV_SIGNAL
 = 0,

30 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

31 
	mSIGEV_NONE
,

32 
	#SIGEV_NONE
 
SIGEV_NONE


	)

33 
	mSIGEV_THREAD
,

34 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

36 
	mSIGEV_THREAD_ID
 = 4

38 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/siginfo-consts.h

19 #i‚de‡
_BITS_SIGINFO_CONSTS_H


20 
	#_BITS_SIGINFO_CONSTS_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	~<bôs/sigöfo-¨ch.h
>

29 #i‚de‡
__SI_ASYNCIO_AFTER_SIGIO


30 
	#__SI_ASYNCIO_AFTER_SIGIO
 1

	)

37 
	mSI_ASYNCNL
 = -60,

38 
	mSI_DETHREAD
 = -7,

40 
	mSI_TKILL
,

41 
	mSI_SIGIO
,

42 #i‡
__SI_ASYNCIO_AFTER_SIGIO


43 
	mSI_ASYNCIO
,

44 
	mSI_MESGQ
,

45 
	mSI_TIMER
,

47 
	mSI_MESGQ
,

48 
	mSI_TIMER
,

49 
	mSI_ASYNCIO
,

51 
	mSI_QUEUE
,

52 
	mSI_USER
,

53 
	mSI_KERNEL
 = 0x80

55 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

56 
	#SI_DETHREAD
 
SI_DETHREAD


	)

57 
	#SI_TKILL
 
SI_TKILL


	)

58 
	#SI_SIGIO
 
SI_SIGIO


	)

59 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

60 
	#SI_MESGQ
 
SI_MESGQ


	)

61 
	#SI_TIMER
 
SI_TIMER


	)

62 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

63 
	#SI_QUEUE
 
SI_QUEUE


	)

64 
	#SI_USER
 
SI_USER


	)

65 
	#SI_KERNEL
 
SI_KERNEL


	)

69 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


73 
	mILL_ILLOPC
 = 1,

74 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

75 
	mILL_ILLOPN
,

76 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

77 
	mILL_ILLADR
,

78 
	#ILL_ILLADR
 
ILL_ILLADR


	)

79 
	mILL_ILLTRP
,

80 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

81 
	mILL_PRVOPC
,

82 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

83 
	mILL_PRVREG
,

84 
	#ILL_PRVREG
 
ILL_PRVREG


	)

85 
	mILL_COPROC
,

86 
	#ILL_COPROC
 
ILL_COPROC


	)

87 
	mILL_BADSTK
,

88 
	#ILL_BADSTK
 
ILL_BADSTK


	)

89 
	mILL_BADIADDR


90 
	#ILL_BADIADDR
 
ILL_BADIADDR


	)

96 
	mFPE_INTDIV
 = 1,

97 
	#FPE_INTDIV
 
FPE_INTDIV


	)

98 
	mFPE_INTOVF
,

99 
	#FPE_INTOVF
 
FPE_INTOVF


	)

100 
	mFPE_FLTDIV
,

101 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

102 
	mFPE_FLTOVF
,

103 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

104 
	mFPE_FLTUND
,

105 
	#FPE_FLTUND
 
FPE_FLTUND


	)

106 
	mFPE_FLTRES
,

107 
	#FPE_FLTRES
 
FPE_FLTRES


	)

108 
	mFPE_FLTINV
,

109 
	#FPE_FLTINV
 
FPE_FLTINV


	)

110 
	mFPE_FLTSUB
,

111 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

112 
	mFPE_FLTUNK
 = 14,

113 
	#FPE_FLTUNK
 
FPE_FLTUNK


	)

114 
	mFPE_CONDTRAP


115 
	#FPE_CONDTRAP
 
FPE_CONDTRAP


	)

121 
	mSEGV_MAPERR
 = 1,

122 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

123 
	mSEGV_ACCERR
,

124 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

125 
	mSEGV_BNDERR
,

126 
	#SEGV_BNDERR
 
SEGV_BNDERR


	)

127 
	mSEGV_PKUERR
,

128 
	#SEGV_PKUERR
 
SEGV_PKUERR


	)

129 
	mSEGV_ACCADI
,

130 
	#SEGV_ACCADI
 
SEGV_ACCADI


	)

131 
	mSEGV_ADIDERR
,

132 
	#SEGV_ADIDERR
 
SEGV_ADIDERR


	)

133 
	mSEGV_ADIPERR


134 
	#SEGV_ADIPERR
 
SEGV_ADIPERR


	)

140 
	mBUS_ADRALN
 = 1,

141 
	#BUS_ADRALN
 
BUS_ADRALN


	)

142 
	mBUS_ADRERR
,

143 
	#BUS_ADRERR
 
BUS_ADRERR


	)

144 
	mBUS_OBJERR
,

145 
	#BUS_OBJERR
 
BUS_OBJERR


	)

146 
	mBUS_MCEERR_AR
,

147 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

148 
	mBUS_MCEERR_AO


149 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

153 #ifde‡
__USE_XOPEN_EXTENDED


157 
	mTRAP_BRKPT
 = 1,

158 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

159 
	mTRAP_TRACE
,

160 
	#TRAP_TRACE
 
TRAP_TRACE


	)

161 
	mTRAP_BRANCH
,

162 
	#TRAP_BRANCH
 
TRAP_BRANCH


	)

163 
	mTRAP_HWBKPT
,

164 
	#TRAP_HWBKPT
 
TRAP_HWBKPT


	)

165 
	mTRAP_UNK


166 
	#TRAP_UNK
 
TRAP_UNK


	)

170 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


174 
	mCLD_EXITED
 = 1,

175 
	#CLD_EXITED
 
CLD_EXITED


	)

176 
	mCLD_KILLED
,

177 
	#CLD_KILLED
 
CLD_KILLED


	)

178 
	mCLD_DUMPED
,

179 
	#CLD_DUMPED
 
CLD_DUMPED


	)

180 
	mCLD_TRAPPED
,

181 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

182 
	mCLD_STOPPED
,

183 
	#CLD_STOPPED
 
CLD_STOPPED


	)

184 
	mCLD_CONTINUED


185 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

191 
	mPOLL_IN
 = 1,

192 
	#POLL_IN
 
POLL_IN


	)

193 
	mPOLL_OUT
,

194 
	#POLL_OUT
 
POLL_OUT


	)

195 
	mPOLL_MSG
,

196 
	#POLL_MSG
 
POLL_MSG


	)

197 
	mPOLL_ERR
,

198 
	#POLL_ERR
 
POLL_ERR


	)

199 
	mPOLL_PRI
,

200 
	#POLL_PRI
 
POLL_PRI


	)

201 
	mPOLL_HUP


202 
	#POLL_HUP
 
POLL_HUP


	)

208 #ifde‡
__USE_GNU


209 
	~<bôs/sigöfo-c⁄°s-¨ch.h
>

	@/usr/include/bits/signal_ext.h

19 #i‚de‡
_SIGNAL_H


23 #ifde‡
__USE_GNU


29 
tgkûl
 (
__pid_t
 
__tgid
, __pid_à
__tid
, 
__sig«l
);

	@/usr/include/bits/signum.h

19 #i‚de‡
_BITS_SIGNUM_H


20 
	#_BITS_SIGNUM_H
 1

	)

22 #i‚de‡
_SIGNAL_H


26 
	~<bôs/signum-gíîic.h
>

31 
	#SIGSTKFLT
 16

	)

32 
	#SIGPWR
 30

	)

34 #unde‡
SIGBUS


35 
	#SIGBUS
 7

	)

36 #unde‡
SIGUSR1


37 
	#SIGUSR1
 10

	)

38 #unde‡
SIGUSR2


39 
	#SIGUSR2
 12

	)

40 #unde‡
SIGCHLD


41 
	#SIGCHLD
 17

	)

42 #unde‡
SIGCONT


43 
	#SIGCONT
 18

	)

44 #unde‡
SIGSTOP


45 
	#SIGSTOP
 19

	)

46 #unde‡
SIGTSTP


47 
	#SIGTSTP
 20

	)

48 #unde‡
SIGURG


49 
	#SIGURG
 23

	)

50 #unde‡
SIGPOLL


51 
	#SIGPOLL
 29

	)

52 #unde‡
SIGSYS


53 
	#SIGSYS
 31

	)

55 #unde‡
__SIGRTMAX


56 
	#__SIGRTMAX
 64

	)

	@/usr/include/bits/sigstack.h

19 #i‚de‡
_BITS_SIGSTACK_H


20 
	#_BITS_SIGSTACK_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


27 
	#MINSIGSTKSZ
 2048

	)

30 
	#SIGSTKSZ
 8192

	)

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/ty≥s/__sig£t_t.h
>

31 
	$±hªad_sigmask
 (
__how
,

32 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_IB
 27

	)

72 
	#PF_MPLS
 28

	)

73 
	#PF_CAN
 29

	)

74 
	#PF_TIPC
 30

	)

75 
	#PF_BLUETOOTH
 31

	)

76 
	#PF_IUCV
 32

	)

77 
	#PF_RXRPC
 33

	)

78 
	#PF_ISDN
 34

	)

79 
	#PF_PHONET
 35

	)

80 
	#PF_IEEE802154
 36

	)

81 
	#PF_CAIF
 37

	)

82 
	#PF_ALG
 38

	)

83 
	#PF_NFC
 39

	)

84 
	#PF_VSOCK
 40

	)

85 
	#PF_KCM
 41

	)

86 
	#PF_QIPCRTR
 42

	)

87 
	#PF_SMC
 43

	)

88 
	#PF_XDP
 44

	)

89 
	#PF_MAX
 45

	)

92 
	#AF_UNSPEC
 
PF_UNSPEC


	)

93 
	#AF_LOCAL
 
PF_LOCAL


	)

94 
	#AF_UNIX
 
PF_UNIX


	)

95 
	#AF_FILE
 
PF_FILE


	)

96 
	#AF_INET
 
PF_INET


	)

97 
	#AF_AX25
 
PF_AX25


	)

98 
	#AF_IPX
 
PF_IPX


	)

99 
	#AF_APPLETALK
 
PF_APPLETALK


	)

100 
	#AF_NETROM
 
PF_NETROM


	)

101 
	#AF_BRIDGE
 
PF_BRIDGE


	)

102 
	#AF_ATMPVC
 
PF_ATMPVC


	)

103 
	#AF_X25
 
PF_X25


	)

104 
	#AF_INET6
 
PF_INET6


	)

105 
	#AF_ROSE
 
PF_ROSE


	)

106 
	#AF_DEC√t
 
PF_DEC√t


	)

107 
	#AF_NETBEUI
 
PF_NETBEUI


	)

108 
	#AF_SECURITY
 
PF_SECURITY


	)

109 
	#AF_KEY
 
PF_KEY


	)

110 
	#AF_NETLINK
 
PF_NETLINK


	)

111 
	#AF_ROUTE
 
PF_ROUTE


	)

112 
	#AF_PACKET
 
PF_PACKET


	)

113 
	#AF_ASH
 
PF_ASH


	)

114 
	#AF_ECONET
 
PF_ECONET


	)

115 
	#AF_ATMSVC
 
PF_ATMSVC


	)

116 
	#AF_RDS
 
PF_RDS


	)

117 
	#AF_SNA
 
PF_SNA


	)

118 
	#AF_IRDA
 
PF_IRDA


	)

119 
	#AF_PPPOX
 
PF_PPPOX


	)

120 
	#AF_WANPIPE
 
PF_WANPIPE


	)

121 
	#AF_LLC
 
PF_LLC


	)

122 
	#AF_IB
 
PF_IB


	)

123 
	#AF_MPLS
 
PF_MPLS


	)

124 
	#AF_CAN
 
PF_CAN


	)

125 
	#AF_TIPC
 
PF_TIPC


	)

126 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

127 
	#AF_IUCV
 
PF_IUCV


	)

128 
	#AF_RXRPC
 
PF_RXRPC


	)

129 
	#AF_ISDN
 
PF_ISDN


	)

130 
	#AF_PHONET
 
PF_PHONET


	)

131 
	#AF_IEEE802154
 
PF_IEEE802154


	)

132 
	#AF_CAIF
 
PF_CAIF


	)

133 
	#AF_ALG
 
PF_ALG


	)

134 
	#AF_NFC
 
PF_NFC


	)

135 
	#AF_VSOCK
 
PF_VSOCK


	)

136 
	#AF_KCM
 
PF_KCM


	)

137 
	#AF_QIPCRTR
 
PF_QIPCRTR


	)

138 
	#AF_SMC
 
PF_SMC


	)

139 
	#AF_XDP
 
PF_XDP


	)

140 
	#AF_MAX
 
PF_MAX


	)

146 
	#SOL_RAW
 255

	)

147 
	#SOL_DECNET
 261

	)

148 
	#SOL_X25
 262

	)

149 
	#SOL_PACKET
 263

	)

150 
	#SOL_ATM
 264

	)

151 
	#SOL_AAL
 265

	)

152 
	#SOL_IRDA
 266

	)

153 
	#SOL_NETBEUI
 267

	)

154 
	#SOL_LLC
 268

	)

155 
	#SOL_DCCP
 269

	)

156 
	#SOL_NETLINK
 270

	)

157 
	#SOL_TIPC
 271

	)

158 
	#SOL_RXRPC
 272

	)

159 
	#SOL_PPPOL2TP
 273

	)

160 
	#SOL_BLUETOOTH
 274

	)

161 
	#SOL_PNPIPE
 275

	)

162 
	#SOL_RDS
 276

	)

163 
	#SOL_IUCV
 277

	)

164 
	#SOL_CAIF
 278

	)

165 
	#SOL_ALG
 279

	)

166 
	#SOL_NFC
 280

	)

167 
	#SOL_KCM
 281

	)

168 
	#SOL_TLS
 282

	)

169 
	#SOL_XDP
 283

	)

172 
	#SOMAXCONN
 4096

	)

175 
	~<bôs/sockaddr.h
>

178 
	ssockaddr


180 
__SOCKADDR_COMMON
 (
ß_
);

181 
	mß_d©a
[14];

187 
	#__ss_Æig¡y≥
 

	)

188 
	#_SS_PADSIZE
 \

189 (
_SS_SIZE
 - 
__SOCKADDR_COMMON_SIZE
 -  (
__ss_Æig¡y≥
))

	)

191 
	ssockaddr_°‹age


193 
__SOCKADDR_COMMON
 (
ss_
);

194 
	m__ss_∑ddög
[
_SS_PADSIZE
];

195 
__ss_Æig¡y≥
 
	m__ss_Æign
;

202 
	mMSG_OOB
 = 0x01,

203 
	#MSG_OOB
 
MSG_OOB


	)

204 
	mMSG_PEEK
 = 0x02,

205 
	#MSG_PEEK
 
MSG_PEEK


	)

206 
	mMSG_DONTROUTE
 = 0x04,

207 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

208 #ifde‡
__USE_GNU


210 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

211 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

213 
	mMSG_CTRUNC
 = 0x08,

214 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

215 
	mMSG_PROXY
 = 0x10,

216 
	#MSG_PROXY
 
MSG_PROXY


	)

217 
	mMSG_TRUNC
 = 0x20,

218 
	#MSG_TRUNC
 
MSG_TRUNC


	)

219 
	mMSG_DONTWAIT
 = 0x40,

220 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

221 
	mMSG_EOR
 = 0x80,

222 
	#MSG_EOR
 
MSG_EOR


	)

223 
	mMSG_WAITALL
 = 0x100,

224 
	#MSG_WAITALL
 
MSG_WAITALL


	)

225 
	mMSG_FIN
 = 0x200,

226 
	#MSG_FIN
 
MSG_FIN


	)

227 
	mMSG_SYN
 = 0x400,

228 
	#MSG_SYN
 
MSG_SYN


	)

229 
	mMSG_CONFIRM
 = 0x800,

230 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

231 
	mMSG_RST
 = 0x1000,

232 
	#MSG_RST
 
MSG_RST


	)

233 
	mMSG_ERRQUEUE
 = 0x2000,

234 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

235 
	mMSG_NOSIGNAL
 = 0x4000,

236 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

237 
	mMSG_MORE
 = 0x8000,

238 
	#MSG_MORE
 
MSG_MORE


	)

239 
	mMSG_WAITFORONE
 = 0x10000,

240 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

241 
	mMSG_BATCH
 = 0x40000,

242 
	#MSG_BATCH
 
MSG_BATCH


	)

243 
	mMSG_ZEROCOPY
 = 0x4000000,

244 
	#MSG_ZEROCOPY
 
MSG_ZEROCOPY


	)

245 
	mMSG_FASTOPEN
 = 0x20000000,

246 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

248 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

251 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

257 
	smsghdr


259 *
	mmsg_«me
;

260 
sockÀn_t
 
	mmsg_«mñí
;

262 
iovec
 *
	mmsg_iov
;

263 
size_t
 
	mmsg_iovÀn
;

265 *
	mmsg_c⁄åﬁ
;

266 
size_t
 
	mmsg_c⁄åﬁÀn
;

271 
	mmsg_Êags
;

275 
	scmsghdr


277 
size_t
 
	mcmsg_Àn
;

282 
	mcmsg_Àvñ
;

283 
	mcmsg_ty≥
;

284 #i‡
__glibc_c99_Êex¨r_avaûabÀ


285 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

290 #i‡
__glibc_c99_Êex¨r_avaûabÀ


291 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

293 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

295 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

296 
	#CMSG_FIRSTHDR
(
mhdr
) \

297 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

298 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

299 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

300 & (
size_t
Ë~( (size_tË- 1))

	)

301 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

302 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

303 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

305 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

306 
cmsghdr
 *
__cmsg
Ë
__THROW
;

307 #ifde‡
__USE_EXTERN_INLINES


308 #i‚de‡
_EXTERN_INLINE


309 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

311 
_EXTERN_INLINE
 
cmsghdr
 *

312 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

314 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

316  (
cmsghdr
 *) 0;

318 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

319 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

320 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


321 + 
__mhdr
->
msg_c⁄åﬁÀn
)

322 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

323 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

325  (
cmsghdr
 *) 0;

326  
__cmsg
;

327 
	}
}

334 
	mSCM_RIGHTS
 = 0x01

335 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

336 #ifde‡
__USE_GNU


337 , 
	mSCM_CREDENTIALS
 = 0x02

338 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

342 #ifde‡
__USE_GNU


344 
	su¸ed


346 
pid_t
 
	mpid
;

347 
uid_t
 
	muid
;

348 
gid_t
 
	mgid
;

352 #ifde‡
__USE_MISC


353 
	~<bôs/ty≥s/time_t.h
>

354 
	~<asm/sockë.h
>

356 
	#SO_DEBUG
 1

	)

357 
	~<bôs/sockë-c⁄°™ts.h
>

361 
	slögî


363 
	ml_⁄off
;

364 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/ss_flags.h

19 #i‚de‡
_BITS_SS_FLAGS_H


20 
	#_BITS_SS_FLAGS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


29 
	mSS_ONSTACK
 = 1,

30 
	#SS_ONSTACK
 
SS_ONSTACK


	)

31 
	mSS_DISABLE


32 
	#SS_DISABLE
 
SS_DISABLE


	)

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #ifde‡
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #ifde‡
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statx.h

21 #i‚de‡
_SYS_STAT_H


22 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
°©x
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

29 #ifde‡
__has_ö˛ude


30 #i‡
__has_ö˛ude
 ("linux/stat.h")

31 
	~"löux/°©.h
"

32 #ifde‡
STATX_TYPE


33 
	#__°©x_time°amp_deföed
 1

	)

34 
	#__°©x_deföed
 1

	)

39 
	~<bôs/°©x-gíîic.h
>

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

30 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

31 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

32 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

34 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

35 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

36 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

39 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


40 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

41 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

44 #ifdef 
__USE_ISOC99


45 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

46 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

47 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

48 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

50 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

51 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

52 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

56 #ifde‡
__USE_XOPEN2K8


57 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

61 #ifde‡
__USE_GNU


62 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

63 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

64 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

65 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

66 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


70 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

72 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


73 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

74 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 1

77 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

79 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

81 #ifde‡
__USE_XOPEN2K8


82 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

85 #ifde‡
__USE_GNU


86 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

28 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

29 c⁄° *
__ª°ri˘
 
__f‹m©
,

30 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

32 #ifde‡
__va_¨g_∑ck


33 
__f‹tify_fun˘i⁄
 

34 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

36  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

37 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

38 
	}
}

39 #ñi‡!
deföed
 
__˝lu•lus


40 
	#•rötf
(
°r
, ...) \

41 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

42 
__VA_ARGS__
)

	)

45 
__f‹tify_fun˘i⁄
 

46 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

47 
__gnuc_va_li°
 
__≠
))

49  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

50 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

51 
	}
}

53 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


55 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 ...Ë
__THROW
;

58 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

59 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

60 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

62 #ifde‡
__va_¨g_∑ck


63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

65 c⁄° *
__ª°ri˘
 
__fmt
, ...))

67  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

68 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

69 
	}
}

70 #ñi‡!
deföed
 
__˝lu•lus


71 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

72 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

73 
__VA_ARGS__
)

	)

76 
__f‹tify_fun˘i⁄
 

77 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

78 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

80  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

81 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

82 
	}
}

86 #i‡
__USE_FORTIFY_LEVEL
 > 1

88 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

90 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

91 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

92 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__≠
);

93 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

94 
__gnuc_va_li°
 
__≠
);

96 #ifde‡
__va_¨g_∑ck


97 
__f‹tify_fun˘i⁄
 

98 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

100  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

101 
	`__va_¨g_∑ck
 ());

102 
	}
}

104 
__f‹tify_fun˘i⁄
 

105 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

107  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

108 
	}
}

109 #ñi‡!
deföed
 
__˝lu•lus


110 
	#¥ötf
(...) \

111 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

112 
	#Ârötf
(
°ªam
, ...) \

113 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

116 
__f‹tify_fun˘i⁄
 

117 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

119 #ifde‡
__USE_EXTERN_INLINES


120  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

124 
	}
}

126 
__f‹tify_fun˘i⁄
 

127 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

128 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

130  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

131 
	}
}

133 #ifde‡
__USE_XOPEN2K8


134 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

135 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

136 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

137 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

138 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

140 #ifde‡
__va_¨g_∑ck


141 
__f‹tify_fun˘i⁄
 

142 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

144  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

145 
	`__va_¨g_∑ck
 ());

146 
	}
}

147 #ñi‡!
deföed
 
__˝lu•lus


148 
	#d¥ötf
(
fd
, ...) \

149 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

152 
__f‹tify_fun˘i⁄
 

153 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

155  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

156 
	}
}

159 #ifde‡
__USE_GNU


161 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, ...)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

164 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

165 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

166 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

167 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

168 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

170 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

171 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

172 
__Êag
,

173 c⁄° *
__ª°ri˘
 
__f‹m©
,

174 
__gnuc_va_li°
 
__¨gs
)

175 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

177 #ifde‡
__va_¨g_∑ck


178 
__f‹tify_fun˘i⁄
 

179 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

181  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

185 
__f‹tify_fun˘i⁄
 

186 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

189  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

190 
	`__va_¨g_∑ck
 ());

191 
	}
}

193 
__f‹tify_fun˘i⁄
 

194 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

195 c⁄° *
__ª°ri˘
 
__fmt
, ...))

197  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

198 
	`__va_¨g_∑ck
 ());

199 
	}
}

200 #ñi‡!
deföed
 
__˝lu•lus


201 
	#a•rötf
(
±r
, ...) \

202 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

203 
	#__a•rötf
(
±r
, ...) \

204 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

205 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

206 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

209 
__f‹tify_fun˘i⁄
 

210 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

211 
__gnuc_va_li°
 
__≠
))

213  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

214 
	}
}

216 
__f‹tify_fun˘i⁄
 

217 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

218 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

220  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

221 
__≠
);

222 
	}
}

228 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

229 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

230 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

231 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

234 
__f‹tify_fun˘i⁄
 
__wur
 *

235 
	$gës
 (*
__°r
)

237 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

238  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

239  
	`__gës_w¨n
 (
__°r
);

240 
	}
}

243 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 *
	`__REDIRECT
 (
__fgës_Æüs
,

246 (*
__ª°ri˘
 
__s
, 
__n
,

247 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

248 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

249 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

250 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

251 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

254 
__f‹tify_fun˘i⁄
 
__wur
 *

255 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

257 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

259 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

260  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

262 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

263  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

265  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

266 
	}
}

268 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

269 
size_t
 
__size
, size_à
__n
,

270 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

271 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

272 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

273 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

274 
‰ód
Ë
__wur
;

275 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

276 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

277 
size_t
 
__size
, size_à
__n
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
),

279 
__‰ód_chk
)

280 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

283 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


284 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
)

287 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

289 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

290 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

291 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

292  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

294 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

295  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

297  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

298 
	}
}

300 #ifde‡
__USE_GNU


301 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

302 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

304 (*
__ª°ri˘
 
__s
, 
__n
,

305 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

306 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

307 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

308 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

309 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

312 
__f‹tify_fun˘i⁄
 
__wur
 *

313 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

315 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

317 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

318  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

320 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

321  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

323  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

324 
	}
}

327 #ifde‡
__USE_MISC


328 #unde‡
‰ód_u∆ocked


329 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

330 
size_t
 
__size
, size_à
__n
,

331 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

332 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

333 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

334 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

335 
‰ód_u∆ocked
Ë
__wur
;

336 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

337 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

338 
size_t
 
__size
, size_à
__n
,

339 
FILE
 *
__ª°ri˘
 
__°ªam
),

340 
__‰ód_u∆ocked_chk
)

341 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

344 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


345 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

346 
FILE
 *
__ª°ri˘
 
__°ªam
)

348 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

350 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

351 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

352 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

353  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

354 
__°ªam
);

356 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

357  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

358 
__°ªam
);

361 #ifde‡
__USE_EXTERN_INLINES


362 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

363 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

364 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

365 && 
__size
 * 
__n
 <= 8)

367 
size_t
 
__˙t
 = 
__size
 * 
__n
;

368 *
__˝å
 = (*Ë
__±r
;

369 i‡(
__˙t
 == 0)

372 ; 
__˙t
 > 0; --__cnt)

374 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
);

375 i‡(
__c
 =
EOF
)

377 *
__˝å
++ = 
__c
;

379  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

382  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

383 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‚de‡
_BITS_STDIO_LIM_H


19 
	#_BITS_STDIO_LIM_H
 1

	)

21 #i‚de‡
_STDIO_H


25 
	#L_tm≤am
 20

	)

26 
	#TMP_MAX
 238328

	)

27 
	#FILENAME_MAX
 4096

	)

29 #ifde‡
__USE_POSIX


30 
	#L_˘îmid
 9

	)

31 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


32 
	#L_cu£rid
 9

	)

36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 #ifde‡
__USE_GNU


28 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

31 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

32 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 #i‡!
__GNUC_PREREQ
 (5,0)

26 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

30 
__f‹tify_fun˘i⁄
 *

31 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

32 
size_t
 
__Àn
))

34  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

35 
	}
}

37 
__f‹tify_fun˘i⁄
 *

38 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

40  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

41 
	}
}

43 #ifde‡
__USE_GNU


44 
__f‹tify_fun˘i⁄
 *

45 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

46 
size_t
 
__Àn
))

48  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

49 
	}
}

58 
__f‹tify_fun˘i⁄
 *

59 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

63 #i‡!
	`__GNUC_PREREQ
 (5,0)

64 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

65 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

67 
	`__w¨n_mem£t_zîo_Àn
 ();

68  
__de°
;

71  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

72 
	}
}

74 #ifde‡
__USE_MISC


75 
	~<bôs/°rögs_f‹tifõd.h
>

77 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

78 
__THROW
 
	`__n⁄nuŒ
 ((1));

80 
__f‹tify_fun˘i⁄
 

81 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

83 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__bos0
 (__dest));

84 
	}
}

87 
__f‹tify_fun˘i⁄
 *

88 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

90  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

91 
	}
}

93 #ifde‡
__USE_GNU


94 
__f‹tify_fun˘i⁄
 *

95 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

97  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

98 
	}
}

102 
__f‹tify_fun˘i⁄
 *

103 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

104 
size_t
 
__Àn
))

106  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

107 
	}
}

110 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

111 
size_t
 
__de°Àn
Ë
__THROW
;

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

125 
__f‹tify_fun˘i⁄
 *

126 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

128  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

129 
	}
}

132 
__f‹tify_fun˘i⁄
 *

133 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__Àn
))

136  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

137 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

80 
__END_DECLS


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

164 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

165 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

168 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

171 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

174 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

179 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

180 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

183 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

184 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

187 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

188 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

191 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

193 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

196 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

198 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

202 
__off64_t
 
	t__loff_t
;

203 *
	t__ˇddr_t
;

206 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

209 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

214 
	t__sig_©omic_t
;

219 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


220 
	#__time64_t
 
__time_t


	)

221 #ñi‡
__TIMESIZE
 != 64

222 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

225 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/error_t.h

19 #i‚de‡
__îr‹_t_deföed


20 
	#__îr‹_t_deföed
 1

	)

22 
	tîr‹_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/sig_atomic_t.h

1 #i‚de‡
__sig_©omic_t_deföed


2 
	#__sig_©omic_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
__sig_©omic_t
 
	tsig_©omic_t
;

	@/usr/include/bits/types/sigevent_t.h

1 #i‚de‡
__sigevít_t_deföed


2 
	#__sigevít_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SIGEV_MAX_SIZE
 64

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

16 #i‚de‡
__have_±hªad_©å_t


17 
±hªad_©å_t
 
	t±hªad_©å_t
;

18 
	#__have_±hªad_©å_t
 1

	)

22 
	ssigevít


24 
__sigvÆ_t
 
	msigev_vÆue
;

25 
	msigev_signo
;

26 
	msigev_nŸify
;

30 
	m_∑d
[
__SIGEV_PAD_SIZE
];

34 
__pid_t
 
	m_tid
;

38 (*
	m_fun˘i⁄
Ë(
	m__sigvÆ_t
);

39 
±hªad_©å_t
 *
	m_©åibuã
;

40 } 
	m_sigev_thªad
;

41 } 
	m_sigev_un
;

42 } 
	tsigevít_t
;

45 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

46 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

	@/usr/include/bits/types/siginfo_t.h

1 #i‚de‡
__sigöfo_t_deföed


2 
	#__sigöfo_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SI_MAX_SIZE
 128

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

16 
	~<bôs/sigöfo-¨ch.h
>

17 #i‚de‡
__SI_ALIGNMENT


18 
	#__SI_ALIGNMENT


	)

20 #i‚de‡
__SI_BAND_TYPE


21 
	#__SI_BAND_TYPE
 

	)

23 #i‚de‡
__SI_CLOCK_T


24 
	#__SI_CLOCK_T
 
__˛ock_t


	)

26 #i‚de‡
__SI_ERRNO_THEN_CODE


27 
	#__SI_ERRNO_THEN_CODE
 1

	)

29 #i‚de‡
__SI_HAVE_SIGSYS


30 
	#__SI_HAVE_SIGSYS
 1

	)

32 #i‚de‡
__SI_SIGFAULT_ADDL


33 
	#__SI_SIGFAULT_ADDL


	)

38 
	msi_signo
;

39 #i‡
__SI_ERRNO_THEN_CODE


40 
	msi_î∫o
;

42 
	msi_code
;

44 
	msi_code
;

45 
	msi_î∫o
;

47 #i‡
__WORDSIZE
 == 64

48 
	m__∑d0
;

53 
	m_∑d
[
__SI_PAD_SIZE
];

58 
__pid_t
 
	msi_pid
;

59 
__uid_t
 
	msi_uid
;

60 } 
	m_kûl
;

65 
	msi_tid
;

66 
	msi_ovîrun
;

67 
__sigvÆ_t
 
	msi_sigvÆ
;

68 } 
	m_timî
;

73 
__pid_t
 
	msi_pid
;

74 
__uid_t
 
	msi_uid
;

75 
__sigvÆ_t
 
	msi_sigvÆ
;

76 } 
	m_π
;

81 
__pid_t
 
	msi_pid
;

82 
__uid_t
 
	msi_uid
;

83 
	msi_°©us
;

84 
__SI_CLOCK_T
 
	msi_utime
;

85 
__SI_CLOCK_T
 
	msi_°ime
;

86 } 
	m_sigchld
;

91 *
	msi_addr
;

92 
__SI_SIGFAULT_ADDL


93 
	msi_addr_lsb
;

99 *
	m_lowî
;

100 *
	m_uµî
;

101 } 
	m_addr_bnd
;

103 
__uöt32_t
 
	m_pkey
;

104 } 
	m_bounds
;

105 } 
	m_sigÁu…
;

110 
__SI_BAND_TYPE
 
	msi_b™d
;

111 
	msi_fd
;

112 } 
	m_sigpﬁl
;

115 #i‡
__SI_HAVE_SIGSYS


118 *
	m_ˇŒ_addr
;

119 
	m_sysˇŒ
;

120 
	m_¨ch
;

121 } 
	m_sigsys
;

123 } 
	m_sifõlds
;

124 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

128 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

129 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

130 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

131 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

132 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

133 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

134 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

135 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

136 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

137 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

138 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

139 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

140 
	#si_lowî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_lowî


	)

141 
	#si_uµî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_uµî


	)

142 
	#si_pkey
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_pkey


	)

143 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

144 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

145 #i‡
__SI_HAVE_SIGSYS


146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/sigval_t.h

1 #i‚de‡
__sigvÆ_t_deföed


2 
	#__sigvÆ_t_deföed


	)

4 
	~<bôs/ty≥s/__sigvÆ_t.h
>

12 #i‚de‡
__USE_POSIX199309


16 
__sigvÆ_t
 
	tsigvÆ_t
;

	@/usr/include/bits/types/stack_t.h

19 #i‚de‡
__°ack_t_deföed


20 
	#__°ack_t_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

28 *
	mss_•
;

29 
	mss_Êags
;

30 
size_t
 
	mss_size
;

31 } 
	t°ack_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
size_t
 
	m__∑d5
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/types/struct_iovec.h

19 #i‚de‡
__iovec_deföed


20 
	#__iovec_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 
	siovec


28 *
	miov_ba£
;

29 
size_t
 
	miov_Àn
;

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_osockaddr.h

1 #i‚de‡
__osockaddr_deföed


2 
	#__osockaddr_deföed
 1

	)

6 
	sosockaddr


8 
	mß_Ámûy
;

9 
	mß_d©a
[14];

	@/usr/include/bits/types/struct_sigstack.h

19 #i‚de‡
__sig°ack_deföed


20 
	#__sig°ack_deföed
 1

	)

23 
	ssig°ack


25 *
	mss_•
;

26 
	mss_⁄°ack
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

10 
	stime•ec


12 
__time_t
 
	mtv_£c
;

13 #i‡
__WORDSIZE
 == 64 \

14 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

15 || 
__TIMESIZE
 == 32

16 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

18 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


20 
	mtv_n£c
;

22 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
	stm


9 
	mtm_£c
;

10 
	mtm_mö
;

11 
	mtm_hour
;

12 
	mtm_mday
;

13 
	mtm_m⁄
;

14 
	mtm_yór
;

15 
	mtm_wday
;

16 
	mtm_yday
;

17 
	mtm_isd°
;

19 #ifdef 
__USE_MISC


20 
	mtm_gmtoff
;

21 c⁄° *
	mtm_z⁄e
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #ifde‡
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/unistd_ext.h

19 #i‚de‡
_UNISTD_H


23 #ifde‡
__USE_GNU


34 
__pid_t
 
	$gëtid
 (Ë
__THROW
;

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

42 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


43 #i‚de‡
__ENUM_IDTYPE_T


44 
	#__ENUM_IDTYPE_T
 1

	)

48 #unde‡
P_ALL


49 #unde‡
P_PID


50 #unde‡
P_PGID


54 
	mP_ALL
,

55 
	mP_PID
,

56 
	mP_PGID


57 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

62 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

64 
	~<bôs/uio_lim.h
>

65 #ifde‡
__IOV_MAX


66 
	#IOV_MAX
 
__IOV_MAX


	)

68 #unde‡
IOV_MAX


73 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

76 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

79 
	#NL_MSGMAX
 
INT_MAX


	)

83 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


84 
	#NL_NMAX
 
INT_MAX


	)

88 
	#NL_SETMAX
 
INT_MAX


	)

91 
	#NL_TEXTMAX
 
INT_MAX


	)

94 
	#NZERO
 20

	)

98 #ifde‡
INT_MAX


99 #i‡
INT_MAX
 == 32767

100 
	#WORD_BIT
 16

	)

102 #i‡
INT_MAX
 == 2147483647

103 
	#WORD_BIT
 32

	)

106 
	#WORD_BIT
 64

	)

109 #ñi‡
deföed
 
__INT_MAX__


110 #i‡
__INT_MAX__
 == 32767

111 
	#WORD_BIT
 16

	)

113 #i‡
__INT_MAX__
 == 2147483647

114 
	#WORD_BIT
 32

	)

117 
	#WORD_BIT
 64

	)

121 
	#WORD_BIT
 32

	)

125 #ifde‡
LONG_MAX


126 #i‡
LONG_MAX
 == 2147483647

127 
	#LONG_BIT
 32

	)

130 
	#LONG_BIT
 64

	)

132 #ñi‡
deföed
 
__LONG_MAX__


133 #i‡
__LONG_MAX__
 == 2147483647

134 
	#LONG_BIT
 32

	)

137 
	#LONG_BIT
 64

	)

140 
	~<bôs/w‹dsize.h
>

141 #i‡
__WORDSIZE
 == 64

142 
	#LONG_BIT
 64

	)

144 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

120 #unde‡
__USE_ISOC11


121 #unde‡
__USE_ISOC99


122 #unde‡
__USE_ISOC95


123 #unde‡
__USE_ISOCXX11


124 #unde‡
__USE_POSIX


125 #unde‡
__USE_POSIX2


126 #unde‡
__USE_POSIX199309


127 #unde‡
__USE_POSIX199506


128 #unde‡
__USE_XOPEN


129 #unde‡
__USE_XOPEN_EXTENDED


130 #unde‡
__USE_UNIX98


131 #unde‡
__USE_XOPEN2K


132 #unde‡
__USE_XOPEN2KXSI


133 #unde‡
__USE_XOPEN2K8


134 #unde‡
__USE_XOPEN2K8XSI


135 #unde‡
__USE_LARGEFILE


136 #unde‡
__USE_LARGEFILE64


137 #unde‡
__USE_FILE_OFFSET64


138 #unde‡
__USE_MISC


139 #unde‡
__USE_ATFILE


140 #unde‡
__USE_GNU


141 #unde‡
__USE_FORTIFY_LEVEL


142 #unde‡
__KERNEL_STRICT_NAMES


143 #unde‡
__GLIBC_USE_ISOC2X


144 #unde‡
__GLIBC_USE_DEPRECATED_GETS


145 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


149 #i‚de‡
_LOOSE_KERNEL_NAMES


150 
	#__KERNEL_STRICT_NAMES


	)

160 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


161 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

162 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

164 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

171 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

173 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

175 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

179 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

185 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

186 && !
deföed
 
	g_DEFAULT_SOURCE


188 #unde‡
_DEFAULT_SOURCE


189 
	#_DEFAULT_SOURCE
 1

	)

193 #ifde‡
_GNU_SOURCE


194 #unde‡
_ISOC95_SOURCE


195 
	#_ISOC95_SOURCE
 1

	)

196 #unde‡
_ISOC99_SOURCE


197 
	#_ISOC99_SOURCE
 1

	)

198 #unde‡
_ISOC11_SOURCE


199 
	#_ISOC11_SOURCE
 1

	)

200 #unde‡
_ISOC2X_SOURCE


201 
	#_ISOC2X_SOURCE
 1

	)

202 #unde‡
_POSIX_SOURCE


203 
	#_POSIX_SOURCE
 1

	)

204 #unde‡
_POSIX_C_SOURCE


205 
	#_POSIX_C_SOURCE
 200809L

	)

206 #unde‡
_XOPEN_SOURCE


207 
	#_XOPEN_SOURCE
 700

	)

208 #unde‡
_XOPEN_SOURCE_EXTENDED


209 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

210 #unde‡
_LARGEFILE64_SOURCE


211 
	#_LARGEFILE64_SOURCE
 1

	)

212 #unde‡
_DEFAULT_SOURCE


213 
	#_DEFAULT_SOURCE
 1

	)

214 #unde‡
_ATFILE_SOURCE


215 
	#_ATFILE_SOURCE
 1

	)

220 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

221 || (!
deföed
 
	g__STRICT_ANSI__
 \

222 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

223 && !
deföed
 
	g_ISOC2X_SOURCE
 \

224 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

225 && !
deföed
 
	g_XOPEN_SOURCE
))

226 #unde‡
_DEFAULT_SOURCE


227 
	#_DEFAULT_SOURCE
 1

	)

231 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

232 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

233 
	#__GLIBC_USE_ISOC2X
 1

	)

235 
	#__GLIBC_USE_ISOC2X
 0

	)

239 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

240 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

241 
	#__USE_ISOC11
 1

	)

245 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

246 || 
deföed
 
_ISOC2X_SOURCE
 \

247 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

248 
	#__USE_ISOC99
 1

	)

252 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

253 || 
deföed
 
_ISOC2X_SOURCE
 \

254 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

255 
	#__USE_ISOC95
 1

	)

258 #ifde‡
__˝lu•lus


260 #i‡
__˝lu•lus
 >= 201703L

261 
	#__USE_ISOC11
 1

	)

265 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


266 
	#__USE_ISOCXX11
 1

	)

267 
	#__USE_ISOC99
 1

	)

274 #ifde‡
_DEFAULT_SOURCE


275 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


276 
	#__USE_POSIX_IMPLICITLY
 1

	)

278 #unde‡
_POSIX_SOURCE


279 
	#_POSIX_SOURCE
 1

	)

280 #unde‡
_POSIX_C_SOURCE


281 
	#_POSIX_C_SOURCE
 200809L

	)

284 #i‡((!
deföed
 
__STRICT_ANSI__
 \

285 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

286 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

287 
	#_POSIX_SOURCE
 1

	)

288 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

289 
	#_POSIX_C_SOURCE
 2

	)

290 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

291 
	#_POSIX_C_SOURCE
 199506L

	)

292 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

293 
	#_POSIX_C_SOURCE
 200112L

	)

295 
	#_POSIX_C_SOURCE
 200809L

	)

297 
	#__USE_POSIX_IMPLICITLY
 1

	)

306 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

307 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

308 
	#_POSIX_SOURCE
 1

	)

309 #unde‡
_POSIX_C_SOURCE


310 
	#_POSIX_C_SOURCE
 199506L

	)

313 #i‡(
deföed
 
_POSIX_SOURCE
 \

314 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

315 || 
deföed
 
_XOPEN_SOURCE
)

316 
	#__USE_POSIX
 1

	)

319 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


320 
	#__USE_POSIX2
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

324 
	#__USE_POSIX199309
 1

	)

327 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

328 
	#__USE_POSIX199506
 1

	)

331 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

332 
	#__USE_XOPEN2K
 1

	)

333 #unde‡
__USE_ISOC95


334 
	#__USE_ISOC95
 1

	)

335 #unde‡
__USE_ISOC99


336 
	#__USE_ISOC99
 1

	)

339 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

340 
	#__USE_XOPEN2K8
 1

	)

341 #unde‡
_ATFILE_SOURCE


342 
	#_ATFILE_SOURCE
 1

	)

345 #ifdef 
_XOPEN_SOURCE


346 
	#__USE_XOPEN
 1

	)

347 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

348 
	#__USE_XOPEN_EXTENDED
 1

	)

349 
	#__USE_UNIX98
 1

	)

350 #unde‡
_LARGEFILE_SOURCE


351 
	#_LARGEFILE_SOURCE
 1

	)

352 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

353 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

354 
	#__USE_XOPEN2K8
 1

	)

355 
	#__USE_XOPEN2K8XSI
 1

	)

357 
	#__USE_XOPEN2K
 1

	)

358 
	#__USE_XOPEN2KXSI
 1

	)

359 #unde‡
__USE_ISOC95


360 
	#__USE_ISOC95
 1

	)

361 #unde‡
__USE_ISOC99


362 
	#__USE_ISOC99
 1

	)

365 #ifde‡
_XOPEN_SOURCE_EXTENDED


366 
	#__USE_XOPEN_EXTENDED
 1

	)

371 #ifde‡
_LARGEFILE_SOURCE


372 
	#__USE_LARGEFILE
 1

	)

375 #ifde‡
_LARGEFILE64_SOURCE


376 
	#__USE_LARGEFILE64
 1

	)

379 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

380 
	#__USE_FILE_OFFSET64
 1

	)

383 #i‡
deföed
 
_DEFAULT_SOURCE


384 
	#__USE_MISC
 1

	)

387 #ifdef 
_ATFILE_SOURCE


388 
	#__USE_ATFILE
 1

	)

391 #ifdef 
_GNU_SOURCE


392 
	#__USE_GNU
 1

	)

395 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

396 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

397 #i‡
_FORTIFY_SOURCE
 > 1

398 
	#__USE_FORTIFY_LEVEL
 2

	)

400 
	#__USE_FORTIFY_LEVEL
 1

	)

403 
	#__USE_FORTIFY_LEVEL
 0

	)

410 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


411 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

413 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

428 #i‡(
deföed
 
__USE_GNU
 \

429 && (
deföed
 
	g__˝lu•lus
 \

430 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

431 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

432 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

434 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

439 
	~<°dc-¥edef.h
>

447 #unde‡
__GNU_LIBRARY__


448 
	#__GNU_LIBRARY__
 6

	)

452 
	#__GLIBC__
 2

	)

453 
	#__GLIBC_MINOR__
 31

	)

455 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

456 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

459 #i‚de‡
__ASSEMBLER__


460 #i‚de‡
_SYS_CDEFS_H


461 
	~<sys/cdefs.h
>

466 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


467 
	#__USE_LARGEFILE
 1

	)

468 
	#__USE_LARGEFILE64
 1

	)

474 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

475 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

476 && 
deföed
 
	g__exã∫_ölöe


477 
	#__USE_EXTERN_INLINES
 1

	)

485 
	~<gnu/°ubs.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<bôs/ty≥s/time_t.h
>

32 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‚de‡
__USE_XOPEN2K


34 
	~<time.h
>

37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

44 
	~<bôs/˝u-£t.h
>

47 
	#sched_¥i‹ôy
 
sched_¥i‹ôy


	)

48 
	#__sched_¥i‹ôy
 
sched_¥i‹ôy


	)

51 
__BEGIN_DECLS


54 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

55 
__THROW
;

58 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

62 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

65 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

68 
	$sched_yõld
 (Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

77 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

80 #ifde‡
__USE_GNU


82 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

83 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

86 
˝u£ç
)

	)

87 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

88 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

90 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

91 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

92 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

93 
˝u£ç
)

	)

94 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

95 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

97 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

98 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

100 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

102 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

104 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

106 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

108 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

110 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

111 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

112 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

113 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

115 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

116 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

117 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

121 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

126 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

129 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/sig£t_t.h
>

25 
	~<bôs/ty≥s/°ack_t.h
>

28 #ifde‡
__USE_MISC


29 
	#__˘x
(
Êd
Ë
	)
fld

31 
	#__˘x
(
Êd
Ë
__
 ## 
	)
fld

34 #ifde‡
__x86_64__


37 
__exãnsi⁄__
 
	tgªg_t
;

40 
	#__NGREG
 23

	)

41 #ifde‡
__USE_MISC


42 
	#NGREG
 
__NGREG


	)

46 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

48 #ifde‡
__USE_GNU


52 
	mREG_R8
 = 0,

53 
	#REG_R8
 
REG_R8


	)

54 
	mREG_R9
,

55 
	#REG_R9
 
REG_R9


	)

56 
	mREG_R10
,

57 
	#REG_R10
 
REG_R10


	)

58 
	mREG_R11
,

59 
	#REG_R11
 
REG_R11


	)

60 
	mREG_R12
,

61 
	#REG_R12
 
REG_R12


	)

62 
	mREG_R13
,

63 
	#REG_R13
 
REG_R13


	)

64 
	mREG_R14
,

65 
	#REG_R14
 
REG_R14


	)

66 
	mREG_R15
,

67 
	#REG_R15
 
REG_R15


	)

68 
	mREG_RDI
,

69 
	#REG_RDI
 
REG_RDI


	)

70 
	mREG_RSI
,

71 
	#REG_RSI
 
REG_RSI


	)

72 
	mREG_RBP
,

73 
	#REG_RBP
 
REG_RBP


	)

74 
	mREG_RBX
,

75 
	#REG_RBX
 
REG_RBX


	)

76 
	mREG_RDX
,

77 
	#REG_RDX
 
REG_RDX


	)

78 
	mREG_RAX
,

79 
	#REG_RAX
 
REG_RAX


	)

80 
	mREG_RCX
,

81 
	#REG_RCX
 
REG_RCX


	)

82 
	mREG_RSP
,

83 
	#REG_RSP
 
REG_RSP


	)

84 
	mREG_RIP
,

85 
	#REG_RIP
 
REG_RIP


	)

86 
	mREG_EFL
,

87 
	#REG_EFL
 
REG_EFL


	)

88 
	mREG_CSGSFS
,

89 
	#REG_CSGSFS
 
REG_CSGSFS


	)

90 
	mREG_ERR
,

91 
	#REG_ERR
 
REG_ERR


	)

92 
	mREG_TRAPNO
,

93 
	#REG_TRAPNO
 
REG_TRAPNO


	)

94 
	mREG_OLDMASK
,

95 
	#REG_OLDMASK
 
REG_OLDMASK


	)

96 
	mREG_CR2


97 
	#REG_CR2
 
REG_CR2


	)

101 
	s_libc_Âxªg


103 
__˘x
(
signifiˇnd
)[4];

104 
__˘x
(
exp⁄ít
);

105 
	m__glibc_ª£rved1
[3];

108 
	s_libc_xmmªg


110 
__uöt32_t
 
__˘x
(
ñemít
)[4];

113 
	s_libc_Â°©e


116 
__uöt16_t
 
__˘x
(
cwd
);

117 
__uöt16_t
 
__˘x
(
swd
);

118 
__uöt16_t
 
__˘x
(
·w
);

119 
__uöt16_t
 
__˘x
(
f›
);

120 
__uöt64_t
 
__˘x
(
rù
);

121 
__uöt64_t
 
__˘x
(
rdp
);

122 
__uöt32_t
 
__˘x
(
mxc§
);

123 
__uöt32_t
 
__˘x
(
mx¸_mask
);

124 
_libc_Âxªg
 
	m_°
[8];

125 
_libc_xmmªg
 
	m_xmm
[16];

126 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

130 
_libc_Â°©e
 *
	tÂªg£t_t
;

135 
gªg£t_t
 
__˘x
(
gªgs
);

137 
Âªg£t_t
 
__˘x
(
Âªgs
);

138 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

139 } 
	tmc⁄ãxt_t
;

142 
	suc⁄ãxt_t


144 
__˘x
(
uc_Êags
);

145 
uc⁄ãxt_t
 *
	muc_lök
;

146 
°ack_t
 
	muc_°ack
;

147 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

148 
sig£t_t
 
	muc_sigmask
;

149 
_libc_Â°©e
 
	m__Âªgs_mem
;

150 
__exãnsi⁄__
 
	m__s•
[4];

151 } 
	tuc⁄ãxt_t
;

156 
	tgªg_t
;

159 
	#__NGREG
 19

	)

160 #ifde‡
__USE_MISC


161 
	#NGREG
 
__NGREG


	)

165 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

167 #ifde‡
__USE_GNU


171 
	mREG_GS
 = 0,

172 
	#REG_GS
 
REG_GS


	)

173 
	mREG_FS
,

174 
	#REG_FS
 
REG_FS


	)

175 
	mREG_ES
,

176 
	#REG_ES
 
REG_ES


	)

177 
	mREG_DS
,

178 
	#REG_DS
 
REG_DS


	)

179 
	mREG_EDI
,

180 
	#REG_EDI
 
REG_EDI


	)

181 
	mREG_ESI
,

182 
	#REG_ESI
 
REG_ESI


	)

183 
	mREG_EBP
,

184 
	#REG_EBP
 
REG_EBP


	)

185 
	mREG_ESP
,

186 
	#REG_ESP
 
REG_ESP


	)

187 
	mREG_EBX
,

188 
	#REG_EBX
 
REG_EBX


	)

189 
	mREG_EDX
,

190 
	#REG_EDX
 
REG_EDX


	)

191 
	mREG_ECX
,

192 
	#REG_ECX
 
REG_ECX


	)

193 
	mREG_EAX
,

194 
	#REG_EAX
 
REG_EAX


	)

195 
	mREG_TRAPNO
,

196 
	#REG_TRAPNO
 
REG_TRAPNO


	)

197 
	mREG_ERR
,

198 
	#REG_ERR
 
REG_ERR


	)

199 
	mREG_EIP
,

200 
	#REG_EIP
 
REG_EIP


	)

201 
	mREG_CS
,

202 
	#REG_CS
 
REG_CS


	)

203 
	mREG_EFL
,

204 
	#REG_EFL
 
REG_EFL


	)

205 
	mREG_UESP
,

206 
	#REG_UESP
 
REG_UESP


	)

207 
	mREG_SS


208 
	#REG_SS
 
REG_SS


	)

213 
	s_libc_Âªg


215 
__˘x
(
signifiˇnd
)[4];

216 
__˘x
(
exp⁄ít
);

219 
	s_libc_Â°©e


221 
__˘x
(
cw
);

222 
__˘x
(
sw
);

223 
__˘x
(
èg
);

224 
__˘x
(
ùoff
);

225 
__˘x
(
cs£l
);

226 
__˘x
(
d©aoff
);

227 
__˘x
(
d©a£l
);

228 
_libc_Âªg
 
	m_°
[8];

229 
__˘x
(
°©us
);

233 
_libc_Â°©e
 *
	tÂªg£t_t
;

238 
gªg£t_t
 
__˘x
(
gªgs
);

241 
Âªg£t_t
 
__˘x
(
Âªgs
);

242 
__˘x
(
ﬁdmask
);

243 
__˘x
(
¸2
);

244 } 
	tmc⁄ãxt_t
;

247 
	suc⁄ãxt_t


249 
__˘x
(
uc_Êags
);

250 
uc⁄ãxt_t
 *
	muc_lök
;

251 
°ack_t
 
	muc_°ack
;

252 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

253 
sig£t_t
 
	muc_sigmask
;

254 
_libc_Â°©e
 
	m__Âªgs_mem
;

255 
	m__s•
[4];

256 } 
	tuc⁄ãxt_t
;

260 #unde‡
__˘x


	@/usr/include/asm/socket.h

2 #i‚de‡
__ASM_GENERIC_SOCKET_H


3 
	#__ASM_GENERIC_SOCKET_H


	)

5 
	~<löux/posix_ty≥s.h
>

6 
	~<asm/sockios.h
>

9 
	#SOL_SOCKET
 1

	)

11 
	#SO_DEBUG
 1

	)

12 
	#SO_REUSEADDR
 2

	)

13 
	#SO_TYPE
 3

	)

14 
	#SO_ERROR
 4

	)

15 
	#SO_DONTROUTE
 5

	)

16 
	#SO_BROADCAST
 6

	)

17 
	#SO_SNDBUF
 7

	)

18 
	#SO_RCVBUF
 8

	)

19 
	#SO_SNDBUFFORCE
 32

	)

20 
	#SO_RCVBUFFORCE
 33

	)

21 
	#SO_KEEPALIVE
 9

	)

22 
	#SO_OOBINLINE
 10

	)

23 
	#SO_NO_CHECK
 11

	)

24 
	#SO_PRIORITY
 12

	)

25 
	#SO_LINGER
 13

	)

26 
	#SO_BSDCOMPAT
 14

	)

27 
	#SO_REUSEPORT
 15

	)

28 #i‚de‡
SO_PASSCRED


29 
	#SO_PASSCRED
 16

	)

30 
	#SO_PEERCRED
 17

	)

31 
	#SO_RCVLOWAT
 18

	)

32 
	#SO_SNDLOWAT
 19

	)

33 
	#SO_RCVTIMEO_OLD
 20

	)

34 
	#SO_SNDTIMEO_OLD
 21

	)

38 
	#SO_SECURITY_AUTHENTICATION
 22

	)

39 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

40 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

42 
	#SO_BINDTODEVICE
 25

	)

45 
	#SO_ATTACH_FILTER
 26

	)

46 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

49 
	#SO_PEERNAME
 28

	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

56 
	#SO_MARK
 36

	)

58 
	#SO_PROTOCOL
 38

	)

59 
	#SO_DOMAIN
 39

	)

61 
	#SO_RXQ_OVFL
 40

	)

63 
	#SO_WIFI_STATUS
 41

	)

64 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

65 
	#SO_PEEK_OFF
 42

	)

68 
	#SO_NOFCS
 43

	)

70 
	#SO_LOCK_FILTER
 44

	)

72 
	#SO_SELECT_ERR_QUEUE
 45

	)

74 
	#SO_BUSY_POLL
 46

	)

76 
	#SO_MAX_PACING_RATE
 47

	)

78 
	#SO_BPF_EXTENSIONS
 48

	)

80 
	#SO_INCOMING_CPU
 49

	)

82 
	#SO_ATTACH_BPF
 50

	)

83 
	#SO_DETACH_BPF
 
SO_DETACH_FILTER


	)

85 
	#SO_ATTACH_REUSEPORT_CBPF
 51

	)

86 
	#SO_ATTACH_REUSEPORT_EBPF
 52

	)

88 
	#SO_CNX_ADVICE
 53

	)

90 
	#SCM_TIMESTAMPING_OPT_STATS
 54

	)

92 
	#SO_MEMINFO
 55

	)

94 
	#SO_INCOMING_NAPI_ID
 56

	)

96 
	#SO_COOKIE
 57

	)

98 
	#SCM_TIMESTAMPING_PKTINFO
 58

	)

100 
	#SO_PEERGROUPS
 59

	)

102 
	#SO_ZEROCOPY
 60

	)

104 
	#SO_TXTIME
 61

	)

105 
	#SCM_TXTIME
 
SO_TXTIME


	)

107 
	#SO_BINDTOIFINDEX
 62

	)

109 
	#SO_TIMESTAMP_OLD
 29

	)

110 
	#SO_TIMESTAMPNS_OLD
 35

	)

111 
	#SO_TIMESTAMPING_OLD
 37

	)

113 
	#SO_TIMESTAMP_NEW
 63

	)

114 
	#SO_TIMESTAMPNS_NEW
 64

	)

115 
	#SO_TIMESTAMPING_NEW
 65

	)

117 
	#SO_RCVTIMEO_NEW
 66

	)

118 
	#SO_SNDTIMEO_NEW
 67

	)

120 
	#SO_DETACH_REUSEPORT_BPF
 68

	)

123 #i‡
__BITS_PER_LONG
 =64 || (
deföed
(
__x86_64__
Ë&& deföed(
__ILP32__
))

125 
	#SO_TIMESTAMP
 
SO_TIMESTAMP_OLD


	)

126 
	#SO_TIMESTAMPNS
 
SO_TIMESTAMPNS_OLD


	)

127 
	#SO_TIMESTAMPING
 
SO_TIMESTAMPING_OLD


	)

129 
	#SO_RCVTIMEO
 
SO_RCVTIMEO_OLD


	)

130 
	#SO_SNDTIMEO
 
SO_SNDTIMEO_OLD


	)

132 
	#SO_TIMESTAMP
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_TIMESTAMP_OLD
 : 
SO_TIMESTAMP_NEW
)

	)

133 
	#SO_TIMESTAMPNS
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_TIMESTAMPNS_OLD
 : 
SO_TIMESTAMPNS_NEW
)

	)

134 
	#SO_TIMESTAMPING
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_TIMESTAMPING_OLD
 : 
SO_TIMESTAMPING_NEW
)

	)

136 
	#SO_RCVTIMEO
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_RCVTIMEO_OLD
 : 
SO_RCVTIMEO_NEW
)

	)

137 
	#SO_SNDTIMEO
 ((
time_t
Ë=(
__kî√l_l⁄g_t
Ë? 
SO_SNDTIMEO_OLD
 : 
SO_SNDTIMEO_NEW
)

	)

140 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

141 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

142 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

	@/usr/include/bits/cpu-set.h

20 #i‚de‡
_BITS_CPU_SET_H


21 
	#_BITS_CPU_SET_H
 1

	)

23 #i‚de‡
_SCHED_H


28 
	#__CPU_SETSIZE
 1024

	)

29 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

32 
__CPU_MASK_TYPE
 
	t__˝u_mask
;

35 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

36 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

41 
__˝u_mask
 
	m__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

42 } 
	t˝u_£t_t
;

45 #i‡
__GNUC_PREREQ
 (2, 91)

46 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

47 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

49 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

51 
size_t
 
__i
; \

52 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

53 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

54 
__i
 = 0; __ò< 
__imax
; ++__i) \

55 
__bôs
[
__i
] = 0; \

56 } 0)

	)

58 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

59 (
__exãnsi⁄__
 \

60 ({ 
size_t
 
__˝u
 = (
˝u
); \

61 
__˝u
 / 8 < (
£tsize
) \

62 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

63 |
	`__CPUMASK
 (
__˝u
)) \

64 : 0; }))

	)

65 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

66 (
__exãnsi⁄__
 \

67 ({ 
size_t
 
__˝u
 = (
˝u
); \

68 
__˝u
 / 8 < (
£tsize
) \

69 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

70 &~
	`__CPUMASK
 (
__˝u
)) \

71 : 0; }))

	)

72 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

73 (
__exãnsi⁄__
 \

74 ({ 
size_t
 
__˝u
 = (
˝u
); \

75 
__˝u
 / 8 < (
£tsize
) \

76 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

77 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

78 : 0; }))

	)

80 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

81 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

83 #i‡
__GNUC_PREREQ
 (2, 91)

84 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

85 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

87 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

88 (
__exãnsi⁄__
 \

89 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

90 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

91 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

92 
size_t
 
__i
; \

93 
__i
 = 0; __ò< 
__imax
; ++__i) \

94 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

96 
__i
 =
__imax
; }))

	)

99 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

100 (
__exãnsi⁄__
 \

101 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

102 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

103 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

104 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

105 
size_t
 
__i
; \

106 
__i
 = 0; __ò< 
__imax
; ++__i) \

107 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

108 
__de°
; }))

	)

110 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

111 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

112 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

113 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

115 
__BEGIN_DECLS


117 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

118 
__THROW
;

119 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

120 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

122 
__END_DECLS


	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/ty≥s/°ru˘_iovec.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

205 
	#F_ADD_SEALS
 1033

	)

206 
	#F_GET_SEALS
 1034

	)

208 
	#F_GET_RW_HINT
 1035

	)

209 
	#F_SET_RW_HINT
 1036

	)

210 
	#F_GET_FILE_RW_HINT
 1037

	)

211 
	#F_SET_FILE_RW_HINT
 1038

	)

213 #ifde‡
__USE_XOPEN2K8


214 
	#F_DUPFD_CLOEXEC
 1030

	)

219 
	#FD_CLOEXEC
 1

	)

221 #i‚de‡
F_RDLCK


223 
	#F_RDLCK
 0

	)

224 
	#F_WRLCK
 1

	)

225 
	#F_UNLCK
 2

	)

230 #i‚de‡
F_EXLCK


231 
	#F_EXLCK
 4

	)

232 
	#F_SHLCK
 8

	)

235 #ifde‡
__USE_MISC


237 
	#LOCK_SH
 1

	)

238 
	#LOCK_EX
 2

	)

239 
	#LOCK_NB
 4

	)

241 
	#LOCK_UN
 8

	)

244 #ifde‡
__USE_GNU


245 
	#LOCK_MAND
 32

	)

246 
	#LOCK_READ
 64

	)

247 
	#LOCK_WRITE
 128

	)

248 
	#LOCK_RW
 192

	)

251 #ifde‡
__USE_GNU


253 
	#DN_ACCESS
 0x00000001

	)

254 
	#DN_MODIFY
 0x00000002

	)

255 
	#DN_CREATE
 0x00000004

	)

256 
	#DN_DELETE
 0x00000008

	)

257 
	#DN_RENAME
 0x00000010

	)

258 
	#DN_ATTRIB
 0x00000020

	)

259 
	#DN_MULTISHOT
 0x80000000

	)

263 #ifde‡
__USE_GNU


265 
	e__pid_ty≥


267 
	mF_OWNER_TID
 = 0,

268 
	mF_OWNER_PID
,

269 
	mF_OWNER_PGRP
,

270 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


274 
	sf_ow√r_ex


276 
__pid_ty≥
 
	mty≥
;

277 
__pid_t
 
	mpid
;

281 #ifde‡
__USE_GNU


283 
	#F_SEAL_SEAL
 0x0001

	)

284 
	#F_SEAL_SHRINK
 0x0002

	)

285 
	#F_SEAL_GROW
 0x0004

	)

286 
	#F_SEAL_WRITE
 0x0008

	)

287 
	#F_SEAL_FUTURE_WRITE
 0x0010

	)

291 #ifde‡
__USE_GNU


293 
	#RWF_WRITE_LIFE_NOT_SET
 0

	)

294 
	#RWH_WRITE_LIFE_NONE
 1

	)

295 
	#RWH_WRITE_LIFE_SHORT
 2

	)

296 
	#RWH_WRITE_LIFE_MEDIUM
 3

	)

297 
	#RWH_WRITE_LIFE_LONG
 4

	)

298 
	#RWH_WRITE_LIFE_EXTREME
 5

	)

303 #ifdef 
__USE_MISC


304 
	#FAPPEND
 
O_APPEND


	)

305 
	#FFSYNC
 
O_FSYNC


	)

306 
	#FASYNC
 
O_ASYNC


	)

307 
	#FNONBLOCK
 
O_NONBLOCK


	)

308 
	#FNDELAY
 
O_NDELAY


	)

311 #i‚de‡
__POSIX_FADV_DONTNEED


312 
	#__POSIX_FADV_DONTNEED
 4

	)

313 
	#__POSIX_FADV_NOREUSE
 5

	)

316 #ifde‡
__USE_XOPEN2K


317 
	#POSIX_FADV_NORMAL
 0

	)

318 
	#POSIX_FADV_RANDOM
 1

	)

319 
	#POSIX_FADV_SEQUENTIAL
 2

	)

320 
	#POSIX_FADV_WILLNEED
 3

	)

321 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

322 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

326 #ifde‡
__USE_GNU


328 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

331 
	#SYNC_FILE_RANGE_WRITE
 2

	)

334 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

339 
	#SYNC_FILE_RANGE_WRITE_AND_WAIT
 (
SYNC_FILE_RANGE_WRITE
 \

340 | 
SYNC_FILE_RANGE_WAIT_BEFORE
 \

341 | 
SYNC_FILE_RANGE_WAIT_AFTER
)

	)

344 
	#SPLICE_F_MOVE
 1

	)

345 
	#SPLICE_F_NONBLOCK
 2

	)

348 
	#SPLICE_F_MORE
 4

	)

349 
	#SPLICE_F_GIFT
 8

	)

353 
	~<löux/ÁŒoc.h
>

357 
	sfûe_h™dÀ


359 
	mh™dÀ_byãs
;

360 
	mh™dÀ_ty≥
;

362 
	mf_h™dÀ
[0];

366 
	#MAX_HANDLE_SZ
 128

	)

370 #ifde‡
__USE_ATFILE


371 
	#AT_FDCWD
 -100

	)

374 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

375 
	#AT_REMOVEDIR
 0x200

	)

377 
	#AT_SYMLINK_FOLLOW
 0x400

	)

378 #ifde‡
__USE_GNU


379 
	#AT_NO_AUTOMOUNT
 0x800

	)

381 
	#AT_EMPTY_PATH
 0x1000

	)

382 
	#AT_STATX_SYNC_TYPE
 0x6000

	)

383 
	#AT_STATX_SYNC_AS_STAT
 0x0000

	)

384 
	#AT_STATX_FORCE_SYNC
 0x2000

	)

385 
	#AT_STATX_DONT_SYNC
 0x4000

	)

386 
	#AT_RECURSIVE
 0x8000

	)

388 
	#AT_EACCESS
 0x200

	)

392 
	g__BEGIN_DECLS


394 #ifde‡
__USE_GNU


397 
__ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

398 
__THROW
;

405 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

406 
__Êags
);

413 
__ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

414 
size_t
 
__cou¡
, 
__Êags
);

420 
__ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

421 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

422 
__Êags
);

428 
__ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

429 
__Êags
);

435 #i‚de‡
__USE_FILE_OFFSET64


436 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

438 #ifde‡
__REDIRECT


439 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

440 
__off64_t
 
__Àn
),

441 
ÁŒoˇã64
);

443 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

446 #ifde‡
__USE_LARGEFILE64


447 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

448 
__off64_t
 
__Àn
);

453 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

454 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

455 
__Êags
Ë
__THROW
;

461 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

462 
__Êags
);

466 
__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

39 
	#__DECL_SIMD_cosf16


	)

40 
	#__DECL_SIMD_cosf32


	)

41 
	#__DECL_SIMD_cosf64


	)

42 
	#__DECL_SIMD_cosf128


	)

43 
	#__DECL_SIMD_cosf32x


	)

44 
	#__DECL_SIMD_cosf64x


	)

45 
	#__DECL_SIMD_cosf128x


	)

47 
	#__DECL_SIMD_sö


	)

48 
	#__DECL_SIMD_söf


	)

49 
	#__DECL_SIMD_söl


	)

50 
	#__DECL_SIMD_söf16


	)

51 
	#__DECL_SIMD_söf32


	)

52 
	#__DECL_SIMD_söf64


	)

53 
	#__DECL_SIMD_söf128


	)

54 
	#__DECL_SIMD_söf32x


	)

55 
	#__DECL_SIMD_söf64x


	)

56 
	#__DECL_SIMD_söf128x


	)

58 
	#__DECL_SIMD_söcos


	)

59 
	#__DECL_SIMD_söcosf


	)

60 
	#__DECL_SIMD_söco¶


	)

61 
	#__DECL_SIMD_söcosf16


	)

62 
	#__DECL_SIMD_söcosf32


	)

63 
	#__DECL_SIMD_söcosf64


	)

64 
	#__DECL_SIMD_söcosf128


	)

65 
	#__DECL_SIMD_söcosf32x


	)

66 
	#__DECL_SIMD_söcosf64x


	)

67 
	#__DECL_SIMD_söcosf128x


	)

69 
	#__DECL_SIMD_log


	)

70 
	#__DECL_SIMD_logf


	)

71 
	#__DECL_SIMD_logl


	)

72 
	#__DECL_SIMD_logf16


	)

73 
	#__DECL_SIMD_logf32


	)

74 
	#__DECL_SIMD_logf64


	)

75 
	#__DECL_SIMD_logf128


	)

76 
	#__DECL_SIMD_logf32x


	)

77 
	#__DECL_SIMD_logf64x


	)

78 
	#__DECL_SIMD_logf128x


	)

80 
	#__DECL_SIMD_exp


	)

81 
	#__DECL_SIMD_expf


	)

82 
	#__DECL_SIMD_ex∂


	)

83 
	#__DECL_SIMD_expf16


	)

84 
	#__DECL_SIMD_expf32


	)

85 
	#__DECL_SIMD_expf64


	)

86 
	#__DECL_SIMD_expf128


	)

87 
	#__DECL_SIMD_expf32x


	)

88 
	#__DECL_SIMD_expf64x


	)

89 
	#__DECL_SIMD_expf128x


	)

91 
	#__DECL_SIMD_pow


	)

92 
	#__DECL_SIMD_powf


	)

93 
	#__DECL_SIMD_powl


	)

94 
	#__DECL_SIMD_powf16


	)

95 
	#__DECL_SIMD_powf32


	)

96 
	#__DECL_SIMD_powf64


	)

97 
	#__DECL_SIMD_powf128


	)

98 
	#__DECL_SIMD_powf32x


	)

99 
	#__DECL_SIMD_powf64x


	)

100 
	#__DECL_SIMD_powf128x


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/sched.h

20 #i‚de‡
_BITS_SCHED_H


21 
	#_BITS_SCHED_H
 1

	)

23 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_ISO
 4

	)

34 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_DEADLINE
 6

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PIDFD
 0x00001000

	)

49 
	#CLONE_PTRACE
 0x00002000

	)

50 
	#CLONE_VFORK
 0x00004000

	)

52 
	#CLONE_PARENT
 0x00008000

	)

54 
	#CLONE_THREAD
 0x00010000

	)

55 
	#CLONE_NEWNS
 0x00020000

	)

56 
	#CLONE_SYSVSEM
 0x00040000

	)

57 
	#CLONE_SETTLS
 0x00080000

	)

58 
	#CLONE_PARENT_SETTID
 0x00100000

	)

60 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

62 
	#CLONE_DETACHED
 0x00400000

	)

63 
	#CLONE_UNTRACED
 0x00800000

	)

65 
	#CLONE_CHILD_SETTID
 0x01000000

	)

67 
	#CLONE_NEWCGROUP
 0x02000000

	)

68 
	#CLONE_NEWUTS
 0x04000000

	)

69 
	#CLONE_NEWIPC
 0x08000000

	)

70 
	#CLONE_NEWUSER
 0x10000000

	)

71 
	#CLONE_NEWPID
 0x20000000

	)

72 
	#CLONE_NEWNET
 0x40000000

	)

73 
	#CLONE_IO
 0x80000000

	)

76 
	~<bôs/ty≥s/°ru˘_sched_∑øm.h
>

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
	$˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$gë˝u
 (*, *Ë
__THROW
;

95 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

98 
__END_DECLS


	@/usr/include/bits/siginfo-arch.h

2 #i‚de‡
_BITS_SIGINFO_ARCH_H


3 
	#_BITS_SIGINFO_ARCH_H
 1

	)

5 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

12 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

13 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

14 
	#__SI_CLOCK_T
 
__sigchld_˛ock_t


	)

	@/usr/include/bits/siginfo-consts-arch.h

2 #i‚de‡
_BITS_SIGINFO_CONSTS_ARCH_H


3 
	#_BITS_SIGINFO_CONSTS_ARCH_H
 1

	)

	@/usr/include/bits/signum-generic.h

19 #i‚def 
_BITS_SIGNUM_GENERIC_H


20 
	#_BITS_SIGNUM_GENERIC_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

29 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

30 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

32 #ifde‡
__USE_XOPEN


33 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

48 
	#SIGINT
 2

	)

49 
	#SIGILL
 4

	)

50 
	#SIGABRT
 6

	)

51 
	#SIGFPE
 8

	)

52 
	#SIGSEGV
 11

	)

53 
	#SIGTERM
 15

	)

56 
	#SIGHUP
 1

	)

57 
	#SIGQUIT
 3

	)

58 
	#SIGTRAP
 5

	)

59 
	#SIGKILL
 9

	)

60 
	#SIGBUS
 10

	)

61 
	#SIGSYS
 12

	)

62 
	#SIGPIPE
 13

	)

63 
	#SIGALRM
 14

	)

66 
	#SIGURG
 16

	)

67 
	#SIGSTOP
 17

	)

68 
	#SIGTSTP
 18

	)

69 
	#SIGCONT
 19

	)

70 
	#SIGCHLD
 20

	)

71 
	#SIGTTIN
 21

	)

72 
	#SIGTTOU
 22

	)

73 
	#SIGPOLL
 23

	)

74 
	#SIGXCPU
 24

	)

75 
	#SIGXFSZ
 25

	)

76 
	#SIGVTALRM
 26

	)

77 
	#SIGPROF
 27

	)

78 
	#SIGUSR1
 30

	)

79 
	#SIGUSR2
 31

	)

83 
	#SIGWINCH
 28

	)

86 
	#SIGIO
 
SIGPOLL


	)

87 
	#SIGIOT
 
SIGABRT


	)

88 
	#SIGCLD
 
SIGCHLD


	)

96 
	#__SIGRTMIN
 32

	)

97 
	#__SIGRTMAX
 
__SIGRTMIN


	)

100 
	#_NSIG
 (
__SIGRTMAX
 + 1)

	)

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

40 
	#_SS_SIZE
 128

	)

	@/usr/include/bits/socket-constants.h

19 #i‚de‡
_SYS_SOCKET_H


23 
	#SOL_SOCKET
 1

	)

24 
	#SO_ACCEPTCONN
 30

	)

25 
	#SO_BROADCAST
 6

	)

26 
	#SO_DONTROUTE
 5

	)

27 
	#SO_ERROR
 4

	)

28 
	#SO_KEEPALIVE
 9

	)

29 
	#SO_LINGER
 13

	)

30 
	#SO_OOBINLINE
 10

	)

31 
	#SO_RCVBUF
 8

	)

32 
	#SO_RCVLOWAT
 18

	)

33 
	#SO_RCVTIMEO
 20

	)

34 
	#SO_REUSEADDR
 2

	)

35 
	#SO_SNDBUF
 7

	)

36 
	#SO_SNDLOWAT
 19

	)

37 
	#SO_SNDTIMEO
 21

	)

38 
	#SO_TYPE
 3

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/statx-generic.h

21 #i‚de‡
_SYS_STAT_H


22 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
°©x
-
gíîic
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

25 
	~<bôs/ty≥s/°ru˘_°©x_time°amp.h
>

26 
	~<bôs/ty≥s/°ru˘_°©x.h
>

28 #i‚de‡
STATX_TYPE


29 
	#STATX_TYPE
 0x0001U

	)

30 
	#STATX_MODE
 0x0002U

	)

31 
	#STATX_NLINK
 0x0004U

	)

32 
	#STATX_UID
 0x0008U

	)

33 
	#STATX_GID
 0x0010U

	)

34 
	#STATX_ATIME
 0x0020U

	)

35 
	#STATX_MTIME
 0x0040U

	)

36 
	#STATX_CTIME
 0x0080U

	)

37 
	#STATX_INO
 0x0100U

	)

38 
	#STATX_SIZE
 0x0200U

	)

39 
	#STATX_BLOCKS
 0x0400U

	)

40 
	#STATX_BASIC_STATS
 0x07ffU

	)

41 
	#STATX_ALL
 0x0fffU

	)

42 
	#STATX_BTIME
 0x0800U

	)

43 
	#STATX__RESERVED
 0x80000000U

	)

45 
	#STATX_ATTR_COMPRESSED
 0x0004

	)

46 
	#STATX_ATTR_IMMUTABLE
 0x0010

	)

47 
	#STATX_ATTR_APPEND
 0x0020

	)

48 
	#STATX_ATTR_NODUMP
 0x0040

	)

49 
	#STATX_ATTR_ENCRYPTED
 0x0800

	)

50 
	#STATX_ATTR_AUTOMOUNT
 0x1000

	)

53 
__BEGIN_DECLS


56 
	$°©x
 (
__dúfd
, c⁄° *
__ª°ri˘
 
__∑th
, 
__Êags
,

57 
__mask
, 
°©x
 *
__ª°ri˘
 
__buf
)

58 
__THROW
 
	`__n⁄nuŒ
 ((2, 5));

60 
__END_DECLS


	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

26 
	}
}

28 
__f‹tify_fun˘i⁄
 

29 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

31 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

32 
	}
}

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

49 
	s__±hªad_öã∫Æ_li°


51 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

52 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

53 } 
	t__±hªad_li°_t
;

55 
	s__±hªad_öã∫Æ_¶i°


57 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

58 } 
	t__±hªad_¶i°_t
;

74 
	~<bôs/°ru˘_muãx.h
>

87 
	~<bôs/°ru˘_rwlock.h
>

92 
	s__±hªad_c⁄d_s


94 
__exãnsi⁄__
 union

96 
__exãnsi⁄__
 
	m__w£q
;

99 
	m__low
;

100 
	m__high
;

101 } 
	m__w£q32
;

103 
__exãnsi⁄__
 union

105 
__exãnsi⁄__
 
	m__g1_°¨t
;

108 
	m__low
;

109 
	m__high
;

110 } 
	m__g1_°¨t32
;

112 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

113 
	m__g_size
[2];

114 
	m__g1_‹ig_size
;

115 
	m__wªfs
;

116 
	m__g_sig«ls
[2];

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


21 
	#__TIMESIZE
 64

	)

24 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 
	mmodes
;

29 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

30 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

31 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

32 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

33 
	m°©us
;

34 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

35 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

36 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

37 
timevÆ
 
	mtime
;

38 
__sysˇŒ_¶⁄g_t
 
	mtick
;

39 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

40 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

41 
	mshi·
;

42 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

43 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

46 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

48 
	mèi
;

57 
	#ADJ_OFFSET
 0x0001

	)

58 
	#ADJ_FREQUENCY
 0x0002

	)

59 
	#ADJ_MAXERROR
 0x0004

	)

60 
	#ADJ_ESTERROR
 0x0008

	)

61 
	#ADJ_STATUS
 0x0010

	)

62 
	#ADJ_TIMECONST
 0x0020

	)

63 
	#ADJ_TAI
 0x0080

	)

64 
	#ADJ_SETOFFSET
 0x0100

	)

65 
	#ADJ_MICRO
 0x1000

	)

66 
	#ADJ_NANO
 0x2000

	)

67 
	#ADJ_TICK
 0x4000

	)

68 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

69 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

72 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

73 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

74 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

75 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

76 
	#MOD_STATUS
 
ADJ_STATUS


	)

77 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

78 
	#MOD_CLKB
 
ADJ_TICK


	)

79 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

80 
	#MOD_TAI
 
ADJ_TAI


	)

81 
	#MOD_MICRO
 
ADJ_MICRO


	)

82 
	#MOD_NANO
 
ADJ_NANO


	)

86 
	#STA_PLL
 0x0001

	)

87 
	#STA_PPSFREQ
 0x0002

	)

88 
	#STA_PPSTIME
 0x0004

	)

89 
	#STA_FLL
 0x0008

	)

91 
	#STA_INS
 0x0010

	)

92 
	#STA_DEL
 0x0020

	)

93 
	#STA_UNSYNC
 0x0040

	)

94 
	#STA_FREQHOLD
 0x0080

	)

96 
	#STA_PPSSIGNAL
 0x0100

	)

97 
	#STA_PPSJITTER
 0x0200

	)

98 
	#STA_PPSWANDER
 0x0400

	)

99 
	#STA_PPSERROR
 0x0800

	)

101 
	#STA_CLOCKERR
 0x1000

	)

102 
	#STA_NANO
 0x2000

	)

103 
	#STA_MODE
 0x4000

	)

104 
	#STA_CLK
 0x8000

	)

107 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 \

108 | 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/__sigval_t.h

19 #i‚de‡
____sigvÆ_t_deföed


20 
	#____sigvÆ_t_deföed


	)

23 #ifde‡
__USE_POSIX199309


24 
	usigvÆ


26 
	msivÆ_öt
;

27 *
	msivÆ_±r
;

30 
sigvÆ
 
	t__sigvÆ_t
;

32 
	u__sigvÆ


34 
	m__sivÆ_öt
;

35 *
	m__sivÆ_±r
;

38 
__sigvÆ
 
	t__sigvÆ_t
;

	@/usr/include/bits/types/struct_rusage.h

19 #i‚de‡
__rußge_deföed


20 
	#__rußge_deföed
 1

	)

22 
	~<bôs/ty≥s.h
>

23 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

33 
	srußge


36 
timevÆ
 
	mru_utime
;

38 
timevÆ
 
	mru_°ime
;

40 
__exãnsi⁄__
 union

42 
	mru_maxrss
;

43 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

47 
__exãnsi⁄__
 union

49 
	mru_ixrss
;

50 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

53 
__exãnsi⁄__
 union

55 
	mru_idrss
;

56 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

59 
__exãnsi⁄__
 union

61 
	mru_i§ss
;

62 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

66 
__exãnsi⁄__
 union

68 
	mru_möÊt
;

69 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

72 
__exãnsi⁄__
 union

74 
	mru_majÊt
;

75 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

78 
__exãnsi⁄__
 union

80 
	mru_nsw≠
;

81 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

85 
__exãnsi⁄__
 union

87 
	mru_öblock
;

88 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

91 
__exãnsi⁄__
 union

93 
	mru_oublock
;

94 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

97 
__exãnsi⁄__
 union

99 
	mru_msg¢d
;

100 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

103 
__exãnsi⁄__
 union

105 
	mru_msgrcv
;

106 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

109 
__exãnsi⁄__
 union

111 
	mru_nsig«ls
;

112 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

117 
__exãnsi⁄__
 union

119 
	mru_nvcsw
;

120 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

124 
__exãnsi⁄__
 union

126 
	mru_nivcsw
;

127 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

89 
	#__STATFS_MATCHES_STATFS64
 1

	)

91 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

93 
	#__STATFS_MATCHES_STATFS64
 0

	)

97 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio_lim.h

19 #i‚de‡
_BITS_UIO_LIM_H


20 
	#_BITS_UIO_LIM_H
 1

	)

30 
	#__IOV_MAX
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/stat.h

2 #i‚de‡
_LINUX_STAT_H


3 
	#_LINUX_STAT_H


	)

5 
	~<löux/ty≥s.h
>

7 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

9 
	#S_IFMT
 00170000

	)

10 
	#S_IFSOCK
 0140000

	)

11 
	#S_IFLNK
 0120000

	)

12 
	#S_IFREG
 0100000

	)

13 
	#S_IFBLK
 0060000

	)

14 
	#S_IFDIR
 0040000

	)

15 
	#S_IFCHR
 0020000

	)

16 
	#S_IFIFO
 0010000

	)

17 
	#S_ISUID
 0004000

	)

18 
	#S_ISGID
 0002000

	)

19 
	#S_ISVTX
 0001000

	)

21 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

22 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

23 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

24 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

25 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

26 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

27 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
)

	)

29 
	#S_IRWXU
 00700

	)

30 
	#S_IRUSR
 00400

	)

31 
	#S_IWUSR
 00200

	)

32 
	#S_IXUSR
 00100

	)

34 
	#S_IRWXG
 00070

	)

35 
	#S_IRGRP
 00040

	)

36 
	#S_IWGRP
 00020

	)

37 
	#S_IXGRP
 00010

	)

39 
	#S_IRWXO
 00007

	)

40 
	#S_IROTH
 00004

	)

41 
	#S_IWOTH
 00002

	)

42 
	#S_IXOTH
 00001

	)

56 
	s°©x_time°amp
 {

57 
__s64
 
	mtv_£c
;

58 
__u32
 
	mtv_n£c
;

59 
__s32
 
	m__ª£rved
;

99 
	s°©x
 {

101 
__u32
 
	m°x_mask
;

102 
__u32
 
	m°x_blksize
;

103 
__u64
 
	m°x_©åibuãs
;

105 
__u32
 
	m°x_∆ök
;

106 
__u32
 
	m°x_uid
;

107 
__u32
 
	m°x_gid
;

108 
__u16
 
	m°x_mode
;

109 
__u16
 
	m__•¨e0
[1];

111 
__u64
 
	m°x_öo
;

112 
__u64
 
	m°x_size
;

113 
__u64
 
	m°x_blocks
;

114 
__u64
 
	m°x_©åibuãs_mask
;

116 
°©x_time°amp
 
	m°x_©ime
;

117 
°©x_time°amp
 
	m°x_btime
;

118 
°©x_time°amp
 
	m°x_˘ime
;

119 
°©x_time°amp
 
	m°x_mtime
;

121 
__u32
 
	m°x_rdev_maj‹
;

122 
__u32
 
	m°x_rdev_mö‹
;

123 
__u32
 
	m°x_dev_maj‹
;

124 
__u32
 
	m°x_dev_mö‹
;

126 
__u64
 
	m__•¨e2
[14];

138 
	#STATX_TYPE
 0x00000001U

	)

139 
	#STATX_MODE
 0x00000002U

	)

140 
	#STATX_NLINK
 0x00000004U

	)

141 
	#STATX_UID
 0x00000008U

	)

142 
	#STATX_GID
 0x00000010U

	)

143 
	#STATX_ATIME
 0x00000020U

	)

144 
	#STATX_MTIME
 0x00000040U

	)

145 
	#STATX_CTIME
 0x00000080U

	)

146 
	#STATX_INO
 0x00000100U

	)

147 
	#STATX_SIZE
 0x00000200U

	)

148 
	#STATX_BLOCKS
 0x00000400U

	)

149 
	#STATX_BASIC_STATS
 0x000007ffU

	)

150 
	#STATX_BTIME
 0x00000800U

	)

151 
	#STATX_ALL
 0x00000fffU

	)

152 
	#STATX__RESERVED
 0x80000000U

	)

165 
	#STATX_ATTR_COMPRESSED
 0x00000004

	)

166 
	#STATX_ATTR_IMMUTABLE
 0x00000010

	)

167 
	#STATX_ATTR_APPEND
 0x00000020

	)

168 
	#STATX_ATTR_NODUMP
 0x00000040

	)

169 
	#STATX_ATTR_ENCRYPTED
 0x00000800

	)

171 
	#STATX_ATTR_AUTOMOUNT
 0x00001000

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 #i‡(
deföed
 
__˝lu•lus
 \

76 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

77 
	#__ölöe
 
ölöe


	)

79 
	#__ölöe


	)

82 
	#__THROW


	)

83 
	#__THROWNL


	)

84 
	#__NTH
(
f˘
Ë
	)
fct

91 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


92 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

94 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

99 
	#__P
(
¨gs
Ë
	)
args

100 
	#__PMT
(
¨gs
Ë
	)
args

105 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

106 
	#__STRING
(
x
Ë#x

	)

109 
	#__±r_t
 *

	)

113 #ifdef 
__˝lu•lus


114 
	#__BEGIN_DECLS
 "C" {

	)

115 
	#__END_DECLS
 }

	)

117 
	#__BEGIN_DECLS


	)

118 
	#__END_DECLS


	)

123 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

124 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

126 #i‡
__GNUC_PREREQ
 (4,3)

127 
	#__w¨nde˛
(
«me
, 
msg
) \

128 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

129 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

130 
	#__îr‹de˛
(
«me
, 
msg
) \

131 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

133 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

134 
	#__w¨«âr
(
msg
)

	)

135 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

142 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

143 
	#__Êex¨r
 []

	)

144 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

145 #ñi‡
__GNUC_PREREQ
 (2,97)

148 
	#__Êex¨r
 []

	)

149 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

150 #ñi‡
deföed
 
__GNUC__


153 
	#__Êex¨r
 [0]

	)

154 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

157 
	#__Êex¨r
 [1]

	)

158 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

172 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

174 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

175 #ifde‡
__˝lu•lus


176 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

177 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

179 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

183 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

184 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

186 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

187 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

200 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

201 
	#__©åibuã__
(
xyz
Ë

	)

207 #i‡
__GNUC_PREREQ
 (2,96)

208 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

210 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (4, 3)

216 
	#__©åibuã_Æloc_size__
(
∑øms
) \

217 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

219 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

225 #i‡
__GNUC_PREREQ
 (2,96)

226 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

228 
	#__©åibuã_puª__


	)

232 #i‡
__GNUC_PREREQ
 (2,5)

233 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

235 
	#__©åibuã_c⁄°__


	)

241 #i‡
__GNUC_PREREQ
 (3,1)

242 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

243 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

246 
	#__©åibuã_noölöe__


	)

250 #i‡
__GNUC_PREREQ
 (3,2)

251 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

253 
	#__©åibuã_dïªˇãd__


	)

259 #i‡
__GNUC_PREREQ
 (4,5) \

260 || 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

261 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

262 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

264 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

273 #i‡
	`__GNUC_PREREQ
 (2,8)

274 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

276 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

283 #i‡
	`__GNUC_PREREQ
 (2,97)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

285 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

287 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

292 #i‡
	`__GNUC_PREREQ
 (3,3)

293 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

295 
	#__n⁄nuŒ
(
∑øms
)

	)

300 #i‡
	`__GNUC_PREREQ
 (3,4)

301 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

302 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

303 #i‡
__USE_FORTIFY_LEVEL
 > 0

304 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

307 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

309 #i‚de‡
__wur


310 
	#__wur


	)

314 #i‡
	`__GNUC_PREREQ
 (3,2)

318 #unde‡
__Æways_ölöe


319 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

321 #unde‡
__Æways_ölöe


322 
	#__Æways_ölöe
 
__ölöe


	)

327 #i‡
	`__GNUC_PREREQ
 (4,3)

328 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

330 
	#__©åibuã_¨tificül__


	)

342 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

343 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

344 || 
deföed
 
__GNUC_GNU_INLINE__
)))

345 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


346 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

347 
	#__exã∫_Æways_ölöe
 \

348 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

350 
	#__exã∫_ölöe
 
__ölöe


	)

351 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

355 #ifde‡
__exã∫_Æways_ölöe


356 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

361 #i‡
	`__GNUC_PREREQ
 (4,3)

362 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

363 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

370 #i‡!
	`__GNUC_PREREQ
 (2,8)

371 
	#__exãnsi⁄__


	)

375 #i‡!
	`__GNUC_PREREQ
 (2,92)

376 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

377 
	#__ª°ri˘
 
ª°ri˘


	)

379 
	#__ª°ri˘


	)

386 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


387 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

389 #ifde‡
__GNUC__


390 
	#__ª°ri˘_¨r


	)

392 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

393 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

396 
	#__ª°ri˘_¨r


	)

401 #i‡
__GNUC__
 >= 3

402 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

403 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

405 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

406 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

409 #ifde‡
__has_©åibuã


410 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

412 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

415 #i‡(!
deföed
 
_N‹ëu∫
 \

416 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

417 && !
	$__GNUC_PREREQ
 (4,7))

418 #i‡
	`__GNUC_PREREQ
 (2,8)

419 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

421 
	#_N‹ëu∫


	)

425 #i‡
	`__GNUC_PREREQ
 (8, 0)

429 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

431 
	#__©åibuã_n⁄°rög__


	)

435 #unde‡
__©åibuã_c›y__


436 #i‡
	`__GNUC_PREREQ
 (9, 0)

439 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

441 
	#__©åibuã_c›y__
(
¨g
)

	)

444 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

445 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

446 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

447 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

448 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

449 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

452 
	~<bôs/w‹dsize.h
>

453 
	~<bôs/l⁄g-doubÀ.h
>

455 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


456 
	#__LDBL_COMPAT
 1

	)

457 #ifde‡
__REDIRECT


458 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

459 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

460 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

461 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

462 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

463 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

464 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

465 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

466 
	#__LDBL_REDIR_DECL
(
«me
) \

467 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

468 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

469 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

470 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

471 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

474 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


475 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

476 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

477 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

478 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

479 
	#__LDBL_REDIR_DECL
(
«me
)

	)

480 #ifde‡
__REDIRECT


481 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

482 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

483 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

492 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

493 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

494 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

495 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

497 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

507 #i‡!
deföed
 
__˝lu•lus
 \

508 && (
	`__GNUC_PREREQ
 (4, 9) \

509 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

510 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

511 && 
__STDC_VERSION__
 >= 201112L))

512 
	#__HAVE_GENERIC_SELECTION
 1

	)

514 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/asm/errno.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_H


3 
	#_ASM_GENERIC_ERRNO_H


	)

5 
	~<asm-gíîic/î∫o-ba£.h
>

7 
	#EDEADLK
 35

	)

8 
	#ENAMETOOLONG
 36

	)

9 
	#ENOLCK
 37

	)

18 
	#ENOSYS
 38

	)

20 
	#ENOTEMPTY
 39

	)

21 
	#ELOOP
 40

	)

22 
	#EWOULDBLOCK
 
EAGAIN


	)

23 
	#ENOMSG
 42

	)

24 
	#EIDRM
 43

	)

25 
	#ECHRNG
 44

	)

26 
	#EL2NSYNC
 45

	)

27 
	#EL3HLT
 46

	)

28 
	#EL3RST
 47

	)

29 
	#ELNRNG
 48

	)

30 
	#EUNATCH
 49

	)

31 
	#ENOCSI
 50

	)

32 
	#EL2HLT
 51

	)

33 
	#EBADE
 52

	)

34 
	#EBADR
 53

	)

35 
	#EXFULL
 54

	)

36 
	#ENOANO
 55

	)

37 
	#EBADRQC
 56

	)

38 
	#EBADSLT
 57

	)

40 
	#EDEADLOCK
 
EDEADLK


	)

42 
	#EBFONT
 59

	)

43 
	#ENOSTR
 60

	)

44 
	#ENODATA
 61

	)

45 
	#ETIME
 62

	)

46 
	#ENOSR
 63

	)

47 
	#ENONET
 64

	)

48 
	#ENOPKG
 65

	)

49 
	#EREMOTE
 66

	)

50 
	#ENOLINK
 67

	)

51 
	#EADV
 68

	)

52 
	#ESRMNT
 69

	)

53 
	#ECOMM
 70

	)

54 
	#EPROTO
 71

	)

55 
	#EMULTIHOP
 72

	)

56 
	#EDOTDOT
 73

	)

57 
	#EBADMSG
 74

	)

58 
	#EOVERFLOW
 75

	)

59 
	#ENOTUNIQ
 76

	)

60 
	#EBADFD
 77

	)

61 
	#EREMCHG
 78

	)

62 
	#ELIBACC
 79

	)

63 
	#ELIBBAD
 80

	)

64 
	#ELIBSCN
 81

	)

65 
	#ELIBMAX
 82

	)

66 
	#ELIBEXEC
 83

	)

67 
	#EILSEQ
 84

	)

68 
	#ERESTART
 85

	)

69 
	#ESTRPIPE
 86

	)

70 
	#EUSERS
 87

	)

71 
	#ENOTSOCK
 88

	)

72 
	#EDESTADDRREQ
 89

	)

73 
	#EMSGSIZE
 90

	)

74 
	#EPROTOTYPE
 91

	)

75 
	#ENOPROTOOPT
 92

	)

76 
	#EPROTONOSUPPORT
 93

	)

77 
	#ESOCKTNOSUPPORT
 94

	)

78 
	#EOPNOTSUPP
 95

	)

79 
	#EPFNOSUPPORT
 96

	)

80 
	#EAFNOSUPPORT
 97

	)

81 
	#EADDRINUSE
 98

	)

82 
	#EADDRNOTAVAIL
 99

	)

83 
	#ENETDOWN
 100

	)

84 
	#ENETUNREACH
 101

	)

85 
	#ENETRESET
 102

	)

86 
	#ECONNABORTED
 103

	)

87 
	#ECONNRESET
 104

	)

88 
	#ENOBUFS
 105

	)

89 
	#EISCONN
 106

	)

90 
	#ENOTCONN
 107

	)

91 
	#ESHUTDOWN
 108

	)

92 
	#ETOOMANYREFS
 109

	)

93 
	#ETIMEDOUT
 110

	)

94 
	#ECONNREFUSED
 111

	)

95 
	#EHOSTDOWN
 112

	)

96 
	#EHOSTUNREACH
 113

	)

97 
	#EALREADY
 114

	)

98 
	#EINPROGRESS
 115

	)

99 
	#ESTALE
 116

	)

100 
	#EUCLEAN
 117

	)

101 
	#ENOTNAM
 118

	)

102 
	#ENAVAIL
 119

	)

103 
	#EISNAM
 120

	)

104 
	#EREMOTEIO
 121

	)

105 
	#EDQUOT
 122

	)

107 
	#ENOMEDIUM
 123

	)

108 
	#EMEDIUMTYPE
 124

	)

109 
	#ECANCELED
 125

	)

110 
	#ENOKEY
 126

	)

111 
	#EKEYEXPIRED
 127

	)

112 
	#EKEYREVOKED
 128

	)

113 
	#EKEYREJECTED
 129

	)

116 
	#EOWNERDEAD
 130

	)

117 
	#ENOTRECOVERABLE
 131

	)

119 
	#ERFKILL
 132

	)

121 
	#EHWPOISON
 133

	)

	@/usr/include/asm/sockios.h

2 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


3 
	#__ASM_GENERIC_SOCKIOS_H


	)

6 
	#FIOSETOWN
 0x8901

	)

7 
	#SIOCSPGRP
 0x8902

	)

8 
	#FIOGETOWN
 0x8903

	)

9 
	#SIOCGPGRP
 0x8904

	)

10 
	#SIOCATMARK
 0x8905

	)

11 
	#SIOCGSTAMP_OLD
 0x8906

	)

12 
	#SIOCGSTAMPNS_OLD
 0x8907

	)

	@/usr/include/bits/long-double.h

21 
	#__LONG_DOUBLE_USES_FLOAT128
 0

	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/types/struct_sched_param.h

19 #i‚de‡
_BITS_TYPES_STRUCT_SCHED_PARAM


20 
	#_BITS_TYPES_STRUCT_SCHED_PARAM
 1

	)

23 
	ssched_∑øm


25 
	msched_¥i‹ôy
;

	@/usr/include/bits/types/struct_statx.h

19 #i‚de‡
_SYS_STAT_H


20 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
ty≥s
/
°ru˘_°©x
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

23 #i‚de‡
__°©x_deföed


24 
	#__°©x_deföed
 1

	)

30 
	s°©x


32 
__uöt32_t
 
	m°x_mask
;

33 
__uöt32_t
 
	m°x_blksize
;

34 
__uöt64_t
 
	m°x_©åibuãs
;

35 
__uöt32_t
 
	m°x_∆ök
;

36 
__uöt32_t
 
	m°x_uid
;

37 
__uöt32_t
 
	m°x_gid
;

38 
__uöt16_t
 
	m°x_mode
;

39 
__uöt16_t
 
	m__°©x_∑d1
[1];

40 
__uöt64_t
 
	m°x_öo
;

41 
__uöt64_t
 
	m°x_size
;

42 
__uöt64_t
 
	m°x_blocks
;

43 
__uöt64_t
 
	m°x_©åibuãs_mask
;

44 
°©x_time°amp
 
	m°x_©ime
;

45 
°©x_time°amp
 
	m°x_btime
;

46 
°©x_time°amp
 
	m°x_˘ime
;

47 
°©x_time°amp
 
	m°x_mtime
;

48 
__uöt32_t
 
	m°x_rdev_maj‹
;

49 
__uöt32_t
 
	m°x_rdev_mö‹
;

50 
__uöt32_t
 
	m°x_dev_maj‹
;

51 
__uöt32_t
 
	m°x_dev_mö‹
;

52 
__uöt64_t
 
	m__°©x_∑d2
[14];

	@/usr/include/bits/types/struct_statx_timestamp.h

19 #i‚de‡
_SYS_STAT_H


20 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
ty≥s
/
°ru˘_°©x_time°amp
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

23 #i‚de‡
__°©x_time°amp_deföed


24 
	#__°©x_time°amp_deföed
 1

	)

26 
	s°©x_time°amp


28 
__öt64_t
 
	mtv_£c
;

29 
__uöt32_t
 
	mtv_n£c
;

30 
__öt32_t
 
	m__°©x_time°amp_∑d1
[1];

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_fchÊags


	)

12 
	#__°ub_gây


	)

13 
	#__°ub_lchmod


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_s°k


	)

18 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_lchmod


	)

15 
	#__°ub_ªvoke


	)

16 
	#__°ub_£éogö


	)

17 
	#__°ub_sigªtu∫


	)

18 
	#__°ub_s°k


	)

19 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_nfs£rv˘l


	)

14 
	#__°ub___com∑t_quîy_moduÀ


	)

15 
	#__°ub___com∑t_u£lib


	)

16 
	#__°ub_chÊags


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/linux/falloc.h

2 #i‚de‡
_FALLOC_H_


3 
	#_FALLOC_H_


	)

5 
	#FALLOC_FL_KEEP_SIZE
 0x01

	)

6 
	#FALLOC_FL_PUNCH_HOLE
 0x02

	)

7 
	#FALLOC_FL_NO_HIDE_STALE
 0x04

	)

29 
	#FALLOC_FL_COLLAPSE_RANGE
 0x08

	)

43 
	#FALLOC_FL_ZERO_RANGE
 0x10

	)

60 
	#FALLOC_FL_INSERT_RANGE
 0x20

	)

78 
	#FALLOC_FL_UNSHARE_RANGE
 0x40

	)

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/posix_types.h

2 #i‚de‡
_LINUX_POSIX_TYPES_H


3 
	#_LINUX_POSIX_TYPES_H


	)

5 
	~<löux/°ddef.h
>

22 #unde‡
__FD_SETSIZE


23 
	#__FD_SETSIZE
 1024

	)

26 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

27 } 
	t__kî√l_fd_£t
;

30 (*
	t__kî√l_sigh™dÀr_t
)();

33 
	t__kî√l_key_t
;

34 
	t__kî√l_mqd_t
;

36 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/types.h

2 #i‚de‡
_LINUX_TYPES_H


3 
	#_LINUX_TYPES_H


	)

5 
	~<asm/ty≥s.h
>

7 #i‚de‡
__ASSEMBLY__


9 
	~<löux/posix_ty≥s.h
>

17 #ifde‡
__CHECKER__


18 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

20 
	#__bôwi£__


	)

22 
	#__bôwi£
 
__bôwi£__


	)

24 
__u16
 
	t__bôwi£
 
	t__À16
;

25 
__u16
 
	t__bôwi£
 
	t__be16
;

26 
__u32
 
	t__bôwi£
 
	t__À32
;

27 
__u32
 
	t__bôwi£
 
	t__be32
;

28 
__u64
 
	t__bôwi£
 
	t__À64
;

29 
__u64
 
	t__bôwi£
 
	t__be64
;

31 
__u16
 
	t__bôwi£
 
	t__sum16
;

32 
__u32
 
	t__bôwi£
 
	t__wsum
;

43 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

44 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

45 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	t__bôwi£
 
	t__pﬁl_t
;

	@/usr/include/asm-generic/errno-base.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


3 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

5 
	#EPERM
 1

	)

6 
	#ENOENT
 2

	)

7 
	#ESRCH
 3

	)

8 
	#EINTR
 4

	)

9 
	#EIO
 5

	)

10 
	#ENXIO
 6

	)

11 
	#E2BIG
 7

	)

12 
	#ENOEXEC
 8

	)

13 
	#EBADF
 9

	)

14 
	#ECHILD
 10

	)

15 
	#EAGAIN
 11

	)

16 
	#ENOMEM
 12

	)

17 
	#EACCES
 13

	)

18 
	#EFAULT
 14

	)

19 
	#ENOTBLK
 15

	)

20 
	#EBUSY
 16

	)

21 
	#EEXIST
 17

	)

22 
	#EXDEV
 18

	)

23 
	#ENODEV
 19

	)

24 
	#ENOTDIR
 20

	)

25 
	#EISDIR
 21

	)

26 
	#EINVAL
 22

	)

27 
	#ENFILE
 23

	)

28 
	#EMFILE
 24

	)

29 
	#ENOTTY
 25

	)

30 
	#ETXTBSY
 26

	)

31 
	#EFBIG
 27

	)

32 
	#ENOSPC
 28

	)

33 
	#ESPIPE
 29

	)

34 
	#EROFS
 30

	)

35 
	#EMLINK
 31

	)

36 
	#EPIPE
 32

	)

37 
	#EDOM
 33

	)

38 
	#ERANGE
 34

	)

	@/usr/include/asm/posix_types.h

2 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


3 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

5 
	~<asm/bô•îl⁄g.h
>

14 #i‚de‡
__kî√l_l⁄g_t


15 
	t__kî√l_l⁄g_t
;

16 
	t__kî√l_ul⁄g_t
;

19 #i‚de‡
__kî√l_öo_t


20 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

23 #i‚de‡
__kî√l_mode_t


24 
	t__kî√l_mode_t
;

27 #i‚de‡
__kî√l_pid_t


28 
	t__kî√l_pid_t
;

31 #i‚de‡
__kî√l_ùc_pid_t


32 
	t__kî√l_ùc_pid_t
;

35 #i‚de‡
__kî√l_uid_t


36 
	t__kî√l_uid_t
;

37 
	t__kî√l_gid_t
;

40 #i‚de‡
__kî√l_su£c⁄ds_t


41 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

44 #i‚de‡
__kî√l_daddr_t


45 
	t__kî√l_daddr_t
;

48 #i‚de‡
__kî√l_uid32_t


49 
	t__kî√l_uid32_t
;

50 
	t__kî√l_gid32_t
;

53 #i‚de‡
__kî√l_ﬁd_uid_t


54 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

55 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

58 #i‚de‡
__kî√l_ﬁd_dev_t


59 
	t__kî√l_ﬁd_dev_t
;

66 #i‚de‡
__kî√l_size_t


67 #i‡
__BITS_PER_LONG
 != 64

68 
	t__kî√l_size_t
;

69 
	t__kî√l_ssize_t
;

70 
	t__kî√l_±rdiff_t
;

72 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

74 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

78 #i‚de‡
__kî√l_fsid_t


80 
	mvÆ
[2];

81 } 
	t__kî√l_fsid_t
;

87 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

88 
	t__kî√l_loff_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

90 
	t__kî√l_time64_t
;

91 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

92 
	t__kî√l_timî_t
;

93 
	t__kî√l_˛ockid_t
;

94 * 
	t__kî√l_ˇddr_t
;

95 
	t__kî√l_uid16_t
;

96 
	t__kî√l_gid16_t
;

	@/usr/include/asm/types.h

2 #i‚de‡
_ASM_GENERIC_TYPES_H


3 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/linux/stddef.h

4 #i‚de‡
__Æways_ölöe


5 
	#__Æways_ölöe
 
__ölöe__


	)

	@/usr/include/asm-generic/int-ll64.h

9 #i‚de‡
_ASM_GENERIC_INT_LL64_H


10 
	#_ASM_GENERIC_INT_LL64_H


	)

12 
	~<asm/bô•îl⁄g.h
>

14 #i‚de‡
__ASSEMBLY__


20 
__sig√d__
 
	t__s8
;

21 
	t__u8
;

23 
__sig√d__
 
	t__s16
;

24 
	t__u16
;

26 
__sig√d__
 
	t__s32
;

27 
	t__u32
;

29 #ifde‡
__GNUC__


30 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

31 
__exãnsi⁄__
 
	t__u64
;

33 
__sig√d__
 
	t__s64
;

34 
	t__u64
;

	@/usr/include/asm/bitsperlong.h

2 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


3 
	#__ASM_GENERIC_BITS_PER_LONG


	)

12 #i‚de‡
__BITS_PER_LONG


13 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
256
7635
apps/c/helloworld/main.c
apps/c/httpclient/httpclient.c
apps/c/httpserver/httpserver.c
apps/c/memtest/memtest.c
apps/c/pthread/basic/main.c
apps/c/pthread/parallel/main.c
apps/c/pthread/pipe/main.c
apps/c/pthread/sleep/main.c
apps/c/sqlite3/main.c
apps/c/udpserver/udpserver.c
crates/axerrno/src/errno.h
ulib/c_libax/include/arpa/inet.h
ulib/c_libax/include/assert.h
ulib/c_libax/include/ctype.h
ulib/c_libax/include/dirent.h
ulib/c_libax/include/endian.h
ulib/c_libax/include/errno.h
ulib/c_libax/include/fcntl.h
ulib/c_libax/include/float.h
ulib/c_libax/include/libgen.h
ulib/c_libax/include/limits.h
ulib/c_libax/include/locale.h
ulib/c_libax/include/math.h
ulib/c_libax/include/netdb.h
ulib/c_libax/include/netinet/in.h
ulib/c_libax/include/netinet/tcp.h
ulib/c_libax/include/pthread.h
ulib/c_libax/include/setjmp.h
ulib/c_libax/include/signal.h
ulib/c_libax/include/stdarg.h
ulib/c_libax/include/stdbool.h
ulib/c_libax/include/stddef.h
ulib/c_libax/include/stdint.h
ulib/c_libax/include/stdio.h
ulib/c_libax/include/stdlib.h
ulib/c_libax/include/string.h
ulib/c_libax/include/sys/epoll.h
ulib/c_libax/include/sys/ioctl.h
ulib/c_libax/include/sys/mman.h
ulib/c_libax/include/sys/resource.h
ulib/c_libax/include/sys/select.h
ulib/c_libax/include/sys/socket.h
ulib/c_libax/include/sys/stat.h
ulib/c_libax/include/sys/time.h
ulib/c_libax/include/sys/types.h
ulib/c_libax/include/time.h
ulib/c_libax/include/unistd.h
ulib/c_libax/src/assert.c
ulib/c_libax/src/ctype.c
ulib/c_libax/src/dirent.c
ulib/c_libax/src/env.c
ulib/c_libax/src/epoll.c
ulib/c_libax/src/fcntl.c
ulib/c_libax/src/libgen.c
ulib/c_libax/src/math.c
ulib/c_libax/src/mmap.c
ulib/c_libax/src/network.c
ulib/c_libax/src/printf.c
ulib/c_libax/src/printf.h
ulib/c_libax/src/printf_config.h
ulib/c_libax/src/pthread.c
ulib/c_libax/src/resource.c
ulib/c_libax/src/select.c
ulib/c_libax/src/signal.c
ulib/c_libax/src/socket.c
ulib/c_libax/src/stat.c
ulib/c_libax/src/stdio.c
ulib/c_libax/src/stdlib.c
ulib/c_libax/src/string.c
ulib/c_libax/src/time.c
ulib/c_libax/src/unistd.c
ulib/libax/ctypes.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/libgen.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/printf.h
/usr/include/pthread.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/epoll.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/dirent_ext.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/epoll.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/floatn.h
/usr/include/bits/flt-eval-method.h
/usr/include/bits/fp-fast.h
/usr/include/bits/fp-logb.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/in.h
/usr/include/bits/iscanonical.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls-helper-functions.h
/usr/include/bits/mathcalls-narrow.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathinline.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/printf-ldbl.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/sigevent-consts.h
/usr/include/bits/siginfo-consts.h
/usr/include/bits/signal_ext.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/ss_flags.h
/usr/include/bits/stat.h
/usr/include/bits/statx.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/__sigset_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/error_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/sig_atomic_t.h
/usr/include/bits/types/sigevent_t.h
/usr/include/bits/types/siginfo_t.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/sigval_t.h
/usr/include/bits/types/stack_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/types/struct_iovec.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_osockaddr.h
/usr/include/bits/types/struct_sigstack.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/uintn-identity.h
/usr/include/bits/unistd.h
/usr/include/bits/unistd_ext.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/strings.h
/usr/include/sys/ucontext.h
/usr/include/asm/socket.h
/usr/include/bits/cpu-set.h
/usr/include/bits/endianness.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/floatn-common.h
/usr/include/bits/getopt_core.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/local_lim.h
/usr/include/bits/sched.h
/usr/include/bits/siginfo-arch.h
/usr/include/bits/siginfo-consts-arch.h
/usr/include/bits/signum-generic.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket-constants.h
/usr/include/bits/socket_type.h
/usr/include/bits/statx-generic.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/timex.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/__sigval_t.h
/usr/include/bits/types/struct_rusage.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/stat.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/long-double.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/types/struct_sched_param.h
/usr/include/bits/types/struct_statx.h
/usr/include/bits/types/struct_statx_timestamp.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/falloc.h
/usr/include/linux/limits.h
/usr/include/linux/posix_types.h
/usr/include/linux/types.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm/posix_types.h
/usr/include/asm/types.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/bitsperlong.h
